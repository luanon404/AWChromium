// ResourceCacheContainsResult.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/loader/resource_cache.mojom
//

package org.chromium.blink.mojom;

import androidx.annotation.IntDef;


public final class ResourceCacheContainsResult extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 24;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

    public static final class LifecycleState {
        private static final boolean IS_EXTENSIBLE = false;
        @IntDef({

            LifecycleState.UNKNOWN,
            LifecycleState.RUNNING,
            LifecycleState.PAUSED,
            LifecycleState.FROZEN})
        public @interface EnumType {}

        public static final int UNKNOWN = 0;
        public static final int RUNNING = 1;
        public static final int PAUSED = 2;
        public static final int FROZEN = 3;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 3;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 3;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        public static int toKnownValue(int value) {
          return value;
        }

        private LifecycleState() {}
    }
    public boolean isInCache;
    public org.chromium.mojo_base.mojom.TimeTicks ipcResponseTime;
    public boolean isVisible;
    public int lifecycleState;

    private ResourceCacheContainsResult(int version) {
        super(STRUCT_SIZE, version);
        this.isInCache = (boolean) false;
        this.isVisible = (boolean) false;
        this.lifecycleState = (int) ResourceCacheContainsResult.LifecycleState.UNKNOWN;
    }

    public ResourceCacheContainsResult() {
        this(0);
    }

    public static ResourceCacheContainsResult deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ResourceCacheContainsResult deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ResourceCacheContainsResult decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ResourceCacheContainsResult result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ResourceCacheContainsResult(elementsOrVersion);
                {
                    
                result.isInCache = decoder0.readBoolean(8, 0);
                }
                {
                    
                result.isVisible = decoder0.readBoolean(8, 1);
                }
                {
                    
                result.lifecycleState = decoder0.readInt(12);
                    ResourceCacheContainsResult.LifecycleState.validate(result.lifecycleState);
                    result.lifecycleState = ResourceCacheContainsResult.LifecycleState.toKnownValue(result.lifecycleState);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(16, false);
                result.ipcResponseTime = org.chromium.mojo_base.mojom.TimeTicks.decode(decoder1);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.isInCache, 8, 0);
        
        encoder0.encode(this.isVisible, 8, 1);
        
        encoder0.encode(this.lifecycleState, 12);
        
        encoder0.encode(this.ipcResponseTime, 16, false);
    }
}