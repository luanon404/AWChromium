//
// This file was generated by third_party/jni_zero/jni_generator.py
//
package org.chromium.android_webview;

import org.jni_zero.CheckDiscard;
import org.jni_zero.GEN_JNI;
import org.jni_zero.JniStaticTestMocker;
import org.jni_zero.NativeLibraryLoadedStatus;

import java.security.PrivateKey;

@CheckDiscard("crbug.com/993421")
class AwContentsClientBridgeJni implements AwContentsClientBridge.Natives {
    private static AwContentsClientBridge.Natives testInstance;

    public static final JniStaticTestMocker<AwContentsClientBridge.Natives> TEST_HOOKS = new JniStaticTestMocker<AwContentsClientBridge.Natives>() {
        @Override
        public void setInstanceForTesting(AwContentsClientBridge.Natives instance) {
            if (!GEN_JNI.TESTING_ENABLED) {
                throw new RuntimeException("Tried to set a JNI mock when mocks aren't enabled!");
            }
            testInstance = instance;
        }
    };

    @Override
    public void cancelJsResult(long nativeAwContentsClientBridge, AwContentsClientBridge caller, int id) {
        GEN_JNI.org_chromium_android_1webview_AwContentsClientBridge_cancelJsResult(nativeAwContentsClientBridge, caller, id);
    }

    @Override
    public void confirmJsResult(long nativeAwContentsClientBridge, AwContentsClientBridge caller, int id, String prompt) {
        GEN_JNI.org_chromium_android_1webview_AwContentsClientBridge_confirmJsResult(nativeAwContentsClientBridge, caller, id, prompt);
    }

    @Override
    public void proceedSslError(long nativeAwContentsClientBridge, AwContentsClientBridge caller, boolean proceed, int id) {
        GEN_JNI.org_chromium_android_1webview_AwContentsClientBridge_proceedSslError(nativeAwContentsClientBridge, caller, proceed, id);
    }

    @Override
    public void provideClientCertificateResponse(long nativeAwContentsClientBridge, AwContentsClientBridge caller, int id, byte[][] certChain, PrivateKey androidKey) {
        GEN_JNI.org_chromium_android_1webview_AwContentsClientBridge_provideClientCertificateResponse(nativeAwContentsClientBridge, caller, id, certChain, androidKey);
    }

    @Override
    public void takeSafeBrowsingAction(long nativeAwContentsClientBridge, AwContentsClientBridge caller, int action, boolean reporting, int requestId) {
        GEN_JNI.org_chromium_android_1webview_AwContentsClientBridge_takeSafeBrowsingAction(nativeAwContentsClientBridge, caller, action, reporting, requestId);
    }

    public static AwContentsClientBridge.Natives get() {
        if (GEN_JNI.TESTING_ENABLED) {
            if (testInstance != null) {
                return testInstance;
            }
            if (GEN_JNI.REQUIRE_MOCK) {
                throw new UnsupportedOperationException("No mock found for the native implementation of AwContentsClientBridge.Natives. " + "The current configuration requires implementations be mocked.");
            }
        }
        NativeLibraryLoadedStatus.checkLoaded();
        return new AwContentsClientBridgeJni();
    }
}
