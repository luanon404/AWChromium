// SourceRegistration.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     components/attribution_reporting/registration.mojom
//

package org.chromium.attribution_reporting.mojom;

public final class SourceRegistration extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 88;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[]{new org.chromium.mojo.bindings.DataHeader(88, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public DestinationSet destinations;
    public long sourceEventId;
    public org.chromium.mojo_base.mojom.TimeDelta expiry;
    public EventReportWindows eventReportWindows;
    public org.chromium.mojo_base.mojom.TimeDelta aggregatableReportWindow;
    public int maxEventLevelReports;
    public long priority;
    public DebugKey debugKey;
    public FilterData filterData;
    public AggregationKeys aggregationKeys;
    public boolean debugReporting;

    private SourceRegistration(int version) {
        super(STRUCT_SIZE, version);
        this.sourceEventId = (long) 0;
        this.priority = (long) 0;
        this.debugReporting = (boolean) false;
    }

    public SourceRegistration() {
        this(0);
    }

    public static SourceRegistration deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static SourceRegistration deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static SourceRegistration decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        SourceRegistration result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new SourceRegistration(elementsOrVersion);
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                result.destinations = DestinationSet.decode(decoder1);
            }
            {

                result.sourceEventId = decoder0.readLong(16);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                result.expiry = org.chromium.mojo_base.mojom.TimeDelta.decode(decoder1);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, false);
                result.eventReportWindows = EventReportWindows.decode(decoder1);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, false);
                result.aggregatableReportWindow = org.chromium.mojo_base.mojom.TimeDelta.decode(decoder1);
            }
            {

                result.maxEventLevelReports = decoder0.readInt(48);
            }
            {

                result.debugReporting = decoder0.readBoolean(52, 0);
            }
            {

                result.priority = decoder0.readLong(56);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(64, true);
                result.debugKey = DebugKey.decode(decoder1);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, false);
                result.filterData = FilterData.decode(decoder1);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, false);
                result.aggregationKeys = AggregationKeys.decode(decoder1);
            }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);

        encoder0.encode(this.destinations, 8, false);

        encoder0.encode(this.sourceEventId, 16);

        encoder0.encode(this.expiry, 24, false);

        encoder0.encode(this.eventReportWindows, 32, false);

        encoder0.encode(this.aggregatableReportWindow, 40, false);

        encoder0.encode(this.maxEventLevelReports, 48);

        encoder0.encode(this.debugReporting, 52, 0);

        encoder0.encode(this.priority, 56);

        encoder0.encode(this.debugKey, 64, true);

        encoder0.encode(this.filterData, 72, false);

        encoder0.encode(this.aggregationKeys, 80, false);
    }
}