// AbortableAdAuction_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/interest_group/ad_auction_service.mojom
//

package org.chromium.blink.mojom;

import androidx.annotation.IntDef;


class AbortableAdAuction_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<AbortableAdAuction, AbortableAdAuction.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<AbortableAdAuction, AbortableAdAuction.Proxy>() {

        @Override
        public String getName() {
            return "blink.mojom.AbortableAdAuction";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, AbortableAdAuction impl) {
            return new Stub(core, impl);
        }

        @Override
        public AbortableAdAuction[] buildArray(int size) {
          return new AbortableAdAuction[size];
        }
    };


    private static final int RESOLVED_PROMISE_PARAM_ORDINAL = 0;

    private static final int RESOLVED_PER_BUYER_SIGNALS_PROMISE_ORDINAL = 1;

    private static final int RESOLVED_BUYER_TIMEOUTS_PROMISE_ORDINAL = 2;

    private static final int RESOLVED_BUYER_CURRENCIES_PROMISE_ORDINAL = 3;

    private static final int RESOLVED_DIRECT_FROM_SELLER_SIGNALS_PROMISE_ORDINAL = 4;

    private static final int RESOLVED_DIRECT_FROM_SELLER_SIGNALS_HEADER_AD_SLOT_PROMISE_ORDINAL = 5;

    private static final int RESOLVED_AUCTION_AD_RESPONSE_PROMISE_ORDINAL = 6;

    private static final int RESOLVED_ADDITIONAL_BIDS_ORDINAL = 7;

    private static final int ABORT_ORDINAL = 8;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements AbortableAdAuction.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void resolvedPromiseParam(
AuctionAdConfigAuctionId auction, int field, String jsonValue) {

            AbortableAdAuctionResolvedPromiseParamParams _message = new AbortableAdAuctionResolvedPromiseParamParams();

            _message.auction = auction;

            _message.field = field;

            _message.jsonValue = jsonValue;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_PROMISE_PARAM_ORDINAL)));

        }


        @Override
        public void resolvedPerBuyerSignalsPromise(
AuctionAdConfigAuctionId auction, java.util.Map<org.chromium.url.internal.mojom.Origin, String> perBuyerSignals) {

            AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams _message = new AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams();

            _message.auction = auction;

            _message.perBuyerSignals = perBuyerSignals;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_PER_BUYER_SIGNALS_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedBuyerTimeoutsPromise(
AuctionAdConfigAuctionId auction, int field, AuctionAdConfigBuyerTimeouts buyerTimeouts) {

            AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams _message = new AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams();

            _message.auction = auction;

            _message.field = field;

            _message.buyerTimeouts = buyerTimeouts;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_BUYER_TIMEOUTS_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedBuyerCurrenciesPromise(
AuctionAdConfigAuctionId auction, AuctionAdConfigBuyerCurrencies perBuyerCurrencies) {

            AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams _message = new AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams();

            _message.auction = auction;

            _message.perBuyerCurrencies = perBuyerCurrencies;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_BUYER_CURRENCIES_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedDirectFromSellerSignalsPromise(
AuctionAdConfigAuctionId auction, DirectFromSellerSignals directFromSellerSignals) {

            AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams _message = new AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams();

            _message.auction = auction;

            _message.directFromSellerSignals = directFromSellerSignals;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_DIRECT_FROM_SELLER_SIGNALS_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedDirectFromSellerSignalsHeaderAdSlotPromise(
AuctionAdConfigAuctionId auction, String directFromSellerSignalsHeaderAdSlot) {

            AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams _message = new AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams();

            _message.auction = auction;

            _message.directFromSellerSignalsHeaderAdSlot = directFromSellerSignalsHeaderAdSlot;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_DIRECT_FROM_SELLER_SIGNALS_HEADER_AD_SLOT_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedAuctionAdResponsePromise(
AuctionAdConfigAuctionId auction, org.chromium.mojo_base.mojom.BigBuffer result) {

            AbortableAdAuctionResolvedAuctionAdResponsePromiseParams _message = new AbortableAdAuctionResolvedAuctionAdResponsePromiseParams();

            _message.auction = auction;

            _message.result = result;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_AUCTION_AD_RESPONSE_PROMISE_ORDINAL)));

        }


        @Override
        public void resolvedAdditionalBids(
AuctionAdConfigAuctionId auction) {

            AbortableAdAuctionResolvedAdditionalBidsParams _message = new AbortableAdAuctionResolvedAdditionalBidsParams();

            _message.auction = auction;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(RESOLVED_ADDITIONAL_BIDS_ORDINAL)));

        }


        @Override
        public void abort(
) {

            AbortableAdAuctionAbortParams _message = new AbortableAdAuctionAbortParams();


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ABORT_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<AbortableAdAuction> {

        Stub(org.chromium.mojo.system.Core core, AbortableAdAuction impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                AbortableAdAuction_Internal.MANAGER, messageWithHeader);





                    case RESOLVED_PROMISE_PARAM_ORDINAL: {

                        AbortableAdAuctionResolvedPromiseParamParams data =
                                AbortableAdAuctionResolvedPromiseParamParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedPromiseParam(data.auction, data.field, data.jsonValue);
                        return true;
                    }





                    case RESOLVED_PER_BUYER_SIGNALS_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams data =
                                AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedPerBuyerSignalsPromise(data.auction, data.perBuyerSignals);
                        return true;
                    }





                    case RESOLVED_BUYER_TIMEOUTS_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams data =
                                AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedBuyerTimeoutsPromise(data.auction, data.field, data.buyerTimeouts);
                        return true;
                    }





                    case RESOLVED_BUYER_CURRENCIES_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams data =
                                AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedBuyerCurrenciesPromise(data.auction, data.perBuyerCurrencies);
                        return true;
                    }





                    case RESOLVED_DIRECT_FROM_SELLER_SIGNALS_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams data =
                                AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedDirectFromSellerSignalsPromise(data.auction, data.directFromSellerSignals);
                        return true;
                    }





                    case RESOLVED_DIRECT_FROM_SELLER_SIGNALS_HEADER_AD_SLOT_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams data =
                                AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedDirectFromSellerSignalsHeaderAdSlotPromise(data.auction, data.directFromSellerSignalsHeaderAdSlot);
                        return true;
                    }





                    case RESOLVED_AUCTION_AD_RESPONSE_PROMISE_ORDINAL: {

                        AbortableAdAuctionResolvedAuctionAdResponsePromiseParams data =
                                AbortableAdAuctionResolvedAuctionAdResponsePromiseParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedAuctionAdResponsePromise(data.auction, data.result);
                        return true;
                    }





                    case RESOLVED_ADDITIONAL_BIDS_ORDINAL: {

                        AbortableAdAuctionResolvedAdditionalBidsParams data =
                                AbortableAdAuctionResolvedAdditionalBidsParams.deserialize(messageWithHeader.getPayload());

                        getImpl().resolvedAdditionalBids(data.auction);
                        return true;
                    }





                    case ABORT_ORDINAL: {

                        AbortableAdAuctionAbortParams.deserialize(messageWithHeader.getPayload());

                        getImpl().abort();
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), AbortableAdAuction_Internal.MANAGER, messageWithHeader, receiver);




















                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class AbortableAdAuctionResolvedPromiseParamParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 40;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public int field;
        public String jsonValue;

        private AbortableAdAuctionResolvedPromiseParamParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedPromiseParamParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedPromiseParamParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedPromiseParamParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedPromiseParamParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedPromiseParamParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedPromiseParamParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    result.field = decoder0.readInt(24);
                        AuctionAdConfigField.validate(result.field);
                        result.field = AuctionAdConfigField.toKnownValue(result.field);
                    }
                    {
                        
                    result.jsonValue = decoder0.readString(32, true);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.field, 24);
            
            encoder0.encode(this.jsonValue, 32, true);
        }
    }



    
    static final class AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public java.util.Map<org.chromium.url.internal.mojom.Origin, String> perBuyerSignals;

        private AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedPerBuyerSignalsPromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, true);
                    if (decoder1 == null) {
                        result.perBuyerSignals = null;
                    } else {
                        decoder1.readDataHeaderForMap();
                        org.chromium.url.internal.mojom.Origin[] keys0;
                        String[] values0;
                        {
                            
                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                            {
                                org.chromium.mojo.bindings.DataHeader si2 = decoder2.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                                keys0 = new org.chromium.url.internal.mojom.Origin[si2.elementsOrVersion];
                                for (int i2 = 0; i2 < si2.elementsOrVersion; ++i2) {
                                    
                                    org.chromium.mojo.bindings.Decoder decoder3 = decoder2.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i2, false);
                                    keys0[i2] = org.chromium.url.internal.mojom.Origin.decode(decoder3);
                                }
                            }
                        }
                        {
                            
                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE, false);
                            {
                                org.chromium.mojo.bindings.DataHeader si2 = decoder2.readDataHeaderForPointerArray(keys0.length);
                                values0 = new String[si2.elementsOrVersion];
                                for (int i2 = 0; i2 < si2.elementsOrVersion; ++i2) {
                                    
                                    values0[i2] = decoder2.readString(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i2, false);
                                }
                            }
                        }
                        result.perBuyerSignals = new java.util.HashMap<org.chromium.url.internal.mojom.Origin, String>();
                        for (int index0 = 0; index0 < keys0.length; ++index0) {
                            result.perBuyerSignals.put(keys0[index0],  values0[index0]);
                        }
                    }
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            if (this.perBuyerSignals == null) {
                encoder0.encodeNullPointer(24, true);
            } else {
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encoderForMap(24);
                int size0 = this.perBuyerSignals.size();
                org.chromium.url.internal.mojom.Origin[] keys0 = new org.chromium.url.internal.mojom.Origin[size0];
                String[] values0 = new String[size0];
                int index0 = 0;
                for (java.util.Map.Entry<org.chromium.url.internal.mojom.Origin, String> entry0 : this.perBuyerSignals.entrySet()) {
                    keys0[index0] = entry0.getKey();
                    values0[index0] = entry0.getValue();
                    ++index0;
                }
                
                {
                    org.chromium.mojo.bindings.Encoder encoder2 = encoder1.encodePointerArray(keys0.length, org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    for (int i1 = 0; i1 < keys0.length; ++i1) {
                        
                        encoder2.encode(keys0[i1], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                    }
                }
                
                {
                    org.chromium.mojo.bindings.Encoder encoder2 = encoder1.encodePointerArray(values0.length, org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    for (int i1 = 0; i1 < values0.length; ++i1) {
                        
                        encoder2.encode(values0[i1], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                    }
                }
            }
        }
    }



    
    static final class AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 40;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public int field;
        public AuctionAdConfigBuyerTimeouts buyerTimeouts;

        private AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedBuyerTimeoutsPromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    result.field = decoder0.readInt(24);
                        AuctionAdConfigBuyerTimeoutField.validate(result.field);
                        result.field = AuctionAdConfigBuyerTimeoutField.toKnownValue(result.field);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, false);
                    result.buyerTimeouts = AuctionAdConfigBuyerTimeouts.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.field, 24);
            
            encoder0.encode(this.buyerTimeouts, 32, false);
        }
    }



    
    static final class AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public AuctionAdConfigBuyerCurrencies perBuyerCurrencies;

        private AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedBuyerCurrenciesPromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, false);
                    result.perBuyerCurrencies = AuctionAdConfigBuyerCurrencies.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.perBuyerCurrencies, 24, false);
        }
    }



    
    static final class AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public DirectFromSellerSignals directFromSellerSignals;

        private AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedDirectFromSellerSignalsPromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, true);
                    result.directFromSellerSignals = DirectFromSellerSignals.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.directFromSellerSignals, 24, true);
        }
    }



    
    static final class AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 32;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public String directFromSellerSignalsHeaderAdSlot;

        private AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedDirectFromSellerSignalsHeaderAdSlotPromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    result.directFromSellerSignalsHeaderAdSlot = decoder0.readString(24, true);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.directFromSellerSignalsHeaderAdSlot, 24, true);
        }
    }



    
    static final class AbortableAdAuctionResolvedAuctionAdResponsePromiseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 40;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(40, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;
        public org.chromium.mojo_base.mojom.BigBuffer result;

        private AbortableAdAuctionResolvedAuctionAdResponsePromiseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedAuctionAdResponsePromiseParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedAuctionAdResponsePromiseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedAuctionAdResponsePromiseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedAuctionAdResponsePromiseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedAuctionAdResponsePromiseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedAuctionAdResponsePromiseParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }
                    {
                        
                    result.result = org.chromium.mojo_base.mojom.BigBuffer.decode(decoder0, 24);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
            
            encoder0.encode(this.result, 24, false);
        }
    }



    
    static final class AbortableAdAuctionResolvedAdditionalBidsParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 24;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(24, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AuctionAdConfigAuctionId auction;

        private AbortableAdAuctionResolvedAdditionalBidsParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionResolvedAdditionalBidsParams() {
            this(0);
        }

        public static AbortableAdAuctionResolvedAdditionalBidsParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionResolvedAdditionalBidsParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionResolvedAdditionalBidsParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionResolvedAdditionalBidsParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionResolvedAdditionalBidsParams(elementsOrVersion);
                    {
                        
                    result.auction = AuctionAdConfigAuctionId.decode(decoder0, 8);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.auction, 8, false);
        }
    }



    
    static final class AbortableAdAuctionAbortParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

        private AbortableAdAuctionAbortParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AbortableAdAuctionAbortParams() {
            this(0);
        }

        public static AbortableAdAuctionAbortParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AbortableAdAuctionAbortParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AbortableAdAuctionAbortParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AbortableAdAuctionAbortParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AbortableAdAuctionAbortParams(elementsOrVersion);

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        }
    }



}
