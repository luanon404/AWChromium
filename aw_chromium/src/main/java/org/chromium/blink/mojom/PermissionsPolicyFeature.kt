// PermissionsPolicyFeature.java is auto generated by mojom_bindings_generator.py, do not edit
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/permissions_policy/permissions_policy_feature.mojom
//
package org.chromium.blink.mojom

import androidx.annotation.IntDef
import org.chromium.mojo.bindings.DeserializationException

object PermissionsPolicyFeature {
    private const val IS_EXTENSIBLE = false
    const val NOT_FOUND = 0
    const val AUTOPLAY = 1
    const val CAMERA = 2
    const val ENCRYPTED_MEDIA = 3
    const val FULLSCREEN = 4
    const val GEOLOCATION = 5
    const val MICROPHONE = 6
    const val MIDI_FEATURE = 7
    const val PAYMENT = 8
    const val DOCUMENT_DOMAIN = 11
    const val SYNC_XHR = 13
    const val USB = 14
    const val ACCELEROMETER = 17
    const val AMBIENT_LIGHT_SENSOR = 18
    const val GYROSCOPE = 19
    const val MAGNETOMETER = 20
    const val PICTURE_IN_PICTURE = 26
    const val VERTICAL_SCROLL = 27
    const val SCREEN_WAKE_LOCK = 31
    const val FROBULATE = 41
    const val SERIAL = 42
    const val HID = 43
    const val IDLE_DETECTION = 44
    const val EXECUTION_WHILE_OUT_OF_VIEWPORT = 50
    const val EXECUTION_WHILE_NOT_RENDERED = 51
    const val FOCUS_WITHOUT_USER_ACTIVATION = 52
    const val CLIENT_HINT_DPR = 53
    const val CLIENT_HINT_DEVICE_MEMORY = 54
    const val CLIENT_HINT_DOWNLINK = 55
    const val CLIENT_HINT_ECT = 56
    const val CLIENT_HINT_LANG = 57
    const val CLIENT_HINT_RTT = 58
    const val CLIENT_HINT_UA = 59
    const val CLIENT_HINT_UA_ARCH = 60
    const val CLIENT_HINT_UA_MODEL = 61
    const val CLIENT_HINT_UA_PLATFORM = 62
    const val CLIENT_HINT_VIEWPORT_WIDTH = 63
    const val CLIENT_HINT_WIDTH = 64
    const val WEB_XR = 66
    const val PUBLIC_KEY_CREDENTIALS_GET = 67
    const val CLIENT_HINT_UA_MOBILE = 69
    const val STORAGE_ACCESS_API = 70
    const val CLIENT_HINT_UA_FULL_VERSION = 71
    const val TRUST_TOKEN_REDEMPTION = 72
    const val ATTRIBUTION_REPORTING = 73
    const val CLIENT_HINT_UA_PLATFORM_VERSION = 74
    const val CROSS_ORIGIN_ISOLATED = 75
    const val CLIPBOARD_READ = 76
    const val CLIPBOARD_WRITE = 77
    const val WEB_SHARE = 78
    const val GAMEPAD = 79
    const val OTP_CREDENTIALS = 80
    const val DISPLAY_CAPTURE = 81
    const val INTEREST_COHORT = 82
    const val SHARED_AUTOFILL = 83
    const val DIRECT_SOCKETS = 84
    const val CLIENT_HINT_PREFERS_COLOR_SCHEME = 85
    const val WINDOW_PLACEMENT = 86
    const val MIN_VALUE = 0
    const val MAX_VALUE = 86
    fun isKnownValue(value: Int): Boolean {
        when (value) {
            0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 17, 18, 19, 20, 26, 27, 31, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 -> return true
        }
        return false
    }

    fun validate(value: Int) {
        if (IS_EXTENSIBLE || isKnownValue(value)) return
        throw DeserializationException("Invalid enum value.")
    }

    fun toKnownValue(value: Int): Int {
        return value
    }

    @IntDef(
        NOT_FOUND,
        AUTOPLAY,
        CAMERA,
        ENCRYPTED_MEDIA,
        FULLSCREEN,
        GEOLOCATION,
        MICROPHONE,
        MIDI_FEATURE,
        PAYMENT,
        DOCUMENT_DOMAIN,
        SYNC_XHR,
        USB,
        ACCELEROMETER,
        AMBIENT_LIGHT_SENSOR,
        GYROSCOPE,
        MAGNETOMETER,
        PICTURE_IN_PICTURE,
        VERTICAL_SCROLL,
        SCREEN_WAKE_LOCK,
        FROBULATE,
        SERIAL,
        HID,
        IDLE_DETECTION,
        EXECUTION_WHILE_OUT_OF_VIEWPORT,
        EXECUTION_WHILE_NOT_RENDERED,
        FOCUS_WITHOUT_USER_ACTIVATION,
        CLIENT_HINT_DPR,
        CLIENT_HINT_DEVICE_MEMORY,
        CLIENT_HINT_DOWNLINK,
        CLIENT_HINT_ECT,
        CLIENT_HINT_LANG,
        CLIENT_HINT_RTT,
        CLIENT_HINT_UA,
        CLIENT_HINT_UA_ARCH,
        CLIENT_HINT_UA_MODEL,
        CLIENT_HINT_UA_PLATFORM,
        CLIENT_HINT_VIEWPORT_WIDTH,
        CLIENT_HINT_WIDTH,
        WEB_XR,
        PUBLIC_KEY_CREDENTIALS_GET,
        CLIENT_HINT_UA_MOBILE,
        STORAGE_ACCESS_API,
        CLIENT_HINT_UA_FULL_VERSION,
        TRUST_TOKEN_REDEMPTION,
        ATTRIBUTION_REPORTING,
        CLIENT_HINT_UA_PLATFORM_VERSION,
        CROSS_ORIGIN_ISOLATED,
        CLIPBOARD_READ,
        CLIPBOARD_WRITE,
        WEB_SHARE,
        GAMEPAD,
        OTP_CREDENTIALS,
        DISPLAY_CAPTURE,
        INTEREST_COHORT,
        SHARED_AUTOFILL,
        DIRECT_SOCKETS,
        CLIENT_HINT_PREFERS_COLOR_SCHEME,
        WINDOW_PLACEMENT
    )
    annotation class EnumType
}