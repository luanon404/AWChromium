// MediaSession.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/media_session/public/mojom/media_session.mojom
//

package org.chromium.media_session.mojom;

import androidx.annotation.IntDef;


public interface MediaSession extends org.chromium.mojo.bindings.Interface {


    final class SuspendType {
        private static final boolean IS_EXTENSIBLE = true;

        @IntDef({SuspendType.SYSTEM, SuspendType.UI, SuspendType.CONTENT})
        public @interface EnumType {
        }

        public static final int SYSTEM = 0;
        public static final int UI = 1;
        public static final int CONTENT = 2;
        public static final int MIN_VALUE = 0;
        public static final int MAX_VALUE = 2;

        public static boolean isKnownValue(int value) {
            return value >= 0 && value <= 2;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value)) return;
            throw new org.chromium.mojo.bindings.DeserializationException("Invalid enum value.");
        }

        public static int toKnownValue(int value) {
            return value;
        }

        private SuspendType() {
        }
    }


    interface Proxy extends MediaSession, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<MediaSession, MediaSession.Proxy> MANAGER = MediaSession_Internal.MANAGER;

    void getMediaSessionInfo(

            GetMediaSessionInfo_Response callback);

    interface GetMediaSessionInfo_Response extends org.chromium.mojo.bindings.Callbacks.Callback1<MediaSessionInfo> {
    }


    void getDebugInfo(

            GetDebugInfo_Response callback);

    interface GetDebugInfo_Response extends org.chromium.mojo.bindings.Callbacks.Callback1<MediaSessionDebugInfo> {
    }


    void startDucking();


    void stopDucking();


    void suspend(int suspendType);


    void resume(int suspendType);


    void addObserver(MediaSessionObserver observer);


    void previousTrack();


    void nextTrack();


    void seek(org.chromium.mojo_base.mojom.TimeDelta seekTime);


    void stop(int suspendType);


    void skipAd();


    void getMediaImageBitmap(MediaImage image, int minimumSizePx, int desiredSizePx, GetMediaImageBitmap_Response callback);

    interface GetMediaImageBitmap_Response extends org.chromium.mojo.bindings.Callbacks.Callback1<MediaImageBitmap> {
    }


    void seekTo(org.chromium.mojo_base.mojom.TimeDelta seekTime);


    void scrubTo(org.chromium.mojo_base.mojom.TimeDelta seekTime);


    void enterPictureInPicture();


    void exitPictureInPicture();


    void setAudioSinkId(String id);


    void toggleMicrophone();


    void toggleCamera();


    void hangUp();


    void raise();


    void setMute(boolean mute);


    void requestMediaRemoting();


    void previousSlide();


    void nextSlide();


    void enterAutoPictureInPicture();


}
