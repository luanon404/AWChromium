// ItemDetails.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     components/digital_goods/mojom/digital_goods.mojom
//

package org.chromium.payments.mojom;

public final class ItemDetails extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 88;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[]{new org.chromium.mojo.bindings.DataHeader(72, 0), new org.chromium.mojo.bindings.DataHeader(88, 1)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[1];
    public String itemId;
    public String title;
    public String description;
    public PaymentCurrencyAmount price;
    public String subscriptionPeriod;
    public String freeTrialPeriod;
    public PaymentCurrencyAmount introductoryPrice;
    public String introductoryPricePeriod;
    public int introductoryPriceCycles;
    public int type;
    public org.chromium.url.mojom.Url[] iconUrls;

    private ItemDetails(int version) {
        super(STRUCT_SIZE, version);
    }

    public ItemDetails() {
        this(1);
    }

    public static ItemDetails deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static ItemDetails deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static ItemDetails decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        ItemDetails result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new ItemDetails(elementsOrVersion);
            {

                result.itemId = decoder0.readString(8, false);
            }
            {

                result.title = decoder0.readString(16, false);
            }
            {

                result.description = decoder0.readString(24, false);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(32, false);
                result.price = PaymentCurrencyAmount.decode(decoder1);
            }
            {

                result.subscriptionPeriod = decoder0.readString(40, true);
            }
            {

                result.freeTrialPeriod = decoder0.readString(48, true);
            }
            {

                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, true);
                result.introductoryPrice = PaymentCurrencyAmount.decode(decoder1);
            }
            {

                result.introductoryPricePeriod = decoder0.readString(64, true);
            }
            if (elementsOrVersion >= 1) {
                {

                    result.introductoryPriceCycles = decoder0.readInt(72);
                }
                {

                    result.type = decoder0.readInt(76);
                    ItemType.validate(result.type);
                    result.type = ItemType.toKnownValue(result.type);
                }
                {

                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(80, true);
                    if (decoder1 == null) {
                        result.iconUrls = null;
                    } else {
                        org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                        result.iconUrls = new org.chromium.url.mojom.Url[si1.elementsOrVersion];
                        for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {

                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                            result.iconUrls[i1] = org.chromium.url.mojom.Url.decode(decoder2);
                        }
                    }
                }
            }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);

        encoder0.encode(this.itemId, 8, false);

        encoder0.encode(this.title, 16, false);

        encoder0.encode(this.description, 24, false);

        encoder0.encode(this.price, 32, false);

        encoder0.encode(this.subscriptionPeriod, 40, true);

        encoder0.encode(this.freeTrialPeriod, 48, true);

        encoder0.encode(this.introductoryPrice, 56, true);

        encoder0.encode(this.introductoryPricePeriod, 64, true);

        encoder0.encode(this.introductoryPriceCycles, 72);

        encoder0.encode(this.type, 76);

        if (this.iconUrls == null) {
            encoder0.encodeNullPointer(80, true);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.iconUrls.length, 80, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.iconUrls.length; ++i0) {

                encoder1.encode(this.iconUrls[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
    }
}