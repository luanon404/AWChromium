//
// This file was generated by third_party/jni_zero/jni_generator.py
//
package org.chromium.android_webview;

import android.graphics.Canvas;
import android.os.Message;

import org.chromium.base.Callback;
import org.chromium.components.navigation_interception.InterceptNavigationDelegate;
import org.chromium.content_public.browser.WebContents;
import org.jni_zero.CheckDiscard;
import org.jni_zero.GEN_JNI;
import org.jni_zero.JniStaticTestMocker;
import org.jni_zero.NativeLibraryLoadedStatus;

@CheckDiscard("crbug.com/993421")
class AwContentsJni implements AwContents.Natives {
    private static AwContents.Natives testInstance;

    public static final JniStaticTestMocker<AwContents.Natives> TEST_HOOKS = new JniStaticTestMocker<AwContents.Natives>() {
        @Override
        public void setInstanceForTesting(AwContents.Natives instance) {
            if (!GEN_JNI.TESTING_ENABLED) {
                throw new RuntimeException("Tried to set a JNI mock when mocks aren't enabled!");
            }
            testInstance = instance;
        }
    };

    @Override
    public int addDocumentStartJavaScript(long nativeAwContents, String script, String[] allowedOriginRules) {
        return (int) GEN_JNI.org_chromium_android_1webview_AwContents_addDocumentStartJavaScript(nativeAwContents, script, allowedOriginRules);
    }

    @Override
    public void addVisitedLinks(long nativeAwContents, String[] visitedLinks) {
        GEN_JNI.org_chromium_android_1webview_AwContents_addVisitedLinks(nativeAwContents, visitedLinks);
    }

    @Override
    public String addWebMessageListener(long nativeAwContents, WebMessageListenerHolder listener, String jsObjectName, String[] allowedOrigins) {
        return (String) GEN_JNI.org_chromium_android_1webview_AwContents_addWebMessageListener(nativeAwContents, listener, jsObjectName, allowedOrigins);
    }

    @Override
    public long capturePicture(long nativeAwContents, int width, int height) {
        return (long) GEN_JNI.org_chromium_android_1webview_AwContents_capturePicture(nativeAwContents, width, height);
    }

    @Override
    public void clearCache(long nativeAwContents, boolean includeDiskFiles) {
        GEN_JNI.org_chromium_android_1webview_AwContents_clearCache(nativeAwContents, includeDiskFiles);
    }

    @Override
    public void clearMatches(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_clearMatches(nativeAwContents);
    }

    @Override
    public void clearView(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_clearView(nativeAwContents);
    }

    @Override
    public void createPdfExporter(long nativeAwContents, AwPdfExporter awPdfExporter) {
        GEN_JNI.org_chromium_android_1webview_AwContents_createPdfExporter(nativeAwContents, awPdfExporter);
    }

    @Override
    public void destroy(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_destroy(nativeAwContents);
    }

    @Override
    public void documentHasImages(long nativeAwContents, Message message) {
        GEN_JNI.org_chromium_android_1webview_AwContents_documentHasImages(nativeAwContents, message);
    }

    @Override
    public void enableOnNewPicture(long nativeAwContents, boolean enabled) {
        GEN_JNI.org_chromium_android_1webview_AwContents_enableOnNewPicture(nativeAwContents, enabled);
    }

    @Override
    public void findAllAsync(long nativeAwContents, String searchString) {
        GEN_JNI.org_chromium_android_1webview_AwContents_findAllAsync(nativeAwContents, searchString);
    }

    @Override
    public void findNext(long nativeAwContents, boolean forward) {
        GEN_JNI.org_chromium_android_1webview_AwContents_findNext(nativeAwContents, forward);
    }

    @Override
    public void focusFirstNode(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_focusFirstNode(nativeAwContents);
    }

    @Override
    public void generateMHTML(long nativeAwContents, String path, Callback callback) {
        GEN_JNI.org_chromium_android_1webview_AwContents_generateMHTML(nativeAwContents, path, callback);
    }

    @Override
    public AwBrowserContext getBrowserContext(long nativeAwContents) {
        return (AwBrowserContext) GEN_JNI.org_chromium_android_1webview_AwContents_getBrowserContext(nativeAwContents);
    }

    @Override
    public byte[] getCertificate(long nativeAwContents) {
        return (byte[]) GEN_JNI.org_chromium_android_1webview_AwContents_getCertificate(nativeAwContents);
    }

    @Override
    public StartupJavascriptInfo[] getDocumentStartupJavascripts(long nativeAwContents, Class clazz) {
        return (StartupJavascriptInfo[]) GEN_JNI.org_chromium_android_1webview_AwContents_getDocumentStartupJavascripts(nativeAwContents, clazz);
    }

    @Override
    public int getEffectivePriority(long nativeAwContents) {
        return (int) GEN_JNI.org_chromium_android_1webview_AwContents_getEffectivePriority(nativeAwContents);
    }

    @Override
    public int getNativeInstanceCount() {
        return (int) GEN_JNI.org_chromium_android_1webview_AwContents_getNativeInstanceCount();
    }

    @Override
    public byte[] getOpaqueState(long nativeAwContents) {
        return (byte[]) GEN_JNI.org_chromium_android_1webview_AwContents_getOpaqueState(nativeAwContents);
    }

    @Override
    public AwRenderProcess getRenderProcess(long nativeAwContents) {
        return (AwRenderProcess) GEN_JNI.org_chromium_android_1webview_AwContents_getRenderProcess(nativeAwContents);
    }

    @Override
    public String getSafeBrowsingLocaleForTesting() {
        return (String) GEN_JNI.org_chromium_android_1webview_AwContents_getSafeBrowsingLocaleForTesting();
    }

    @Override
    public String getScheme(long nativeAwContents) {
        return (String) GEN_JNI.org_chromium_android_1webview_AwContents_getScheme(nativeAwContents);
    }

    @Override
    public WebContents getWebContents(long nativeAwContents) {
        return (WebContents) GEN_JNI.org_chromium_android_1webview_AwContents_getWebContents(nativeAwContents);
    }

    @Override
    public WebMessageListenerInfo[] getWebMessageListenerInfos(long nativeAwContents, Class clazz) {
        return (WebMessageListenerInfo[]) GEN_JNI.org_chromium_android_1webview_AwContents_getWebMessageListenerInfos(nativeAwContents, clazz);
    }

    @Override
    public void grantFileSchemeAccesstoChildProcess(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_grantFileSchemeAccesstoChildProcess(nativeAwContents);
    }

    @Override
    public boolean hasRequiredHardwareExtensions() {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_hasRequiredHardwareExtensions();
    }

    @Override
    public long init(long browserContextPointer) {
        return (long) GEN_JNI.org_chromium_android_1webview_AwContents_init(browserContextPointer);
    }

    @Override
    public void initializeAndroidAutofill(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_initializeAndroidAutofill(nativeAwContents);
    }

    @Override
    public void insertVisualStateCallback(long nativeAwContents, long requestId, AwContents.VisualStateCallback callback) {
        GEN_JNI.org_chromium_android_1webview_AwContents_insertVisualStateCallback(nativeAwContents, requestId, callback);
    }

    @Override
    public void invokeGeolocationCallback(long nativeAwContents, boolean value, String requestingFrame) {
        GEN_JNI.org_chromium_android_1webview_AwContents_invokeGeolocationCallback(nativeAwContents, value, requestingFrame);
    }

    @Override
    public boolean isDisplayingInterstitialForTesting(long nativeAwContents) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_isDisplayingInterstitialForTesting(nativeAwContents);
    }

    @Override
    public boolean isVisible(long nativeAwContents) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_isVisible(nativeAwContents);
    }

    @Override
    public boolean needToDrawBackgroundColor(long nativeAwContents) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_needToDrawBackgroundColor(nativeAwContents);
    }

    @Override
    public void onAttachedToWindow(long nativeAwContents, int w, int h) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onAttachedToWindow(nativeAwContents, w, h);
    }

    @Override
    public void onComputeScroll(long nativeAwContents, long currentAnimationTimeMillis) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onComputeScroll(nativeAwContents, currentAnimationTimeMillis);
    }

    @Override
    public void onConfigurationChanged(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onConfigurationChanged(nativeAwContents);
    }

    @Override
    public void onDetachedFromWindow(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onDetachedFromWindow(nativeAwContents);
    }

    @Override
    public boolean onDraw(long nativeAwContents, Canvas canvas, boolean isHardwareAccelerated, int scrollX, int scrollY, int visibleLeft, int visibleTop, int visibleRight, int visibleBottom, boolean forceAuxiliaryBitmapRendering) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_onDraw(nativeAwContents, canvas, isHardwareAccelerated, scrollX, scrollY, visibleLeft, visibleTop, visibleRight, visibleBottom, forceAuxiliaryBitmapRendering);
    }

    @Override
    public void onInputEvent(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onInputEvent(nativeAwContents);
    }

    @Override
    public void onSizeChanged(long nativeAwContents, int w, int h, int ow, int oh) {
        GEN_JNI.org_chromium_android_1webview_AwContents_onSizeChanged(nativeAwContents, w, h, ow, oh);
    }

    @Override
    public void preauthorizePermission(long nativeAwContents, String origin, long resources) {
        GEN_JNI.org_chromium_android_1webview_AwContents_preauthorizePermission(nativeAwContents, origin, resources);
    }

    @Override
    public long releasePopupAwContents(long nativeAwContents) {
        return (long) GEN_JNI.org_chromium_android_1webview_AwContents_releasePopupAwContents(nativeAwContents);
    }

    @Override
    public void removeDocumentStartJavaScript(long nativeAwContents, int scriptId) {
        GEN_JNI.org_chromium_android_1webview_AwContents_removeDocumentStartJavaScript(nativeAwContents, scriptId);
    }

    @Override
    public void removeWebMessageListener(long nativeAwContents, String jsObjectName) {
        GEN_JNI.org_chromium_android_1webview_AwContents_removeWebMessageListener(nativeAwContents, jsObjectName);
    }

    @Override
    public void requestNewHitTestDataAt(long nativeAwContents, float x, float y, float touchMajor) {
        GEN_JNI.org_chromium_android_1webview_AwContents_requestNewHitTestDataAt(nativeAwContents, x, y, touchMajor);
    }

    @Override
    public boolean restoreFromOpaqueState(long nativeAwContents, byte[] state) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwContents_restoreFromOpaqueState(nativeAwContents, state);
    }

    @Override
    public void restoreScrollAfterTransition(long nativeAwContents, int x, int y) {
        GEN_JNI.org_chromium_android_1webview_AwContents_restoreScrollAfterTransition(nativeAwContents, x, y);
    }

    @Override
    public void resumeLoadingCreatedPopupWebContents(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_resumeLoadingCreatedPopupWebContents(nativeAwContents);
    }

    @Override
    public void scrollTo(long nativeAwContents, int x, int y) {
        GEN_JNI.org_chromium_android_1webview_AwContents_scrollTo(nativeAwContents, x, y);
    }

    @Override
    public void setAwDrawGLFunctionTable(long functionTablePointer) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setAwDrawGLFunctionTable(functionTablePointer);
    }

    @Override
    public void setAwDrawSWFunctionTable(long functionTablePointer) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setAwDrawSWFunctionTable(functionTablePointer);
    }

    @Override
    public void setBackgroundColor(long nativeAwContents, int color) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setBackgroundColor(nativeAwContents, color);
    }

    @Override
    public void setCompositorFrameConsumer(long nativeAwContents, long nativeCompositorFrameConsumer) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setCompositorFrameConsumer(nativeAwContents, nativeCompositorFrameConsumer);
    }

    @Override
    public void setDipScale(long nativeAwContents, float dipScale) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setDipScale(nativeAwContents, dipScale);
    }

    @Override
    public void setExtraHeadersForUrl(long nativeAwContents, String url, String extraHeaders) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setExtraHeadersForUrl(nativeAwContents, url, extraHeaders);
    }

    @Override
    public void setIsPaused(long nativeAwContents, boolean paused) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setIsPaused(nativeAwContents, paused);
    }

    @Override
    public void setJavaPeers(long nativeAwContents, AwContents awContents, AwWebContentsDelegate webViewWebContentsDelegate, AwContentsClientBridge contentsClientBridge, AwContentsIoThreadClient ioThreadClient, InterceptNavigationDelegate navigationInterceptionDelegate) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setJavaPeers(nativeAwContents, awContents, webViewWebContentsDelegate, contentsClientBridge, ioThreadClient, navigationInterceptionDelegate);
    }

    @Override
    public void setJsOnlineProperty(long nativeAwContents, boolean networkUp) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setJsOnlineProperty(nativeAwContents, networkUp);
    }

    @Override
    public void setShouldDownloadFavicons() {
        GEN_JNI.org_chromium_android_1webview_AwContents_setShouldDownloadFavicons();
    }

    @Override
    public void setViewVisibility(long nativeAwContents, boolean visible) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setViewVisibility(nativeAwContents, visible);
    }

    @Override
    public void setWindowVisibility(long nativeAwContents, boolean visible) {
        GEN_JNI.org_chromium_android_1webview_AwContents_setWindowVisibility(nativeAwContents, visible);
    }

    @Override
    public void smoothScroll(long nativeAwContents, int targetX, int targetY, long durationMs) {
        GEN_JNI.org_chromium_android_1webview_AwContents_smoothScroll(nativeAwContents, targetX, targetY, durationMs);
    }

    @Override
    public void trimMemory(long nativeAwContents, int level, boolean visible) {
        GEN_JNI.org_chromium_android_1webview_AwContents_trimMemory(nativeAwContents, level, visible);
    }

    @Override
    public void updateDefaultLocale(String locale, String localeList) {
        GEN_JNI.org_chromium_android_1webview_AwContents_updateDefaultLocale(locale, localeList);
    }

    @Override
    public void updateLastHitTestData(long nativeAwContents) {
        GEN_JNI.org_chromium_android_1webview_AwContents_updateLastHitTestData(nativeAwContents);
    }

    @Override
    public void updateScreenCoverage(int globalPercentage, String[] schemes, int[] schemePercentages) {
        GEN_JNI.org_chromium_android_1webview_AwContents_updateScreenCoverage(globalPercentage, schemes, schemePercentages);
    }

    @Override
    public void zoomBy(long nativeAwContents, float delta) {
        GEN_JNI.org_chromium_android_1webview_AwContents_zoomBy(nativeAwContents, delta);
    }

    public static AwContents.Natives get() {
        if (GEN_JNI.TESTING_ENABLED) {
            if (testInstance != null) {
                return testInstance;
            }
            if (GEN_JNI.REQUIRE_MOCK) {
                throw new UnsupportedOperationException("No mock found for the native implementation of AwContents.Natives. " + "The current configuration requires implementations be mocked.");
            }
        }
        NativeLibraryLoadedStatus.checkLoaded();
        return new AwContentsJni();
    }
}
