// SharedStorageOperation.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/url_loader_network_service_observer.mojom
//

package org.chromium.network.mojom;

public final class SharedStorageOperation extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 32;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[]{new org.chromium.mojo.bindings.DataHeader(32, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public int type;
    public String key;
    public String value;
    public int ignoreIfPresent;

    private SharedStorageOperation(int version) {
        super(STRUCT_SIZE, version);
        this.ignoreIfPresent = (int) OptionalBool.UNSET;
    }

    public SharedStorageOperation() {
        this(0);
    }

    public static SharedStorageOperation deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static SharedStorageOperation deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static SharedStorageOperation decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        SharedStorageOperation result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new SharedStorageOperation(elementsOrVersion);
            {

                result.type = decoder0.readInt(8);
                SharedStorageOperationType.validate(result.type);
                result.type = SharedStorageOperationType.toKnownValue(result.type);
            }
            {

                result.ignoreIfPresent = decoder0.readInt(12);
                OptionalBool.validate(result.ignoreIfPresent);
                result.ignoreIfPresent = OptionalBool.toKnownValue(result.ignoreIfPresent);
            }
            {

                result.key = decoder0.readString(16, true);
            }
            {

                result.value = decoder0.readString(24, true);
            }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);

        encoder0.encode(this.type, 8);

        encoder0.encode(this.ignoreIfPresent, 12);

        encoder0.encode(this.key, 16, true);

        encoder0.encode(this.value, 24, true);
    }
}