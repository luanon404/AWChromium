// AnchorElementMetricsHost_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/loader/navigation_predictor.mojom
//

package org.chromium.blink.mojom;

import androidx.annotation.IntDef;


class AnchorElementMetricsHost_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<AnchorElementMetricsHost, AnchorElementMetricsHost.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<AnchorElementMetricsHost, AnchorElementMetricsHost.Proxy>() {

        @Override
        public String getName() {
            return "blink.mojom.AnchorElementMetricsHost";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, AnchorElementMetricsHost impl) {
            return new Stub(core, impl);
        }

        @Override
        public AnchorElementMetricsHost[] buildArray(int size) {
          return new AnchorElementMetricsHost[size];
        }
    };


    private static final int REPORT_ANCHOR_ELEMENT_CLICK_ORDINAL = 0;

    private static final int REPORT_NEW_ANCHOR_ELEMENTS_ORDINAL = 1;

    private static final int REPORT_ANCHOR_ELEMENTS_ENTERED_VIEWPORT_ORDINAL = 2;

    private static final int REPORT_ANCHOR_ELEMENTS_LEFT_VIEWPORT_ORDINAL = 3;

    private static final int REPORT_ANCHOR_ELEMENT_POINTER_OVER_ORDINAL = 4;

    private static final int REPORT_ANCHOR_ELEMENT_POINTER_OUT_ORDINAL = 5;

    private static final int REPORT_ANCHOR_ELEMENT_POINTER_DOWN_ORDINAL = 6;

    private static final int REPORT_ANCHOR_ELEMENT_POINTER_DATA_ON_HOVER_TIMER_FIRED_ORDINAL = 7;

    private static final int PROCESS_POINTER_EVENT_USING_ML_MODEL_ORDINAL = 8;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements AnchorElementMetricsHost.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void reportAnchorElementClick(
AnchorElementClick clicked) {

            AnchorElementMetricsHostReportAnchorElementClickParams _message = new AnchorElementMetricsHostReportAnchorElementClickParams();

            _message.clicked = clicked;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENT_CLICK_ORDINAL)));

        }


        @Override
        public void reportNewAnchorElements(
AnchorElementMetrics[] metrics) {

            AnchorElementMetricsHostReportNewAnchorElementsParams _message = new AnchorElementMetricsHostReportNewAnchorElementsParams();

            _message.metrics = metrics;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_NEW_ANCHOR_ELEMENTS_ORDINAL)));

        }


        @Override
        public void reportAnchorElementsEnteredViewport(
AnchorElementEnteredViewport[] elements) {

            AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams _message = new AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams();

            _message.elements = elements;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENTS_ENTERED_VIEWPORT_ORDINAL)));

        }


        @Override
        public void reportAnchorElementsLeftViewport(
AnchorElementLeftViewport[] elements) {

            AnchorElementMetricsHostReportAnchorElementsLeftViewportParams _message = new AnchorElementMetricsHostReportAnchorElementsLeftViewportParams();

            _message.elements = elements;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENTS_LEFT_VIEWPORT_ORDINAL)));

        }


        @Override
        public void reportAnchorElementPointerOver(
AnchorElementPointerOver pointerOverEvent) {

            AnchorElementMetricsHostReportAnchorElementPointerOverParams _message = new AnchorElementMetricsHostReportAnchorElementPointerOverParams();

            _message.pointerOverEvent = pointerOverEvent;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENT_POINTER_OVER_ORDINAL)));

        }


        @Override
        public void reportAnchorElementPointerOut(
AnchorElementPointerOut hoverEvent) {

            AnchorElementMetricsHostReportAnchorElementPointerOutParams _message = new AnchorElementMetricsHostReportAnchorElementPointerOutParams();

            _message.hoverEvent = hoverEvent;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENT_POINTER_OUT_ORDINAL)));

        }


        @Override
        public void reportAnchorElementPointerDown(
AnchorElementPointerDown pointerDownEvent) {

            AnchorElementMetricsHostReportAnchorElementPointerDownParams _message = new AnchorElementMetricsHostReportAnchorElementPointerDownParams();

            _message.pointerDownEvent = pointerDownEvent;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENT_POINTER_DOWN_ORDINAL)));

        }


        @Override
        public void reportAnchorElementPointerDataOnHoverTimerFired(
AnchorElementPointerDataOnHoverTimerFired pointerData) {

            AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams _message = new AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams();

            _message.pointerData = pointerData;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(REPORT_ANCHOR_ELEMENT_POINTER_DATA_ON_HOVER_TIMER_FIRED_ORDINAL)));

        }


        @Override
        public void processPointerEventUsingMlModel(
AnchorElementPointerEventForMlModel pointerEvent) {

            AnchorElementMetricsHostProcessPointerEventUsingMlModelParams _message = new AnchorElementMetricsHostProcessPointerEventUsingMlModelParams();

            _message.pointerEvent = pointerEvent;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(PROCESS_POINTER_EVENT_USING_ML_MODEL_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<AnchorElementMetricsHost> {

        Stub(org.chromium.mojo.system.Core core, AnchorElementMetricsHost impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                AnchorElementMetricsHost_Internal.MANAGER, messageWithHeader);





                    case REPORT_ANCHOR_ELEMENT_CLICK_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementClickParams data =
                                AnchorElementMetricsHostReportAnchorElementClickParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementClick(data.clicked);
                        return true;
                    }





                    case REPORT_NEW_ANCHOR_ELEMENTS_ORDINAL: {

                        AnchorElementMetricsHostReportNewAnchorElementsParams data =
                                AnchorElementMetricsHostReportNewAnchorElementsParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportNewAnchorElements(data.metrics);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENTS_ENTERED_VIEWPORT_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams data =
                                AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementsEnteredViewport(data.elements);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENTS_LEFT_VIEWPORT_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementsLeftViewportParams data =
                                AnchorElementMetricsHostReportAnchorElementsLeftViewportParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementsLeftViewport(data.elements);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENT_POINTER_OVER_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementPointerOverParams data =
                                AnchorElementMetricsHostReportAnchorElementPointerOverParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementPointerOver(data.pointerOverEvent);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENT_POINTER_OUT_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementPointerOutParams data =
                                AnchorElementMetricsHostReportAnchorElementPointerOutParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementPointerOut(data.hoverEvent);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENT_POINTER_DOWN_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementPointerDownParams data =
                                AnchorElementMetricsHostReportAnchorElementPointerDownParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementPointerDown(data.pointerDownEvent);
                        return true;
                    }





                    case REPORT_ANCHOR_ELEMENT_POINTER_DATA_ON_HOVER_TIMER_FIRED_ORDINAL: {

                        AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams data =
                                AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportAnchorElementPointerDataOnHoverTimerFired(data.pointerData);
                        return true;
                    }





                    case PROCESS_POINTER_EVENT_USING_ML_MODEL_ORDINAL: {

                        AnchorElementMetricsHostProcessPointerEventUsingMlModelParams data =
                                AnchorElementMetricsHostProcessPointerEventUsingMlModelParams.deserialize(messageWithHeader.getPayload());

                        getImpl().processPointerEventUsingMlModel(data.pointerEvent);
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), AnchorElementMetricsHost_Internal.MANAGER, messageWithHeader, receiver);




















                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class AnchorElementMetricsHostReportAnchorElementClickParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementClick clicked;

        private AnchorElementMetricsHostReportAnchorElementClickParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementClickParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementClickParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementClickParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementClickParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementClickParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementClickParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.clicked = AnchorElementClick.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.clicked, 8, false);
        }
    }



    
    static final class AnchorElementMetricsHostReportNewAnchorElementsParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementMetrics[] metrics;

        private AnchorElementMetricsHostReportNewAnchorElementsParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportNewAnchorElementsParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportNewAnchorElementsParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportNewAnchorElementsParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportNewAnchorElementsParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportNewAnchorElementsParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportNewAnchorElementsParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    {
                        org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                        result.metrics = new AnchorElementMetrics[si1.elementsOrVersion];
                        for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                            
                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                            result.metrics[i1] = AnchorElementMetrics.decode(decoder2);
                        }
                    }
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            if (this.metrics == null) {
                encoder0.encodeNullPointer(8, false);
            } else {
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.metrics.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                for (int i0 = 0; i0 < this.metrics.length; ++i0) {
                    
                    encoder1.encode(this.metrics[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                }
            }
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementEnteredViewport[] elements;

        private AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementsEnteredViewportParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    {
                        org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                        result.elements = new AnchorElementEnteredViewport[si1.elementsOrVersion];
                        for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                            
                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                            result.elements[i1] = AnchorElementEnteredViewport.decode(decoder2);
                        }
                    }
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            if (this.elements == null) {
                encoder0.encodeNullPointer(8, false);
            } else {
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.elements.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                for (int i0 = 0; i0 < this.elements.length; ++i0) {
                    
                    encoder1.encode(this.elements[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                }
            }
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementsLeftViewportParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementLeftViewport[] elements;

        private AnchorElementMetricsHostReportAnchorElementsLeftViewportParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementsLeftViewportParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementsLeftViewportParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementsLeftViewportParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementsLeftViewportParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementsLeftViewportParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementsLeftViewportParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    {
                        org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                        result.elements = new AnchorElementLeftViewport[si1.elementsOrVersion];
                        for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                            
                            org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                            result.elements[i1] = AnchorElementLeftViewport.decode(decoder2);
                        }
                    }
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            if (this.elements == null) {
                encoder0.encodeNullPointer(8, false);
            } else {
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.elements.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                for (int i0 = 0; i0 < this.elements.length; ++i0) {
                    
                    encoder1.encode(this.elements[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                }
            }
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementPointerOverParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementPointerOver pointerOverEvent;

        private AnchorElementMetricsHostReportAnchorElementPointerOverParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementPointerOverParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementPointerOverParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementPointerOverParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementPointerOverParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementPointerOverParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementPointerOverParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.pointerOverEvent = AnchorElementPointerOver.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.pointerOverEvent, 8, false);
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementPointerOutParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementPointerOut hoverEvent;

        private AnchorElementMetricsHostReportAnchorElementPointerOutParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementPointerOutParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementPointerOutParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementPointerOutParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementPointerOutParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementPointerOutParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementPointerOutParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.hoverEvent = AnchorElementPointerOut.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.hoverEvent, 8, false);
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementPointerDownParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementPointerDown pointerDownEvent;

        private AnchorElementMetricsHostReportAnchorElementPointerDownParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementPointerDownParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementPointerDownParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementPointerDownParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementPointerDownParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementPointerDownParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementPointerDownParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.pointerDownEvent = AnchorElementPointerDown.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.pointerDownEvent, 8, false);
        }
    }



    
    static final class AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementPointerDataOnHoverTimerFired pointerData;

        private AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams() {
            this(0);
        }

        public static AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostReportAnchorElementPointerDataOnHoverTimerFiredParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.pointerData = AnchorElementPointerDataOnHoverTimerFired.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.pointerData, 8, false);
        }
    }



    
    static final class AnchorElementMetricsHostProcessPointerEventUsingMlModelParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public AnchorElementPointerEventForMlModel pointerEvent;

        private AnchorElementMetricsHostProcessPointerEventUsingMlModelParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public AnchorElementMetricsHostProcessPointerEventUsingMlModelParams() {
            this(0);
        }

        public static AnchorElementMetricsHostProcessPointerEventUsingMlModelParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static AnchorElementMetricsHostProcessPointerEventUsingMlModelParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static AnchorElementMetricsHostProcessPointerEventUsingMlModelParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            AnchorElementMetricsHostProcessPointerEventUsingMlModelParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new AnchorElementMetricsHostProcessPointerEventUsingMlModelParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.pointerEvent = AnchorElementPointerEventForMlModel.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.pointerEvent, 8, false);
        }
    }



}
