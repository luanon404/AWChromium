// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chrome_user_metrics_extension.proto

package org.chromium.components.metrics;

public final class ChromeUserMetricsExtensionProtos {
  private ChromeUserMetricsExtensionProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ChromeUserMetricsExtensionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:metrics.ChromeUserMetricsExtension)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     * @return Whether the product field is set.
     */
    boolean hasProduct();
    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     * @return The product.
     */
    int getProduct();

    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     * @return Whether the clientId field is set.
     */
    boolean hasClientId();
    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     * @return The clientId.
     */
    long getClientId();

    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     * @return Whether the sessionId field is set.
     */
    boolean hasSessionId();
    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     * @return The sessionId.
     */
    int getSessionId();

    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     * @return Whether the userId field is set.
     */
    boolean hasUserId();
    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     * @return The userId.
     */
    long getUserId();

    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     * @return Whether the recordId field is set.
     */
    boolean hasRecordId();
    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     * @return The recordId.
     */
    long getRecordId();

    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     * @return Whether the timeLogCreated field is set.
     */
    boolean hasTimeLogCreated();
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     * @return The timeLogCreated.
     */
    org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogCreated();

    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     * @return Whether the timeLogClosed field is set.
     */
    boolean hasTimeLogClosed();
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     * @return The timeLogClosed.
     */
    org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogClosed();

    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     * @return Whether the systemProfile field is set.
     */
    boolean hasSystemProfile();
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     * @return The systemProfile.
     */
    org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto getSystemProfile();

    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     * @return Whether the userDemographics field is set.
     */
    boolean hasUserDemographics();
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     * @return The userDemographics.
     */
    org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto getUserDemographics();

    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    java.util.List<org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> 
        getUserActionEventList();
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto getUserActionEvent(int index);
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    int getUserActionEventCount();

    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    java.util.List<org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> 
        getOmniboxEventList();
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto getOmniboxEvent(int index);
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    int getOmniboxEventCount();

    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    java.util.List<org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> 
        getHistogramEventList();
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto getHistogramEvent(int index);
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    int getHistogramEventCount();

    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    java.util.List<org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> 
        getTranslateEventList();
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto getTranslateEvent(int index);
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    int getTranslateEventCount();

    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    java.util.List<org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> 
        getPrinterEventList();
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto getPrinterEvent(int index);
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    int getPrinterEventCount();

    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    java.util.List<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> 
        getChromeOsAppListLaunchEventList();
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto getChromeOsAppListLaunchEvent(int index);
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    int getChromeOsAppListLaunchEventCount();

    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     * @return Whether the structuredData field is set.
     */
    boolean hasStructuredData();
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     * @return The structuredData.
     */
    org.chromium.components.metrics.StructuredData.StructuredDataProto getStructuredData();

    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    java.util.List<org.chromium.components.metrics.SampledProfileProtos.SampledProfile> 
        getSampledProfileList();
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    org.chromium.components.metrics.SampledProfileProtos.SampledProfile getSampledProfile(int index);
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    int getSampledProfileCount();

    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     * @return Whether the castLogs field is set.
     */
    boolean hasCastLogs();
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     * @return The castLogs.
     */
    org.chromium.components.metrics.CastLogsProtos.CastLogsProto getCastLogs();

    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     * @return Whether the reportingInfo field is set.
     */
    boolean hasReportingInfo();
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     * @return The reportingInfo.
     */
    org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo getReportingInfo();

    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    java.util.List<org.chromium.components.metrics.TraceLogProtos.TraceLog> 
        getTraceLogList();
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    org.chromium.components.metrics.TraceLogProtos.TraceLog getTraceLog(int index);
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    int getTraceLogCount();

    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     * @return Whether the customTabSession field is set.
     */
    boolean hasCustomTabSession();
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     * @return The customTabSession.
     */
    org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto getCustomTabSession();
  }
  /**
   * <pre>
   * Next tag: 29
   * </pre>
   *
   * Protobuf type {@code metrics.ChromeUserMetricsExtension}
   */
  public  static final class ChromeUserMetricsExtension extends
      com.google.protobuf.GeneratedMessageLite<
          ChromeUserMetricsExtension, ChromeUserMetricsExtension.Builder> implements
      // @@protoc_insertion_point(message_implements:metrics.ChromeUserMetricsExtension)
      ChromeUserMetricsExtensionOrBuilder {
    private ChromeUserMetricsExtension() {
      userActionEvent_ = emptyProtobufList();
      omniboxEvent_ = emptyProtobufList();
      histogramEvent_ = emptyProtobufList();
      translateEvent_ = emptyProtobufList();
      printerEvent_ = emptyProtobufList();
      chromeOsAppListLaunchEvent_ = emptyProtobufList();
      sampledProfile_ = emptyProtobufList();
      traceLog_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The product (i.e. end user application) for a given UMA log.
     * </pre>
     *
     * Protobuf enum {@code metrics.ChromeUserMetricsExtension.Product}
     */
    public enum Product
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Google Chrome product family.
       * </pre>
       *
       * <code>CHROME = 0;</code>
       */
      CHROME(0),
      /**
       * <pre>
       * UMA metrics from Android Webview.
       * </pre>
       *
       * <code>ANDROID_WEBVIEW = 20;</code>
       */
      ANDROID_WEBVIEW(20),
      /**
       * <pre>
       * Cast Assistant
       * </pre>
       *
       * <code>CAST_ASSISTANT = 25;</code>
       */
      CAST_ASSISTANT(25),
      /**
       * <pre>
       * Devices such as Chromecast, Android TVs, and smart speakers and displays.
       * </pre>
       *
       * <code>CAST = 35;</code>
       */
      CAST(35),
      /**
       * <pre>
       * UMA metrics from Android WebLayer.
       * </pre>
       *
       * <code>ANDROID_WEBLAYER = 56;</code>
       */
      ANDROID_WEBLAYER(56),
      ;

      /**
       * <pre>
       * Google Chrome product family.
       * </pre>
       *
       * <code>CHROME = 0;</code>
       */
      public static final int CHROME_VALUE = 0;
      /**
       * <pre>
       * UMA metrics from Android Webview.
       * </pre>
       *
       * <code>ANDROID_WEBVIEW = 20;</code>
       */
      public static final int ANDROID_WEBVIEW_VALUE = 20;
      /**
       * <pre>
       * Cast Assistant
       * </pre>
       *
       * <code>CAST_ASSISTANT = 25;</code>
       */
      public static final int CAST_ASSISTANT_VALUE = 25;
      /**
       * <pre>
       * Devices such as Chromecast, Android TVs, and smart speakers and displays.
       * </pre>
       *
       * <code>CAST = 35;</code>
       */
      public static final int CAST_VALUE = 35;
      /**
       * <pre>
       * UMA metrics from Android WebLayer.
       * </pre>
       *
       * <code>ANDROID_WEBLAYER = 56;</code>
       */
      public static final int ANDROID_WEBLAYER_VALUE = 56;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Product valueOf(int value) {
        return forNumber(value);
      }

      public static Product forNumber(int value) {
        switch (value) {
          case 0: return CHROME;
          case 20: return ANDROID_WEBVIEW;
          case 25: return CAST_ASSISTANT;
          case 35: return CAST;
          case 56: return ANDROID_WEBLAYER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Product>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Product> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Product>() {
              @java.lang.Override
              public Product findValueByNumber(int number) {
                return Product.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ProductVerifier.INSTANCE;
      }

      private static final class ProductVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ProductVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Product.forNumber(number) != null;
              }
            };

      private final int value;

      private Product(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:metrics.ChromeUserMetricsExtension.Product)
    }

    public interface RealLocalTimeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:metrics.ChromeUserMetricsExtension.RealLocalTime)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       * @return Whether the timeSource field is set.
       */
      boolean hasTimeSource();
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       * @return The timeSource.
       */
      org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource getTimeSource();

      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       * @return Whether the timeSec field is set.
       */
      boolean hasTimeSec();
      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       * @return The timeSec.
       */
      long getTimeSec();

      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       * @return Whether the timeZoneOffsetFromGmtSec field is set.
       */
      boolean hasTimeZoneOffsetFromGmtSec();
      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       * @return The timeZoneOffsetFromGmtSec.
       */
      int getTimeZoneOffsetFromGmtSec();
    }
    /**
     * <pre>
     * Next tag: 4
     * </pre>
     *
     * Protobuf type {@code metrics.ChromeUserMetricsExtension.RealLocalTime}
     */
    public  static final class RealLocalTime extends
        com.google.protobuf.GeneratedMessageLite<
            RealLocalTime, RealLocalTime.Builder> implements
        // @@protoc_insertion_point(message_implements:metrics.ChromeUserMetricsExtension.RealLocalTime)
        RealLocalTimeOrBuilder {
      private RealLocalTime() {
      }
      /**
       * <pre>
       * The source of the timestamp.
       * </pre>
       *
       * Protobuf enum {@code metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource}
       */
      public enum TimeSource
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNSPECIFIED = 0;</code>
         */
        UNSPECIFIED(0),
        /**
         * <pre>
         * The time on the local machine.
         * </pre>
         *
         * <code>CLIENT_CLOCK = 1;</code>
         */
        CLIENT_CLOCK(1),
        /**
         * <pre>
         * The time derived from server information provided by the
         * NetworkTimeTracker a.k.a. "sane time" system.  See
         * https://www.chromium.org/developers/design-documents/sane-time
         * </pre>
         *
         * <code>NETWORK_TIME_CLOCK = 2;</code>
         */
        NETWORK_TIME_CLOCK(2),
        ;

        /**
         * <code>UNSPECIFIED = 0;</code>
         */
        public static final int UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * The time on the local machine.
         * </pre>
         *
         * <code>CLIENT_CLOCK = 1;</code>
         */
        public static final int CLIENT_CLOCK_VALUE = 1;
        /**
         * <pre>
         * The time derived from server information provided by the
         * NetworkTimeTracker a.k.a. "sane time" system.  See
         * https://www.chromium.org/developers/design-documents/sane-time
         * </pre>
         *
         * <code>NETWORK_TIME_CLOCK = 2;</code>
         */
        public static final int NETWORK_TIME_CLOCK_VALUE = 2;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TimeSource valueOf(int value) {
          return forNumber(value);
        }

        public static TimeSource forNumber(int value) {
          switch (value) {
            case 0: return UNSPECIFIED;
            case 1: return CLIENT_CLOCK;
            case 2: return NETWORK_TIME_CLOCK;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TimeSource>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            TimeSource> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TimeSource>() {
                @java.lang.Override
                public TimeSource findValueByNumber(int number) {
                  return TimeSource.forNumber(number);
                }
              };

        public static com.google.protobuf.Internal.EnumVerifier 
            internalGetVerifier() {
          return TimeSourceVerifier.INSTANCE;
        }

        private static final class TimeSourceVerifier implements 
             com.google.protobuf.Internal.EnumVerifier { 
                static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TimeSourceVerifier();
                @java.lang.Override
                public boolean isInRange(int number) {
                  return TimeSource.forNumber(number) != null;
                }
              };

        private final int value;

        private TimeSource(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource)
      }

      private int bitField0_;
      public static final int TIME_SOURCE_FIELD_NUMBER = 1;
      private int timeSource_;
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       * @return Whether the timeSource field is set.
       */
      @java.lang.Override
      public boolean hasTimeSource() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       * @return The timeSource.
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource getTimeSource() {
        org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource result = org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource.forNumber(timeSource_);
        return result == null ? org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource.UNSPECIFIED : result;
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       * @param value The timeSource to set.
       */
      private void setTimeSource(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource value) {
        timeSource_ = value.getNumber();
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
       */
      private void clearTimeSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeSource_ = 0;
      }

      public static final int TIME_SEC_FIELD_NUMBER = 2;
      private long timeSec_;
      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       * @return Whether the timeSec field is set.
       */
      @java.lang.Override
      public boolean hasTimeSec() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       * @return The timeSec.
       */
      @java.lang.Override
      public long getTimeSec() {
        return timeSec_;
      }
      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       * @param value The timeSec to set.
       */
      private void setTimeSec(long value) {
        bitField0_ |= 0x00000002;
        timeSec_ = value;
      }
      /**
       * <pre>
       * |time_sec| is in seconds since epoch.
       * </pre>
       *
       * <code>optional int64 time_sec = 2;</code>
       */
      private void clearTimeSec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeSec_ = 0L;
      }

      public static final int TIME_ZONE_OFFSET_FROM_GMT_SEC_FIELD_NUMBER = 3;
      private int timeZoneOffsetFromGmtSec_;
      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       * @return Whether the timeZoneOffsetFromGmtSec field is set.
       */
      @java.lang.Override
      public boolean hasTimeZoneOffsetFromGmtSec() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       * @return The timeZoneOffsetFromGmtSec.
       */
      @java.lang.Override
      public int getTimeZoneOffsetFromGmtSec() {
        return timeZoneOffsetFromGmtSec_;
      }
      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       * @param value The timeZoneOffsetFromGmtSec to set.
       */
      private void setTimeZoneOffsetFromGmtSec(int value) {
        bitField0_ |= 0x00000004;
        timeZoneOffsetFromGmtSec_ = value;
      }
      /**
       * <pre>
       * |time_zone_offset_from_gmt_sec| is in seconds.
       * Only logged in |time_log_closed| entries, not |time_log_created| entries.
       * (Populating this field when creating a log slows down startup too much.)
       * </pre>
       *
       * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
       */
      private void clearTimeZoneOffsetFromGmtSec() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeZoneOffsetFromGmtSec_ = 0;
      }

      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * Next tag: 4
       * </pre>
       *
       * Protobuf type {@code metrics.ChromeUserMetricsExtension.RealLocalTime}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime, Builder> implements
          // @@protoc_insertion_point(builder_implements:metrics.ChromeUserMetricsExtension.RealLocalTime)
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTimeOrBuilder {
        // Construct using org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
         * @return Whether the timeSource field is set.
         */
        @java.lang.Override
        public boolean hasTimeSource() {
          return instance.hasTimeSource();
        }
        /**
         * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
         * @return The timeSource.
         */
        @java.lang.Override
        public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource getTimeSource() {
          return instance.getTimeSource();
        }
        /**
         * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
         * @param value The enum numeric value on the wire for timeSource to set.
         * @return This builder for chaining.
         */
        public Builder setTimeSource(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource value) {
          copyOnWrite();
          instance.setTimeSource(value);
          return this;
        }
        /**
         * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime.TimeSource time_source = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeSource() {
          copyOnWrite();
          instance.clearTimeSource();
          return this;
        }

        /**
         * <pre>
         * |time_sec| is in seconds since epoch.
         * </pre>
         *
         * <code>optional int64 time_sec = 2;</code>
         * @return Whether the timeSec field is set.
         */
        @java.lang.Override
        public boolean hasTimeSec() {
          return instance.hasTimeSec();
        }
        /**
         * <pre>
         * |time_sec| is in seconds since epoch.
         * </pre>
         *
         * <code>optional int64 time_sec = 2;</code>
         * @return The timeSec.
         */
        @java.lang.Override
        public long getTimeSec() {
          return instance.getTimeSec();
        }
        /**
         * <pre>
         * |time_sec| is in seconds since epoch.
         * </pre>
         *
         * <code>optional int64 time_sec = 2;</code>
         * @param value The timeSec to set.
         * @return This builder for chaining.
         */
        public Builder setTimeSec(long value) {
          copyOnWrite();
          instance.setTimeSec(value);
          return this;
        }
        /**
         * <pre>
         * |time_sec| is in seconds since epoch.
         * </pre>
         *
         * <code>optional int64 time_sec = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeSec() {
          copyOnWrite();
          instance.clearTimeSec();
          return this;
        }

        /**
         * <pre>
         * |time_zone_offset_from_gmt_sec| is in seconds.
         * Only logged in |time_log_closed| entries, not |time_log_created| entries.
         * (Populating this field when creating a log slows down startup too much.)
         * </pre>
         *
         * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
         * @return Whether the timeZoneOffsetFromGmtSec field is set.
         */
        @java.lang.Override
        public boolean hasTimeZoneOffsetFromGmtSec() {
          return instance.hasTimeZoneOffsetFromGmtSec();
        }
        /**
         * <pre>
         * |time_zone_offset_from_gmt_sec| is in seconds.
         * Only logged in |time_log_closed| entries, not |time_log_created| entries.
         * (Populating this field when creating a log slows down startup too much.)
         * </pre>
         *
         * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
         * @return The timeZoneOffsetFromGmtSec.
         */
        @java.lang.Override
        public int getTimeZoneOffsetFromGmtSec() {
          return instance.getTimeZoneOffsetFromGmtSec();
        }
        /**
         * <pre>
         * |time_zone_offset_from_gmt_sec| is in seconds.
         * Only logged in |time_log_closed| entries, not |time_log_created| entries.
         * (Populating this field when creating a log slows down startup too much.)
         * </pre>
         *
         * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
         * @param value The timeZoneOffsetFromGmtSec to set.
         * @return This builder for chaining.
         */
        public Builder setTimeZoneOffsetFromGmtSec(int value) {
          copyOnWrite();
          instance.setTimeZoneOffsetFromGmtSec(value);
          return this;
        }
        /**
         * <pre>
         * |time_zone_offset_from_gmt_sec| is in seconds.
         * Only logged in |time_log_closed| entries, not |time_log_created| entries.
         * (Populating this field when creating a log slows down startup too much.)
         * </pre>
         *
         * <code>optional int32 time_zone_offset_from_gmt_sec = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeZoneOffsetFromGmtSec() {
          copyOnWrite();
          instance.clearTimeZoneOffsetFromGmtSec();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:metrics.ChromeUserMetricsExtension.RealLocalTime)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "timeSource_",
                org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.TimeSource.internalGetVerifier(),
                "timeSec_",
                "timeZoneOffsetFromGmtSec_",
              };
              java.lang.String info =
                  "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u100c\u0000\u0002" +
                  "\u1002\u0001\u0003\u1004\u0002";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime> parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:metrics.ChromeUserMetricsExtension.RealLocalTime)
      private static final org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime DEFAULT_INSTANCE;
      static {
        RealLocalTime defaultInstance = new RealLocalTime();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          RealLocalTime.class, defaultInstance);
      }

      public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<RealLocalTime> PARSER;

      public static com.google.protobuf.Parser<RealLocalTime> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int PRODUCT_FIELD_NUMBER = 10;
    private int product_;
    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     * @return Whether the product field is set.
     */
    @java.lang.Override
    public boolean hasProduct() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     * @return The product.
     */
    @java.lang.Override
    public int getProduct() {
      return product_;
    }
    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     * @param value The product to set.
     */
    private void setProduct(int value) {
      bitField0_ |= 0x00000001;
      product_ = value;
    }
    /**
     * <pre>
     * The product corresponding to this log. The field type is int32 instead of
     * Product so that downstream users of the Chromium metrics component can
     * introduce products without needing to make changes to the Chromium code
     * (though they still need to add the new product to the server-side enum).
     * Note: The default value is Chrome, so Chrome products will not transmit
     * this field.
     * </pre>
     *
     * <code>optional int32 product = 10 [default = 0];</code>
     */
    private void clearProduct() {
      bitField0_ = (bitField0_ & ~0x00000001);
      product_ = 0;
    }

    public static final int CLIENT_ID_FIELD_NUMBER = 1;
    private long clientId_;
    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     * @return Whether the clientId field is set.
     */
    @java.lang.Override
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     * @return The clientId.
     */
    @java.lang.Override
    public long getClientId() {
      return clientId_;
    }
    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     * @param value The clientId to set.
     */
    private void setClientId(long value) {
      bitField0_ |= 0x00000002;
      clientId_ = value;
    }
    /**
     * <pre>
     * The id of the client install that generated these events.
     * For Chrome clients, this id is unique to a top-level (one level above the
     * "Default" directory) Chrome user data directory [1], and so is shared among
     * all Chrome user profiles contained in this user data directory.
     * This client_id may not be unique across platforms. Notably, ChromeOS and
     * Lacros are different platforms yet report the same client_id for the same
     * device.
     * An id of 0 is reserved for test data (monitoring and internal testing) and
     * should normally be ignored in analysis of the data.
     * [1] http://www.chromium.org/user-experience/user-data-directory
     * </pre>
     *
     * <code>optional fixed64 client_id = 1;</code>
     */
    private void clearClientId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      clientId_ = 0L;
    }

    public static final int SESSION_ID_FIELD_NUMBER = 2;
    private int sessionId_;
    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     * @return Whether the sessionId field is set.
     */
    @java.lang.Override
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     * @return The sessionId.
     */
    @java.lang.Override
    public int getSessionId() {
      return sessionId_;
    }
    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     * @param value The sessionId to set.
     */
    private void setSessionId(int value) {
      bitField0_ |= 0x00000004;
      sessionId_ = value;
    }
    /**
     * <pre>
     * The session id for this user.
     * Values such as tab ids are only meaningful within a particular session.
     * The client keeps track of the session id and sends it with each event.
     * The session id is simply an integer that is incremented each time the user
     * relaunches Chrome.
     * </pre>
     *
     * <code>optional int32 session_id = 2;</code>
     */
    private void clearSessionId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      sessionId_ = 0;
    }

    public static final int USER_ID_FIELD_NUMBER = 24;
    private long userId_;
    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     * @return Whether the userId field is set.
     */
    @java.lang.Override
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     * @return The userId.
     */
    @java.lang.Override
    public long getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     * @param value The userId to set.
     */
    private void setUserId(long value) {
      bitField0_ |= 0x00000008;
      userId_ = value;
    }
    /**
     * <pre>
     * The id associated with a user entity that generated these events. These
     * user IDs are only associated with users on device. Their generation is not
     * based on any other ID.
     * This field is not populated on non-Chrome OS platforms.
     * For Chrome OS, this id refers to a device user entity. This field will be
     * captured when a log is first opened. If there is no user logged in at the
     * time the log is opened, then this field will be unset. All ephemeral (i.e.
     * guest, kiosk) users will have this field unset.
     * </pre>
     *
     * <code>optional fixed64 user_id = 24;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      userId_ = 0L;
    }

    public static final int RECORD_ID_FIELD_NUMBER = 28;
    private long recordId_;
    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     * @return Whether the recordId field is set.
     */
    @java.lang.Override
    public boolean hasRecordId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     * @return The recordId.
     */
    @java.lang.Override
    public long getRecordId() {
      return recordId_;
    }
    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     * @param value The recordId to set.
     */
    private void setRecordId(long value) {
      bitField0_ |= 0x00000010;
      recordId_ = value;
    }
    /**
     * <pre>
     * A client-managed id that functions as a sequence number for the log record.
     * Clients are expected to maintain a counter, incrementing it (by 1) for each
     * record they create, and populate this field. Each record_id is expected to
     * be unique when scoped to a given client_id. It is further expected that the
     * record_id values associated to a given client_id form an uninterrupted
     * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
     * of dropped, or otherwise lost, records.
     * </pre>
     *
     * <code>optional int64 record_id = 28;</code>
     */
    private void clearRecordId() {
      bitField0_ = (bitField0_ & ~0x00000010);
      recordId_ = 0L;
    }

    public static final int TIME_LOG_CREATED_FIELD_NUMBER = 25;
    private org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime timeLogCreated_;
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     */
    @java.lang.Override
    public boolean hasTimeLogCreated() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogCreated() {
      return timeLogCreated_ == null ? org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.getDefaultInstance() : timeLogCreated_;
    }
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     */
    private void setTimeLogCreated(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
      value.getClass();
  timeLogCreated_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTimeLogCreated(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
      value.getClass();
  if (timeLogCreated_ != null &&
          timeLogCreated_ != org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.getDefaultInstance()) {
        timeLogCreated_ =
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.newBuilder(timeLogCreated_).mergeFrom(value).buildPartial();
      } else {
        timeLogCreated_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <pre>
     * These times are set for "ongoing" UMA logs.  For two other types
     * of UMA logs, these values are omitted:
     * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
     *   one that didn't shut down cleanly.
     * - the initial stability log.
     * Warning: in some cases |time_log_created| can contain events that happened
     * slightly before this timestamp. If you only care about differences of more
     * than a minute, you can skip reading this section. In particular, at the
     * time of writing, the "initial metric log" includes all metrics from startup
     * until it is closed, which happens 60 seconds after startup on desktop
     * platforms and 15 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
     * initial metrics log is only created 30 seconds after startup on desktop
     * platforms and 5 seconds after startup on mobile platforms. (See
     * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
     * means histograms that are stored in a record could have been emitted up to
     * 30 seconds before the log was created. This logic may change in the
     * future; see http://crbug.com/1171830
     * </pre>
     *
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
     */
    private void clearTimeLogCreated() {  timeLogCreated_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int TIME_LOG_CLOSED_FIELD_NUMBER = 26;
    private org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime timeLogClosed_;
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     */
    @java.lang.Override
    public boolean hasTimeLogClosed() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogClosed() {
      return timeLogClosed_ == null ? org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.getDefaultInstance() : timeLogClosed_;
    }
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     */
    private void setTimeLogClosed(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
      value.getClass();
  timeLogClosed_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTimeLogClosed(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
      value.getClass();
  if (timeLogClosed_ != null &&
          timeLogClosed_ != org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.getDefaultInstance()) {
        timeLogClosed_ =
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.newBuilder(timeLogClosed_).mergeFrom(value).buildPartial();
      } else {
        timeLogClosed_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
     */
    private void clearTimeLogClosed() {  timeLogClosed_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int SYSTEM_PROFILE_FIELD_NUMBER = 3;
    private org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto systemProfile_;
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     */
    @java.lang.Override
    public boolean hasSystemProfile() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto getSystemProfile() {
      return systemProfile_ == null ? org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto.getDefaultInstance() : systemProfile_;
    }
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     */
    private void setSystemProfile(org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto value) {
      value.getClass();
  systemProfile_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeSystemProfile(org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto value) {
      value.getClass();
  if (systemProfile_ != null &&
          systemProfile_ != org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto.getDefaultInstance()) {
        systemProfile_ =
          org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto.newBuilder(systemProfile_).mergeFrom(value).buildPartial();
      } else {
        systemProfile_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <pre>
     * Information about the user's browser and system configuration.
     * </pre>
     *
     * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
     */
    private void clearSystemProfile() {  systemProfile_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int USER_DEMOGRAPHICS_FIELD_NUMBER = 21;
    private org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto userDemographics_;
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     */
    @java.lang.Override
    public boolean hasUserDemographics() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto getUserDemographics() {
      return userDemographics_ == null ? org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto.getDefaultInstance() : userDemographics_;
    }
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     */
    private void setUserDemographics(org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto value) {
      value.getClass();
  userDemographics_ = value;
      bitField0_ |= 0x00000100;
      }
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeUserDemographics(org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto value) {
      value.getClass();
  if (userDemographics_ != null &&
          userDemographics_ != org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto.getDefaultInstance()) {
        userDemographics_ =
          org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto.newBuilder(userDemographics_).mergeFrom(value).buildPartial();
      } else {
        userDemographics_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <pre>
     * The user's demographic information. This data is made available to Chrome
     * via syncable priority pref, so is only available if the user is signed-in
     * and syncing.
     * </pre>
     *
     * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
     */
    private void clearUserDemographics() {  userDemographics_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int USER_ACTION_EVENT_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> userActionEvent_;
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> getUserActionEventList() {
      return userActionEvent_;
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.UserActionEventProtos.UserActionEventProtoOrBuilder> 
        getUserActionEventOrBuilderList() {
      return userActionEvent_;
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    @java.lang.Override
    public int getUserActionEventCount() {
      return userActionEvent_.size();
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto getUserActionEvent(int index) {
      return userActionEvent_.get(index);
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    public org.chromium.components.metrics.UserActionEventProtos.UserActionEventProtoOrBuilder getUserActionEventOrBuilder(
        int index) {
      return userActionEvent_.get(index);
    }
    private void ensureUserActionEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> tmp = userActionEvent_;
      if (!tmp.isModifiable()) {
        userActionEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void setUserActionEvent(
        int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
      value.getClass();
  ensureUserActionEventIsMutable();
      userActionEvent_.set(index, value);
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void addUserActionEvent(org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
      value.getClass();
  ensureUserActionEventIsMutable();
      userActionEvent_.add(value);
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void addUserActionEvent(
        int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
      value.getClass();
  ensureUserActionEventIsMutable();
      userActionEvent_.add(index, value);
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void addAllUserActionEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> values) {
      ensureUserActionEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userActionEvent_);
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void clearUserActionEvent() {
      userActionEvent_ = emptyProtobufList();
    }
    /**
     * <pre>
     * This message will log one or more of the following event types:
     * </pre>
     *
     * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
     */
    private void removeUserActionEvent(int index) {
      ensureUserActionEventIsMutable();
      userActionEvent_.remove(index);
    }

    public static final int OMNIBOX_EVENT_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> omniboxEvent_;
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> getOmniboxEventList() {
      return omniboxEvent_;
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProtoOrBuilder> 
        getOmniboxEventOrBuilderList() {
      return omniboxEvent_;
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    @java.lang.Override
    public int getOmniboxEventCount() {
      return omniboxEvent_.size();
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto getOmniboxEvent(int index) {
      return omniboxEvent_.get(index);
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    public org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProtoOrBuilder getOmniboxEventOrBuilder(
        int index) {
      return omniboxEvent_.get(index);
    }
    private void ensureOmniboxEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> tmp = omniboxEvent_;
      if (!tmp.isModifiable()) {
        omniboxEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void setOmniboxEvent(
        int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
      value.getClass();
  ensureOmniboxEventIsMutable();
      omniboxEvent_.set(index, value);
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void addOmniboxEvent(org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
      value.getClass();
  ensureOmniboxEventIsMutable();
      omniboxEvent_.add(value);
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void addOmniboxEvent(
        int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
      value.getClass();
  ensureOmniboxEventIsMutable();
      omniboxEvent_.add(index, value);
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void addAllOmniboxEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> values) {
      ensureOmniboxEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, omniboxEvent_);
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void clearOmniboxEvent() {
      omniboxEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
     */
    private void removeOmniboxEvent(int index) {
      ensureOmniboxEventIsMutable();
      omniboxEvent_.remove(index);
    }

    public static final int HISTOGRAM_EVENT_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> histogramEvent_;
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> getHistogramEventList() {
      return histogramEvent_;
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.HistogramEventProtos.HistogramEventProtoOrBuilder> 
        getHistogramEventOrBuilderList() {
      return histogramEvent_;
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    @java.lang.Override
    public int getHistogramEventCount() {
      return histogramEvent_.size();
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto getHistogramEvent(int index) {
      return histogramEvent_.get(index);
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    public org.chromium.components.metrics.HistogramEventProtos.HistogramEventProtoOrBuilder getHistogramEventOrBuilder(
        int index) {
      return histogramEvent_.get(index);
    }
    private void ensureHistogramEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> tmp = histogramEvent_;
      if (!tmp.isModifiable()) {
        histogramEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void setHistogramEvent(
        int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
      value.getClass();
  ensureHistogramEventIsMutable();
      histogramEvent_.set(index, value);
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void addHistogramEvent(org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
      value.getClass();
  ensureHistogramEventIsMutable();
      histogramEvent_.add(value);
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void addHistogramEvent(
        int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
      value.getClass();
  ensureHistogramEventIsMutable();
      histogramEvent_.add(index, value);
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void addAllHistogramEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> values) {
      ensureHistogramEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, histogramEvent_);
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void clearHistogramEvent() {
      histogramEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
     */
    private void removeHistogramEvent(int index) {
      ensureHistogramEventIsMutable();
      histogramEvent_.remove(index);
    }

    public static final int TRANSLATE_EVENT_FIELD_NUMBER = 15;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> translateEvent_;
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> getTranslateEventList() {
      return translateEvent_;
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.TranslateEventProtos.TranslateEventProtoOrBuilder> 
        getTranslateEventOrBuilderList() {
      return translateEvent_;
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    @java.lang.Override
    public int getTranslateEventCount() {
      return translateEvent_.size();
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto getTranslateEvent(int index) {
      return translateEvent_.get(index);
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    public org.chromium.components.metrics.TranslateEventProtos.TranslateEventProtoOrBuilder getTranslateEventOrBuilder(
        int index) {
      return translateEvent_.get(index);
    }
    private void ensureTranslateEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> tmp = translateEvent_;
      if (!tmp.isModifiable()) {
        translateEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void setTranslateEvent(
        int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
      value.getClass();
  ensureTranslateEventIsMutable();
      translateEvent_.set(index, value);
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void addTranslateEvent(org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
      value.getClass();
  ensureTranslateEventIsMutable();
      translateEvent_.add(value);
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void addTranslateEvent(
        int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
      value.getClass();
  ensureTranslateEventIsMutable();
      translateEvent_.add(index, value);
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void addAllTranslateEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> values) {
      ensureTranslateEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, translateEvent_);
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void clearTranslateEvent() {
      translateEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
     */
    private void removeTranslateEvent(int index) {
      ensureTranslateEventIsMutable();
      translateEvent_.remove(index);
    }

    public static final int PRINTER_EVENT_FIELD_NUMBER = 16;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> printerEvent_;
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> getPrinterEventList() {
      return printerEvent_;
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.PrinterEventProtos.PrinterEventProtoOrBuilder> 
        getPrinterEventOrBuilderList() {
      return printerEvent_;
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    @java.lang.Override
    public int getPrinterEventCount() {
      return printerEvent_.size();
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto getPrinterEvent(int index) {
      return printerEvent_.get(index);
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    public org.chromium.components.metrics.PrinterEventProtos.PrinterEventProtoOrBuilder getPrinterEventOrBuilder(
        int index) {
      return printerEvent_.get(index);
    }
    private void ensurePrinterEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> tmp = printerEvent_;
      if (!tmp.isModifiable()) {
        printerEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void setPrinterEvent(
        int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
      value.getClass();
  ensurePrinterEventIsMutable();
      printerEvent_.set(index, value);
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void addPrinterEvent(org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
      value.getClass();
  ensurePrinterEventIsMutable();
      printerEvent_.add(value);
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void addPrinterEvent(
        int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
      value.getClass();
  ensurePrinterEventIsMutable();
      printerEvent_.add(index, value);
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void addAllPrinterEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> values) {
      ensurePrinterEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, printerEvent_);
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void clearPrinterEvent() {
      printerEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
     */
    private void removePrinterEvent(int index) {
      ensurePrinterEventIsMutable();
      printerEvent_.remove(index);
    }

    public static final int CHROME_OS_APP_LIST_LAUNCH_EVENT_FIELD_NUMBER = 20;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> chromeOsAppListLaunchEvent_;
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> getChromeOsAppListLaunchEventList() {
      return chromeOsAppListLaunchEvent_;
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProtoOrBuilder> 
        getChromeOsAppListLaunchEventOrBuilderList() {
      return chromeOsAppListLaunchEvent_;
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    @java.lang.Override
    public int getChromeOsAppListLaunchEventCount() {
      return chromeOsAppListLaunchEvent_.size();
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto getChromeOsAppListLaunchEvent(int index) {
      return chromeOsAppListLaunchEvent_.get(index);
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProtoOrBuilder getChromeOsAppListLaunchEventOrBuilder(
        int index) {
      return chromeOsAppListLaunchEvent_.get(index);
    }
    private void ensureChromeOsAppListLaunchEventIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> tmp = chromeOsAppListLaunchEvent_;
      if (!tmp.isModifiable()) {
        chromeOsAppListLaunchEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void setChromeOsAppListLaunchEvent(
        int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
      value.getClass();
  ensureChromeOsAppListLaunchEventIsMutable();
      chromeOsAppListLaunchEvent_.set(index, value);
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void addChromeOsAppListLaunchEvent(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
      value.getClass();
  ensureChromeOsAppListLaunchEventIsMutable();
      chromeOsAppListLaunchEvent_.add(value);
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void addChromeOsAppListLaunchEvent(
        int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
      value.getClass();
  ensureChromeOsAppListLaunchEventIsMutable();
      chromeOsAppListLaunchEvent_.add(index, value);
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void addAllChromeOsAppListLaunchEvent(
        java.lang.Iterable<? extends org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> values) {
      ensureChromeOsAppListLaunchEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, chromeOsAppListLaunchEvent_);
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void clearChromeOsAppListLaunchEvent() {
      chromeOsAppListLaunchEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
     */
    private void removeChromeOsAppListLaunchEvent(int index) {
      ensureChromeOsAppListLaunchEventIsMutable();
      chromeOsAppListLaunchEvent_.remove(index);
    }

    public static final int STRUCTURED_DATA_FIELD_NUMBER = 23;
    private org.chromium.components.metrics.StructuredData.StructuredDataProto structuredData_;
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     */
    @java.lang.Override
    public boolean hasStructuredData() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.StructuredData.StructuredDataProto getStructuredData() {
      return structuredData_ == null ? org.chromium.components.metrics.StructuredData.StructuredDataProto.getDefaultInstance() : structuredData_;
    }
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     */
    private void setStructuredData(org.chromium.components.metrics.StructuredData.StructuredDataProto value) {
      value.getClass();
  structuredData_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStructuredData(org.chromium.components.metrics.StructuredData.StructuredDataProto value) {
      value.getClass();
  if (structuredData_ != null &&
          structuredData_ != org.chromium.components.metrics.StructuredData.StructuredDataProto.getDefaultInstance()) {
        structuredData_ =
          org.chromium.components.metrics.StructuredData.StructuredDataProto.newBuilder(structuredData_).mergeFrom(value).buildPartial();
      } else {
        structuredData_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
     */
    private void clearStructuredData() {  structuredData_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int SAMPLED_PROFILE_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.SampledProfileProtos.SampledProfile> sampledProfile_;
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.SampledProfileProtos.SampledProfile> getSampledProfileList() {
      return sampledProfile_;
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.SampledProfileProtos.SampledProfileOrBuilder> 
        getSampledProfileOrBuilderList() {
      return sampledProfile_;
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    @java.lang.Override
    public int getSampledProfileCount() {
      return sampledProfile_.size();
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.SampledProfileProtos.SampledProfile getSampledProfile(int index) {
      return sampledProfile_.get(index);
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    public org.chromium.components.metrics.SampledProfileProtos.SampledProfileOrBuilder getSampledProfileOrBuilder(
        int index) {
      return sampledProfile_.get(index);
    }
    private void ensureSampledProfileIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.SampledProfileProtos.SampledProfile> tmp = sampledProfile_;
      if (!tmp.isModifiable()) {
        sampledProfile_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void setSampledProfile(
        int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
      value.getClass();
  ensureSampledProfileIsMutable();
      sampledProfile_.set(index, value);
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void addSampledProfile(org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
      value.getClass();
  ensureSampledProfileIsMutable();
      sampledProfile_.add(value);
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void addSampledProfile(
        int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
      value.getClass();
  ensureSampledProfileIsMutable();
      sampledProfile_.add(index, value);
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void addAllSampledProfile(
        java.lang.Iterable<? extends org.chromium.components.metrics.SampledProfileProtos.SampledProfile> values) {
      ensureSampledProfileIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sampledProfile_);
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void clearSampledProfile() {
      sampledProfile_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A list of all collected sample-based profiles since the last UMA upload.
     * </pre>
     *
     * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
     */
    private void removeSampledProfile(int index) {
      ensureSampledProfileIsMutable();
      sampledProfile_.remove(index);
    }

    public static final int CAST_LOGS_FIELD_NUMBER = 12;
    private org.chromium.components.metrics.CastLogsProtos.CastLogsProto castLogs_;
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     */
    @java.lang.Override
    public boolean hasCastLogs() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CastLogsProtos.CastLogsProto getCastLogs() {
      return castLogs_ == null ? org.chromium.components.metrics.CastLogsProtos.CastLogsProto.getDefaultInstance() : castLogs_;
    }
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     */
    private void setCastLogs(org.chromium.components.metrics.CastLogsProtos.CastLogsProto value) {
      value.getClass();
  castLogs_ = value;
      bitField0_ |= 0x00000400;
      }
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCastLogs(org.chromium.components.metrics.CastLogsProtos.CastLogsProto value) {
      value.getClass();
  if (castLogs_ != null &&
          castLogs_ != org.chromium.components.metrics.CastLogsProtos.CastLogsProto.getDefaultInstance()) {
        castLogs_ =
          org.chromium.components.metrics.CastLogsProtos.CastLogsProto.newBuilder(castLogs_).mergeFrom(value).buildPartial();
      } else {
        castLogs_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <pre>
     * Additional data related with Cast-enabled devices.
     * </pre>
     *
     * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
     */
    private void clearCastLogs() {  castLogs_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int REPORTING_INFO_FIELD_NUMBER = 17;
    private org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo reportingInfo_;
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     */
    @java.lang.Override
    public boolean hasReportingInfo() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo getReportingInfo() {
      return reportingInfo_ == null ? org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo.getDefaultInstance() : reportingInfo_;
    }
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     */
    private void setReportingInfo(org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo value) {
      value.getClass();
  reportingInfo_ = value;
      bitField0_ |= 0x00000800;
      }
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeReportingInfo(org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo value) {
      value.getClass();
  if (reportingInfo_ != null &&
          reportingInfo_ != org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo.getDefaultInstance()) {
        reportingInfo_ =
          org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo.newBuilder(reportingInfo_).mergeFrom(value).buildPartial();
      } else {
        reportingInfo_ = value;
      }
      bitField0_ |= 0x00000800;
    }
    /**
     * <pre>
     * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
     * Copied in by the receiving server.
     * </pre>
     *
     * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
     */
    private void clearReportingInfo() {  reportingInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000800);
    }

    public static final int TRACE_LOG_FIELD_NUMBER = 19;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.TraceLogProtos.TraceLog> traceLog_;
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.metrics.TraceLogProtos.TraceLog> getTraceLogList() {
      return traceLog_;
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    public java.util.List<? extends org.chromium.components.metrics.TraceLogProtos.TraceLogOrBuilder> 
        getTraceLogOrBuilderList() {
      return traceLog_;
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    @java.lang.Override
    public int getTraceLogCount() {
      return traceLog_.size();
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.TraceLogProtos.TraceLog getTraceLog(int index) {
      return traceLog_.get(index);
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    public org.chromium.components.metrics.TraceLogProtos.TraceLogOrBuilder getTraceLogOrBuilder(
        int index) {
      return traceLog_.get(index);
    }
    private void ensureTraceLogIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.TraceLogProtos.TraceLog> tmp = traceLog_;
      if (!tmp.isModifiable()) {
        traceLog_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void setTraceLog(
        int index, org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
      value.getClass();
  ensureTraceLogIsMutable();
      traceLog_.set(index, value);
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void addTraceLog(org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
      value.getClass();
  ensureTraceLogIsMutable();
      traceLog_.add(value);
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void addTraceLog(
        int index, org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
      value.getClass();
  ensureTraceLogIsMutable();
      traceLog_.add(index, value);
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void addAllTraceLog(
        java.lang.Iterable<? extends org.chromium.components.metrics.TraceLogProtos.TraceLog> values) {
      ensureTraceLogIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, traceLog_);
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void clearTraceLog() {
      traceLog_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The Chrome traces obtained during the current session. The start time,
     * duration and details depend on the experiment triggers in the current
     * session. This field is uploaded as independent logs, which contain only
     * session id and core system profile fields, apart from this field.
     * </pre>
     *
     * <code>repeated .metrics.TraceLog trace_log = 19;</code>
     */
    private void removeTraceLog(int index) {
      ensureTraceLogIsMutable();
      traceLog_.remove(index);
    }

    public static final int CUSTOM_TAB_SESSION_FIELD_NUMBER = 27;
    private org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto customTabSession_;
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     */
    @java.lang.Override
    public boolean hasCustomTabSession() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     */
    @java.lang.Override
    public org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto getCustomTabSession() {
      return customTabSession_ == null ? org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto.getDefaultInstance() : customTabSession_;
    }
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     */
    private void setCustomTabSession(org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto value) {
      value.getClass();
  customTabSession_ = value;
      bitField0_ |= 0x00001000;
      }
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCustomTabSession(org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto value) {
      value.getClass();
  if (customTabSession_ != null &&
          customTabSession_ != org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto.getDefaultInstance()) {
        customTabSession_ =
          org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto.newBuilder(customTabSession_).mergeFrom(value).buildPartial();
      } else {
        customTabSession_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     * Information about a Custom Tabs session, recorded in the log when the
     * a CCT session ended. If custom tabs are opened and closed multiple times
     * within the same log session, only the last one will be recorded. This is
     * used to identify applications that use Custom Tabs in an abusive way. This
     * is specific to Android.
     * </pre>
     *
     * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
     */
    private void clearCustomTabSession() {  customTabSession_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Next tag: 29
     * </pre>
     *
     * Protobuf type {@code metrics.ChromeUserMetricsExtension}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension, Builder> implements
        // @@protoc_insertion_point(builder_implements:metrics.ChromeUserMetricsExtension)
        org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtensionOrBuilder {
      // Construct using org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The product corresponding to this log. The field type is int32 instead of
       * Product so that downstream users of the Chromium metrics component can
       * introduce products without needing to make changes to the Chromium code
       * (though they still need to add the new product to the server-side enum).
       * Note: The default value is Chrome, so Chrome products will not transmit
       * this field.
       * </pre>
       *
       * <code>optional int32 product = 10 [default = 0];</code>
       * @return Whether the product field is set.
       */
      @java.lang.Override
      public boolean hasProduct() {
        return instance.hasProduct();
      }
      /**
       * <pre>
       * The product corresponding to this log. The field type is int32 instead of
       * Product so that downstream users of the Chromium metrics component can
       * introduce products without needing to make changes to the Chromium code
       * (though they still need to add the new product to the server-side enum).
       * Note: The default value is Chrome, so Chrome products will not transmit
       * this field.
       * </pre>
       *
       * <code>optional int32 product = 10 [default = 0];</code>
       * @return The product.
       */
      @java.lang.Override
      public int getProduct() {
        return instance.getProduct();
      }
      /**
       * <pre>
       * The product corresponding to this log. The field type is int32 instead of
       * Product so that downstream users of the Chromium metrics component can
       * introduce products without needing to make changes to the Chromium code
       * (though they still need to add the new product to the server-side enum).
       * Note: The default value is Chrome, so Chrome products will not transmit
       * this field.
       * </pre>
       *
       * <code>optional int32 product = 10 [default = 0];</code>
       * @param value The product to set.
       * @return This builder for chaining.
       */
      public Builder setProduct(int value) {
        copyOnWrite();
        instance.setProduct(value);
        return this;
      }
      /**
       * <pre>
       * The product corresponding to this log. The field type is int32 instead of
       * Product so that downstream users of the Chromium metrics component can
       * introduce products without needing to make changes to the Chromium code
       * (though they still need to add the new product to the server-side enum).
       * Note: The default value is Chrome, so Chrome products will not transmit
       * this field.
       * </pre>
       *
       * <code>optional int32 product = 10 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearProduct() {
        copyOnWrite();
        instance.clearProduct();
        return this;
      }

      /**
       * <pre>
       * The id of the client install that generated these events.
       * For Chrome clients, this id is unique to a top-level (one level above the
       * "Default" directory) Chrome user data directory [1], and so is shared among
       * all Chrome user profiles contained in this user data directory.
       * This client_id may not be unique across platforms. Notably, ChromeOS and
       * Lacros are different platforms yet report the same client_id for the same
       * device.
       * An id of 0 is reserved for test data (monitoring and internal testing) and
       * should normally be ignored in analysis of the data.
       * [1] http://www.chromium.org/user-experience/user-data-directory
       * </pre>
       *
       * <code>optional fixed64 client_id = 1;</code>
       * @return Whether the clientId field is set.
       */
      @java.lang.Override
      public boolean hasClientId() {
        return instance.hasClientId();
      }
      /**
       * <pre>
       * The id of the client install that generated these events.
       * For Chrome clients, this id is unique to a top-level (one level above the
       * "Default" directory) Chrome user data directory [1], and so is shared among
       * all Chrome user profiles contained in this user data directory.
       * This client_id may not be unique across platforms. Notably, ChromeOS and
       * Lacros are different platforms yet report the same client_id for the same
       * device.
       * An id of 0 is reserved for test data (monitoring and internal testing) and
       * should normally be ignored in analysis of the data.
       * [1] http://www.chromium.org/user-experience/user-data-directory
       * </pre>
       *
       * <code>optional fixed64 client_id = 1;</code>
       * @return The clientId.
       */
      @java.lang.Override
      public long getClientId() {
        return instance.getClientId();
      }
      /**
       * <pre>
       * The id of the client install that generated these events.
       * For Chrome clients, this id is unique to a top-level (one level above the
       * "Default" directory) Chrome user data directory [1], and so is shared among
       * all Chrome user profiles contained in this user data directory.
       * This client_id may not be unique across platforms. Notably, ChromeOS and
       * Lacros are different platforms yet report the same client_id for the same
       * device.
       * An id of 0 is reserved for test data (monitoring and internal testing) and
       * should normally be ignored in analysis of the data.
       * [1] http://www.chromium.org/user-experience/user-data-directory
       * </pre>
       *
       * <code>optional fixed64 client_id = 1;</code>
       * @param value The clientId to set.
       * @return This builder for chaining.
       */
      public Builder setClientId(long value) {
        copyOnWrite();
        instance.setClientId(value);
        return this;
      }
      /**
       * <pre>
       * The id of the client install that generated these events.
       * For Chrome clients, this id is unique to a top-level (one level above the
       * "Default" directory) Chrome user data directory [1], and so is shared among
       * all Chrome user profiles contained in this user data directory.
       * This client_id may not be unique across platforms. Notably, ChromeOS and
       * Lacros are different platforms yet report the same client_id for the same
       * device.
       * An id of 0 is reserved for test data (monitoring and internal testing) and
       * should normally be ignored in analysis of the data.
       * [1] http://www.chromium.org/user-experience/user-data-directory
       * </pre>
       *
       * <code>optional fixed64 client_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientId() {
        copyOnWrite();
        instance.clearClientId();
        return this;
      }

      /**
       * <pre>
       * The session id for this user.
       * Values such as tab ids are only meaningful within a particular session.
       * The client keeps track of the session id and sends it with each event.
       * The session id is simply an integer that is incremented each time the user
       * relaunches Chrome.
       * </pre>
       *
       * <code>optional int32 session_id = 2;</code>
       * @return Whether the sessionId field is set.
       */
      @java.lang.Override
      public boolean hasSessionId() {
        return instance.hasSessionId();
      }
      /**
       * <pre>
       * The session id for this user.
       * Values such as tab ids are only meaningful within a particular session.
       * The client keeps track of the session id and sends it with each event.
       * The session id is simply an integer that is incremented each time the user
       * relaunches Chrome.
       * </pre>
       *
       * <code>optional int32 session_id = 2;</code>
       * @return The sessionId.
       */
      @java.lang.Override
      public int getSessionId() {
        return instance.getSessionId();
      }
      /**
       * <pre>
       * The session id for this user.
       * Values such as tab ids are only meaningful within a particular session.
       * The client keeps track of the session id and sends it with each event.
       * The session id is simply an integer that is incremented each time the user
       * relaunches Chrome.
       * </pre>
       *
       * <code>optional int32 session_id = 2;</code>
       * @param value The sessionId to set.
       * @return This builder for chaining.
       */
      public Builder setSessionId(int value) {
        copyOnWrite();
        instance.setSessionId(value);
        return this;
      }
      /**
       * <pre>
       * The session id for this user.
       * Values such as tab ids are only meaningful within a particular session.
       * The client keeps track of the session id and sends it with each event.
       * The session id is simply an integer that is incremented each time the user
       * relaunches Chrome.
       * </pre>
       *
       * <code>optional int32 session_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSessionId() {
        copyOnWrite();
        instance.clearSessionId();
        return this;
      }

      /**
       * <pre>
       * The id associated with a user entity that generated these events. These
       * user IDs are only associated with users on device. Their generation is not
       * based on any other ID.
       * This field is not populated on non-Chrome OS platforms.
       * For Chrome OS, this id refers to a device user entity. This field will be
       * captured when a log is first opened. If there is no user logged in at the
       * time the log is opened, then this field will be unset. All ephemeral (i.e.
       * guest, kiosk) users will have this field unset.
       * </pre>
       *
       * <code>optional fixed64 user_id = 24;</code>
       * @return Whether the userId field is set.
       */
      @java.lang.Override
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <pre>
       * The id associated with a user entity that generated these events. These
       * user IDs are only associated with users on device. Their generation is not
       * based on any other ID.
       * This field is not populated on non-Chrome OS platforms.
       * For Chrome OS, this id refers to a device user entity. This field will be
       * captured when a log is first opened. If there is no user logged in at the
       * time the log is opened, then this field will be unset. All ephemeral (i.e.
       * guest, kiosk) users will have this field unset.
       * </pre>
       *
       * <code>optional fixed64 user_id = 24;</code>
       * @return The userId.
       */
      @java.lang.Override
      public long getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * The id associated with a user entity that generated these events. These
       * user IDs are only associated with users on device. Their generation is not
       * based on any other ID.
       * This field is not populated on non-Chrome OS platforms.
       * For Chrome OS, this id refers to a device user entity. This field will be
       * captured when a log is first opened. If there is no user logged in at the
       * time the log is opened, then this field will be unset. All ephemeral (i.e.
       * guest, kiosk) users will have this field unset.
       * </pre>
       *
       * <code>optional fixed64 user_id = 24;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(long value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * The id associated with a user entity that generated these events. These
       * user IDs are only associated with users on device. Their generation is not
       * based on any other ID.
       * This field is not populated on non-Chrome OS platforms.
       * For Chrome OS, this id refers to a device user entity. This field will be
       * captured when a log is first opened. If there is no user logged in at the
       * time the log is opened, then this field will be unset. All ephemeral (i.e.
       * guest, kiosk) users will have this field unset.
       * </pre>
       *
       * <code>optional fixed64 user_id = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <pre>
       * A client-managed id that functions as a sequence number for the log record.
       * Clients are expected to maintain a counter, incrementing it (by 1) for each
       * record they create, and populate this field. Each record_id is expected to
       * be unique when scoped to a given client_id. It is further expected that the
       * record_id values associated to a given client_id form an uninterrupted
       * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
       * of dropped, or otherwise lost, records.
       * </pre>
       *
       * <code>optional int64 record_id = 28;</code>
       * @return Whether the recordId field is set.
       */
      @java.lang.Override
      public boolean hasRecordId() {
        return instance.hasRecordId();
      }
      /**
       * <pre>
       * A client-managed id that functions as a sequence number for the log record.
       * Clients are expected to maintain a counter, incrementing it (by 1) for each
       * record they create, and populate this field. Each record_id is expected to
       * be unique when scoped to a given client_id. It is further expected that the
       * record_id values associated to a given client_id form an uninterrupted
       * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
       * of dropped, or otherwise lost, records.
       * </pre>
       *
       * <code>optional int64 record_id = 28;</code>
       * @return The recordId.
       */
      @java.lang.Override
      public long getRecordId() {
        return instance.getRecordId();
      }
      /**
       * <pre>
       * A client-managed id that functions as a sequence number for the log record.
       * Clients are expected to maintain a counter, incrementing it (by 1) for each
       * record they create, and populate this field. Each record_id is expected to
       * be unique when scoped to a given client_id. It is further expected that the
       * record_id values associated to a given client_id form an uninterrupted
       * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
       * of dropped, or otherwise lost, records.
       * </pre>
       *
       * <code>optional int64 record_id = 28;</code>
       * @param value The recordId to set.
       * @return This builder for chaining.
       */
      public Builder setRecordId(long value) {
        copyOnWrite();
        instance.setRecordId(value);
        return this;
      }
      /**
       * <pre>
       * A client-managed id that functions as a sequence number for the log record.
       * Clients are expected to maintain a counter, incrementing it (by 1) for each
       * record they create, and populate this field. Each record_id is expected to
       * be unique when scoped to a given client_id. It is further expected that the
       * record_id values associated to a given client_id form an uninterrupted
       * numeric sequence (i.e. k, k+1, k+2, k+3, ...), allowing for the detection
       * of dropped, or otherwise lost, records.
       * </pre>
       *
       * <code>optional int64 record_id = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecordId() {
        copyOnWrite();
        instance.clearRecordId();
        return this;
      }

      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      @java.lang.Override
      public boolean hasTimeLogCreated() {
        return instance.hasTimeLogCreated();
      }
      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogCreated() {
        return instance.getTimeLogCreated();
      }
      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      public Builder setTimeLogCreated(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
        copyOnWrite();
        instance.setTimeLogCreated(value);
        return this;
        }
      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      public Builder setTimeLogCreated(
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeLogCreated(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      public Builder mergeTimeLogCreated(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
        copyOnWrite();
        instance.mergeTimeLogCreated(value);
        return this;
      }
      /**
       * <pre>
       * These times are set for "ongoing" UMA logs.  For two other types
       * of UMA logs, these values are omitted:
       * - logs recovered from a previous run of Chrome ("persisted UMA"), such as
       *   one that didn't shut down cleanly.
       * - the initial stability log.
       * Warning: in some cases |time_log_created| can contain events that happened
       * slightly before this timestamp. If you only care about differences of more
       * than a minute, you can skip reading this section. In particular, at the
       * time of writing, the "initial metric log" includes all metrics from startup
       * until it is closed, which happens 60 seconds after startup on desktop
       * platforms and 15 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_scheduler.cc kInitialIntervalSeconds.) Yet, the
       * initial metrics log is only created 30 seconds after startup on desktop
       * platforms and 5 seconds after startup on mobile platforms. (See
       * components/metrics/metrics_service.cc kInitializationDelaySeconds.) This
       * means histograms that are stored in a record could have been emitted up to
       * 30 seconds before the log was created. This logic may change in the
       * future; see http://crbug.com/1171830
       * </pre>
       *
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_created = 25;</code>
       */
      public Builder clearTimeLogCreated() {  copyOnWrite();
        instance.clearTimeLogCreated();
        return this;
      }

      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      @java.lang.Override
      public boolean hasTimeLogClosed() {
        return instance.hasTimeLogClosed();
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime getTimeLogClosed() {
        return instance.getTimeLogClosed();
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      public Builder setTimeLogClosed(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
        copyOnWrite();
        instance.setTimeLogClosed(value);
        return this;
        }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      public Builder setTimeLogClosed(
          org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime.Builder builderForValue) {
        copyOnWrite();
        instance.setTimeLogClosed(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      public Builder mergeTimeLogClosed(org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.RealLocalTime value) {
        copyOnWrite();
        instance.mergeTimeLogClosed(value);
        return this;
      }
      /**
       * <code>optional .metrics.ChromeUserMetricsExtension.RealLocalTime time_log_closed = 26;</code>
       */
      public Builder clearTimeLogClosed() {  copyOnWrite();
        instance.clearTimeLogClosed();
        return this;
      }

      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      @java.lang.Override
      public boolean hasSystemProfile() {
        return instance.hasSystemProfile();
      }
      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto getSystemProfile() {
        return instance.getSystemProfile();
      }
      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      public Builder setSystemProfile(org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto value) {
        copyOnWrite();
        instance.setSystemProfile(value);
        return this;
        }
      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      public Builder setSystemProfile(
          org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto.Builder builderForValue) {
        copyOnWrite();
        instance.setSystemProfile(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      public Builder mergeSystemProfile(org.chromium.components.metrics.SystemProfileProtos.SystemProfileProto value) {
        copyOnWrite();
        instance.mergeSystemProfile(value);
        return this;
      }
      /**
       * <pre>
       * Information about the user's browser and system configuration.
       * </pre>
       *
       * <code>optional .metrics.SystemProfileProto system_profile = 3;</code>
       */
      public Builder clearSystemProfile() {  copyOnWrite();
        instance.clearSystemProfile();
        return this;
      }

      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      @java.lang.Override
      public boolean hasUserDemographics() {
        return instance.hasUserDemographics();
      }
      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto getUserDemographics() {
        return instance.getUserDemographics();
      }
      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      public Builder setUserDemographics(org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto value) {
        copyOnWrite();
        instance.setUserDemographics(value);
        return this;
        }
      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      public Builder setUserDemographics(
          org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto.Builder builderForValue) {
        copyOnWrite();
        instance.setUserDemographics(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      public Builder mergeUserDemographics(org.chromium.components.metrics.UserDemographicsProtos.UserDemographicsProto value) {
        copyOnWrite();
        instance.mergeUserDemographics(value);
        return this;
      }
      /**
       * <pre>
       * The user's demographic information. This data is made available to Chrome
       * via syncable priority pref, so is only available if the user is signed-in
       * and syncing.
       * </pre>
       *
       * <code>optional .metrics.UserDemographicsProto user_demographics = 21;</code>
       */
      public Builder clearUserDemographics() {  copyOnWrite();
        instance.clearUserDemographics();
        return this;
      }

      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> getUserActionEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserActionEventList());
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      @java.lang.Override
      public int getUserActionEventCount() {
        return instance.getUserActionEventCount();
      }/**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto getUserActionEvent(int index) {
        return instance.getUserActionEvent(index);
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder setUserActionEvent(
          int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
        copyOnWrite();
        instance.setUserActionEvent(index, value);
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder setUserActionEvent(
          int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setUserActionEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder addUserActionEvent(org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
        copyOnWrite();
        instance.addUserActionEvent(value);
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder addUserActionEvent(
          int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto value) {
        copyOnWrite();
        instance.addUserActionEvent(index, value);
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder addUserActionEvent(
          org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addUserActionEvent(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder addUserActionEvent(
          int index, org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addUserActionEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder addAllUserActionEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto> values) {
        copyOnWrite();
        instance.addAllUserActionEvent(values);
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder clearUserActionEvent() {
        copyOnWrite();
        instance.clearUserActionEvent();
        return this;
      }
      /**
       * <pre>
       * This message will log one or more of the following event types:
       * </pre>
       *
       * <code>repeated .metrics.UserActionEventProto user_action_event = 4;</code>
       */
      public Builder removeUserActionEvent(int index) {
        copyOnWrite();
        instance.removeUserActionEvent(index);
        return this;
      }

      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> getOmniboxEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getOmniboxEventList());
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      @java.lang.Override
      public int getOmniboxEventCount() {
        return instance.getOmniboxEventCount();
      }/**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto getOmniboxEvent(int index) {
        return instance.getOmniboxEvent(index);
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder setOmniboxEvent(
          int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
        copyOnWrite();
        instance.setOmniboxEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder setOmniboxEvent(
          int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setOmniboxEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder addOmniboxEvent(org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
        copyOnWrite();
        instance.addOmniboxEvent(value);
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder addOmniboxEvent(
          int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto value) {
        copyOnWrite();
        instance.addOmniboxEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder addOmniboxEvent(
          org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addOmniboxEvent(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder addOmniboxEvent(
          int index, org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addOmniboxEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder addAllOmniboxEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto> values) {
        copyOnWrite();
        instance.addAllOmniboxEvent(values);
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder clearOmniboxEvent() {
        copyOnWrite();
        instance.clearOmniboxEvent();
        return this;
      }
      /**
       * <code>repeated .metrics.OmniboxEventProto omnibox_event = 5;</code>
       */
      public Builder removeOmniboxEvent(int index) {
        copyOnWrite();
        instance.removeOmniboxEvent(index);
        return this;
      }

      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> getHistogramEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getHistogramEventList());
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      @java.lang.Override
      public int getHistogramEventCount() {
        return instance.getHistogramEventCount();
      }/**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto getHistogramEvent(int index) {
        return instance.getHistogramEvent(index);
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder setHistogramEvent(
          int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
        copyOnWrite();
        instance.setHistogramEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder setHistogramEvent(
          int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setHistogramEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder addHistogramEvent(org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
        copyOnWrite();
        instance.addHistogramEvent(value);
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder addHistogramEvent(
          int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto value) {
        copyOnWrite();
        instance.addHistogramEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder addHistogramEvent(
          org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addHistogramEvent(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder addHistogramEvent(
          int index, org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addHistogramEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder addAllHistogramEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto> values) {
        copyOnWrite();
        instance.addAllHistogramEvent(values);
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder clearHistogramEvent() {
        copyOnWrite();
        instance.clearHistogramEvent();
        return this;
      }
      /**
       * <code>repeated .metrics.HistogramEventProto histogram_event = 6;</code>
       */
      public Builder removeHistogramEvent(int index) {
        copyOnWrite();
        instance.removeHistogramEvent(index);
        return this;
      }

      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> getTranslateEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getTranslateEventList());
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      @java.lang.Override
      public int getTranslateEventCount() {
        return instance.getTranslateEventCount();
      }/**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto getTranslateEvent(int index) {
        return instance.getTranslateEvent(index);
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder setTranslateEvent(
          int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
        copyOnWrite();
        instance.setTranslateEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder setTranslateEvent(
          int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setTranslateEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder addTranslateEvent(org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
        copyOnWrite();
        instance.addTranslateEvent(value);
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder addTranslateEvent(
          int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto value) {
        copyOnWrite();
        instance.addTranslateEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder addTranslateEvent(
          org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addTranslateEvent(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder addTranslateEvent(
          int index, org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addTranslateEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder addAllTranslateEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto> values) {
        copyOnWrite();
        instance.addAllTranslateEvent(values);
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder clearTranslateEvent() {
        copyOnWrite();
        instance.clearTranslateEvent();
        return this;
      }
      /**
       * <code>repeated .metrics.TranslateEventProto translate_event = 15;</code>
       */
      public Builder removeTranslateEvent(int index) {
        copyOnWrite();
        instance.removeTranslateEvent(index);
        return this;
      }

      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> getPrinterEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getPrinterEventList());
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      @java.lang.Override
      public int getPrinterEventCount() {
        return instance.getPrinterEventCount();
      }/**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto getPrinterEvent(int index) {
        return instance.getPrinterEvent(index);
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder setPrinterEvent(
          int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
        copyOnWrite();
        instance.setPrinterEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder setPrinterEvent(
          int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setPrinterEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder addPrinterEvent(org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
        copyOnWrite();
        instance.addPrinterEvent(value);
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder addPrinterEvent(
          int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto value) {
        copyOnWrite();
        instance.addPrinterEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder addPrinterEvent(
          org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addPrinterEvent(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder addPrinterEvent(
          int index, org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addPrinterEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder addAllPrinterEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto> values) {
        copyOnWrite();
        instance.addAllPrinterEvent(values);
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder clearPrinterEvent() {
        copyOnWrite();
        instance.clearPrinterEvent();
        return this;
      }
      /**
       * <code>repeated .metrics.PrinterEventProto printer_event = 16;</code>
       */
      public Builder removePrinterEvent(int index) {
        copyOnWrite();
        instance.removePrinterEvent(index);
        return this;
      }

      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> getChromeOsAppListLaunchEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getChromeOsAppListLaunchEventList());
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      @java.lang.Override
      public int getChromeOsAppListLaunchEventCount() {
        return instance.getChromeOsAppListLaunchEventCount();
      }/**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto getChromeOsAppListLaunchEvent(int index) {
        return instance.getChromeOsAppListLaunchEvent(index);
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder setChromeOsAppListLaunchEvent(
          int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
        copyOnWrite();
        instance.setChromeOsAppListLaunchEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder setChromeOsAppListLaunchEvent(
          int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.setChromeOsAppListLaunchEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder addChromeOsAppListLaunchEvent(org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
        copyOnWrite();
        instance.addChromeOsAppListLaunchEvent(value);
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder addChromeOsAppListLaunchEvent(
          int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto value) {
        copyOnWrite();
        instance.addChromeOsAppListLaunchEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder addChromeOsAppListLaunchEvent(
          org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addChromeOsAppListLaunchEvent(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder addChromeOsAppListLaunchEvent(
          int index, org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.Builder builderForValue) {
        copyOnWrite();
        instance.addChromeOsAppListLaunchEvent(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder addAllChromeOsAppListLaunchEvent(
          java.lang.Iterable<? extends org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto> values) {
        copyOnWrite();
        instance.addAllChromeOsAppListLaunchEvent(values);
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder clearChromeOsAppListLaunchEvent() {
        copyOnWrite();
        instance.clearChromeOsAppListLaunchEvent();
        return this;
      }
      /**
       * <code>repeated .metrics.ChromeOSAppListLaunchEventProto chrome_os_app_list_launch_event = 20;</code>
       */
      public Builder removeChromeOsAppListLaunchEvent(int index) {
        copyOnWrite();
        instance.removeChromeOsAppListLaunchEvent(index);
        return this;
      }

      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      @java.lang.Override
      public boolean hasStructuredData() {
        return instance.hasStructuredData();
      }
      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.StructuredData.StructuredDataProto getStructuredData() {
        return instance.getStructuredData();
      }
      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      public Builder setStructuredData(org.chromium.components.metrics.StructuredData.StructuredDataProto value) {
        copyOnWrite();
        instance.setStructuredData(value);
        return this;
        }
      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      public Builder setStructuredData(
          org.chromium.components.metrics.StructuredData.StructuredDataProto.Builder builderForValue) {
        copyOnWrite();
        instance.setStructuredData(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      public Builder mergeStructuredData(org.chromium.components.metrics.StructuredData.StructuredDataProto value) {
        copyOnWrite();
        instance.mergeStructuredData(value);
        return this;
      }
      /**
       * <code>optional .metrics.StructuredDataProto structured_data = 23;</code>
       */
      public Builder clearStructuredData() {  copyOnWrite();
        instance.clearStructuredData();
        return this;
      }

      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.SampledProfileProtos.SampledProfile> getSampledProfileList() {
        return java.util.Collections.unmodifiableList(
            instance.getSampledProfileList());
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      @java.lang.Override
      public int getSampledProfileCount() {
        return instance.getSampledProfileCount();
      }/**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.SampledProfileProtos.SampledProfile getSampledProfile(int index) {
        return instance.getSampledProfile(index);
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder setSampledProfile(
          int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
        copyOnWrite();
        instance.setSampledProfile(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder setSampledProfile(
          int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setSampledProfile(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder addSampledProfile(org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
        copyOnWrite();
        instance.addSampledProfile(value);
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder addSampledProfile(
          int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile value) {
        copyOnWrite();
        instance.addSampledProfile(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder addSampledProfile(
          org.chromium.components.metrics.SampledProfileProtos.SampledProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addSampledProfile(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder addSampledProfile(
          int index, org.chromium.components.metrics.SampledProfileProtos.SampledProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addSampledProfile(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder addAllSampledProfile(
          java.lang.Iterable<? extends org.chromium.components.metrics.SampledProfileProtos.SampledProfile> values) {
        copyOnWrite();
        instance.addAllSampledProfile(values);
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder clearSampledProfile() {
        copyOnWrite();
        instance.clearSampledProfile();
        return this;
      }
      /**
       * <pre>
       * A list of all collected sample-based profiles since the last UMA upload.
       * </pre>
       *
       * <code>repeated .metrics.SampledProfile sampled_profile = 11;</code>
       */
      public Builder removeSampledProfile(int index) {
        copyOnWrite();
        instance.removeSampledProfile(index);
        return this;
      }

      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      @java.lang.Override
      public boolean hasCastLogs() {
        return instance.hasCastLogs();
      }
      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CastLogsProtos.CastLogsProto getCastLogs() {
        return instance.getCastLogs();
      }
      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      public Builder setCastLogs(org.chromium.components.metrics.CastLogsProtos.CastLogsProto value) {
        copyOnWrite();
        instance.setCastLogs(value);
        return this;
        }
      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      public Builder setCastLogs(
          org.chromium.components.metrics.CastLogsProtos.CastLogsProto.Builder builderForValue) {
        copyOnWrite();
        instance.setCastLogs(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      public Builder mergeCastLogs(org.chromium.components.metrics.CastLogsProtos.CastLogsProto value) {
        copyOnWrite();
        instance.mergeCastLogs(value);
        return this;
      }
      /**
       * <pre>
       * Additional data related with Cast-enabled devices.
       * </pre>
       *
       * <code>optional .metrics.CastLogsProto cast_logs = 12;</code>
       */
      public Builder clearCastLogs() {  copyOnWrite();
        instance.clearCastLogs();
        return this;
      }

      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      @java.lang.Override
      public boolean hasReportingInfo() {
        return instance.hasReportingInfo();
      }
      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo getReportingInfo() {
        return instance.getReportingInfo();
      }
      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      public Builder setReportingInfo(org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo value) {
        copyOnWrite();
        instance.setReportingInfo(value);
        return this;
        }
      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      public Builder setReportingInfo(
          org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setReportingInfo(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      public Builder mergeReportingInfo(org.chromium.components.metrics.ReportingInfoOuterClass.ReportingInfo value) {
        copyOnWrite();
        instance.mergeReportingInfo(value);
        return this;
      }
      /**
       * <pre>
       * The ReportingInfo message sent in the X-Chrome-UMA-ReportingInfo header.
       * Copied in by the receiving server.
       * </pre>
       *
       * <code>optional .metrics.ReportingInfo reporting_info = 17;</code>
       */
      public Builder clearReportingInfo() {  copyOnWrite();
        instance.clearReportingInfo();
        return this;
      }

      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.metrics.TraceLogProtos.TraceLog> getTraceLogList() {
        return java.util.Collections.unmodifiableList(
            instance.getTraceLogList());
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      @java.lang.Override
      public int getTraceLogCount() {
        return instance.getTraceLogCount();
      }/**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.TraceLogProtos.TraceLog getTraceLog(int index) {
        return instance.getTraceLog(index);
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder setTraceLog(
          int index, org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
        copyOnWrite();
        instance.setTraceLog(index, value);
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder setTraceLog(
          int index, org.chromium.components.metrics.TraceLogProtos.TraceLog.Builder builderForValue) {
        copyOnWrite();
        instance.setTraceLog(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder addTraceLog(org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
        copyOnWrite();
        instance.addTraceLog(value);
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder addTraceLog(
          int index, org.chromium.components.metrics.TraceLogProtos.TraceLog value) {
        copyOnWrite();
        instance.addTraceLog(index, value);
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder addTraceLog(
          org.chromium.components.metrics.TraceLogProtos.TraceLog.Builder builderForValue) {
        copyOnWrite();
        instance.addTraceLog(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder addTraceLog(
          int index, org.chromium.components.metrics.TraceLogProtos.TraceLog.Builder builderForValue) {
        copyOnWrite();
        instance.addTraceLog(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder addAllTraceLog(
          java.lang.Iterable<? extends org.chromium.components.metrics.TraceLogProtos.TraceLog> values) {
        copyOnWrite();
        instance.addAllTraceLog(values);
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder clearTraceLog() {
        copyOnWrite();
        instance.clearTraceLog();
        return this;
      }
      /**
       * <pre>
       * The Chrome traces obtained during the current session. The start time,
       * duration and details depend on the experiment triggers in the current
       * session. This field is uploaded as independent logs, which contain only
       * session id and core system profile fields, apart from this field.
       * </pre>
       *
       * <code>repeated .metrics.TraceLog trace_log = 19;</code>
       */
      public Builder removeTraceLog(int index) {
        copyOnWrite();
        instance.removeTraceLog(index);
        return this;
      }

      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      @java.lang.Override
      public boolean hasCustomTabSession() {
        return instance.hasCustomTabSession();
      }
      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      @java.lang.Override
      public org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto getCustomTabSession() {
        return instance.getCustomTabSession();
      }
      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      public Builder setCustomTabSession(org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto value) {
        copyOnWrite();
        instance.setCustomTabSession(value);
        return this;
        }
      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      public Builder setCustomTabSession(
          org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto.Builder builderForValue) {
        copyOnWrite();
        instance.setCustomTabSession(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      public Builder mergeCustomTabSession(org.chromium.components.metrics.CustomTabSessionProtos.CustomTabSessionProto value) {
        copyOnWrite();
        instance.mergeCustomTabSession(value);
        return this;
      }
      /**
       * <pre>
       * Information about a Custom Tabs session, recorded in the log when the
       * a CCT session ended. If custom tabs are opened and closed multiple times
       * within the same log session, only the last one will be recorded. This is
       * used to identify applications that use Custom Tabs in an abusive way. This
       * is specific to Android.
       * </pre>
       *
       * <code>optional .metrics.CustomTabSessionProto custom_tab_session = 27;</code>
       */
      public Builder clearCustomTabSession() {  copyOnWrite();
        instance.clearCustomTabSession();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:metrics.ChromeUserMetricsExtension)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "clientId_",
              "sessionId_",
              "systemProfile_",
              "userActionEvent_",
              org.chromium.components.metrics.UserActionEventProtos.UserActionEventProto.class,
              "omniboxEvent_",
              org.chromium.components.metrics.OmniboxEventProtos.OmniboxEventProto.class,
              "histogramEvent_",
              org.chromium.components.metrics.HistogramEventProtos.HistogramEventProto.class,
              "product_",
              "sampledProfile_",
              org.chromium.components.metrics.SampledProfileProtos.SampledProfile.class,
              "castLogs_",
              "translateEvent_",
              org.chromium.components.metrics.TranslateEventProtos.TranslateEventProto.class,
              "printerEvent_",
              org.chromium.components.metrics.PrinterEventProtos.PrinterEventProto.class,
              "reportingInfo_",
              "traceLog_",
              org.chromium.components.metrics.TraceLogProtos.TraceLog.class,
              "chromeOsAppListLaunchEvent_",
              org.chromium.components.metrics.ChromeOsAppListLaunchEvent.ChromeOSAppListLaunchEventProto.class,
              "userDemographics_",
              "structuredData_",
              "userId_",
              "timeLogCreated_",
              "timeLogClosed_",
              "customTabSession_",
              "recordId_",
            };
            java.lang.String info =
                "\u0001\u0015\u0000\u0001\u0001\u001c\u0015\u0000\b\u0000\u0001\u1005\u0001\u0002" +
                "\u1004\u0002\u0003\u1009\u0007\u0004\u001b\u0005\u001b\u0006\u001b\n\u1004\u0000" +
                "\u000b\u001b\f\u1009\n\u000f\u001b\u0010\u001b\u0011\u1009\u000b\u0013\u001b\u0014" +
                "\u001b\u0015\u1009\b\u0017\u1009\t\u0018\u1005\u0003\u0019\u1009\u0005\u001a\u1009" +
                "\u0006\u001b\u1009\f\u001c\u1002\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:metrics.ChromeUserMetricsExtension)
    private static final org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension DEFAULT_INSTANCE;
    static {
      ChromeUserMetricsExtension defaultInstance = new ChromeUserMetricsExtension();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChromeUserMetricsExtension.class, defaultInstance);
    }

    public static org.chromium.components.metrics.ChromeUserMetricsExtensionProtos.ChromeUserMetricsExtension getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChromeUserMetricsExtension> PARSER;

    public static com.google.protobuf.Parser<ChromeUserMetricsExtension> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
