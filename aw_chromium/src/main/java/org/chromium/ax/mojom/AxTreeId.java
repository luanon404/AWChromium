// AxTreeId.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     ui/accessibility/mojom/ax_tree_id.mojom
//

package org.chromium.ax.mojom;

import androidx.annotation.IntDef;


public final class AxTreeId extends org.chromium.mojo.bindings.Union {

    public static final class Tag {
        public static final int Unknown = 0;
        public static final int Token = 1;
    };
    private byte mUnknown;
    private org.chromium.mojo_base.mojom.UnguessableToken mToken;

    public void setUnknown(byte unknown) {
        this.mTag = Tag.Unknown;
        this.mUnknown = unknown;
    }

    public byte getUnknown() {
        assert this.mTag == Tag.Unknown;
        return this.mUnknown;
    }

    public void setToken(org.chromium.mojo_base.mojom.UnguessableToken token) {
        this.mTag = Tag.Token;
        this.mToken = token;
    }

    public org.chromium.mojo_base.mojom.UnguessableToken getToken() {
        assert this.mTag == Tag.Token;
        return this.mToken;
    }


    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder0, int offset) {
        encoder0.encode(org.chromium.mojo.bindings.BindingsHelper.UNION_SIZE, offset);
        encoder0.encode(this.mTag, offset + 4);
        switch (mTag) {
            case Tag.Unknown: {
                
                encoder0.encode(this.mUnknown, offset + 8);
                break;
            }
            case Tag.Token: {
                
                encoder0.encode(this.mToken, offset + 8, false);
                break;
            }
            default: {
                break;
            }
        }
    }

    public static AxTreeId deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message).decoderForSerializedUnion(), 0);
    }

    public static final AxTreeId decode(org.chromium.mojo.bindings.Decoder decoder0, int offset) {
        org.chromium.mojo.bindings.DataHeader dataHeader = decoder0.readDataHeaderForUnion(offset);
        if (dataHeader.size == 0) {
            return null;
        }
        AxTreeId result = new AxTreeId();
        switch (dataHeader.elementsOrVersion) {
            case Tag.Unknown: {
                
                result.mUnknown = decoder0.readByte(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE);
                result.mTag = Tag.Unknown;
                break;
            }
            case Tag.Token: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mToken = org.chromium.mojo_base.mojom.UnguessableToken.decode(decoder1);
                result.mTag = Tag.Token;
                break;
            }
            default: {
                break;
            }
        }
        return result;
    }
}