//
// This file was generated by third_party/jni_zero/jni_generator.py
//
package org.chromium.android_webview;

import org.jni_zero.CheckDiscard;
import org.jni_zero.GEN_JNI;
import org.jni_zero.JniStaticTestMocker;
import org.jni_zero.NativeLibraryLoadedStatus;

@CheckDiscard("crbug.com/993421")
class AwPacProcessorJni implements AwPacProcessor.Natives {
    private static AwPacProcessor.Natives testInstance;

    public static final JniStaticTestMocker<AwPacProcessor.Natives> TEST_HOOKS = new JniStaticTestMocker<AwPacProcessor.Natives>() {
        @Override
        public void setInstanceForTesting(AwPacProcessor.Natives instance) {
            if (!GEN_JNI.TESTING_ENABLED) {
                throw new RuntimeException("Tried to set a JNI mock when mocks aren't enabled!");
            }
            testInstance = instance;
        }
    };

    @Override
    public long createNativePacProcessor() {
        return (long) GEN_JNI.org_chromium_android_1webview_AwPacProcessor_createNativePacProcessor();
    }

    @Override
    public void destroyNative(long nativeAwPacProcessor, AwPacProcessor caller) {
        GEN_JNI.org_chromium_android_1webview_AwPacProcessor_destroyNative(nativeAwPacProcessor, caller);
    }

    @Override
    public void initializeEnvironment() {
        GEN_JNI.org_chromium_android_1webview_AwPacProcessor_initializeEnvironment();
    }

    @Override
    public String makeProxyRequest(long nativeAwPacProcessor, AwPacProcessor caller, String url) {
        return (String) GEN_JNI.org_chromium_android_1webview_AwPacProcessor_makeProxyRequest(nativeAwPacProcessor, caller, url);
    }

    @Override
    public void setNetworkAndLinkAddresses(long nativeAwPacProcessor, long networkHandle, String[] adresses) {
        GEN_JNI.org_chromium_android_1webview_AwPacProcessor_setNetworkAndLinkAddresses(nativeAwPacProcessor, networkHandle, adresses);
    }

    @Override
    public boolean setProxyScript(long nativeAwPacProcessor, AwPacProcessor caller, String script) {
        return (boolean) GEN_JNI.org_chromium_android_1webview_AwPacProcessor_setProxyScript(nativeAwPacProcessor, caller, script);
    }

    public static AwPacProcessor.Natives get() {
        if (GEN_JNI.TESTING_ENABLED) {
            if (testInstance != null) {
                return testInstance;
            }
            if (GEN_JNI.REQUIRE_MOCK) {
                throw new UnsupportedOperationException("No mock found for the native implementation of AwPacProcessor.Natives. " + "The current configuration requires implementations be mocked.");
            }
        }
        NativeLibraryLoadedStatus.checkLoaded();
        return new AwPacProcessorJni();
    }
}
