// OriginWithPossibleWildcards.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/permissions_policy/permissions_policy.mojom
//

package org.chromium.blink.mojom;


public final class OriginWithPossibleWildcards extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 32;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(32, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public String scheme;
    public String host;
    public int port;
    public boolean isHostWildcard;
    public boolean isPortWildcard;

    private OriginWithPossibleWildcards(int version) {
        super(STRUCT_SIZE, version);
        this.port = (int) -1;
        this.isHostWildcard = (boolean) false;
        this.isPortWildcard = (boolean) false;
    }

    public OriginWithPossibleWildcards() {
        this(0);
    }

    public static OriginWithPossibleWildcards deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static OriginWithPossibleWildcards deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static OriginWithPossibleWildcards decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        OriginWithPossibleWildcards result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new OriginWithPossibleWildcards(elementsOrVersion);
                {
                    
                result.scheme = decoder0.readString(8, false);
                }
                {
                    
                result.host = decoder0.readString(16, false);
                }
                {
                    
                result.port = decoder0.readInt(24);
                }
                {
                    
                result.isHostWildcard = decoder0.readBoolean(28, 0);
                }
                {
                    
                result.isPortWildcard = decoder0.readBoolean(28, 1);
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.scheme, 8, false);
        
        encoder0.encode(this.host, 16, false);
        
        encoder0.encode(this.port, 24);
        
        encoder0.encode(this.isHostWildcard, 28, 0);
        
        encoder0.encode(this.isPortWildcard, 28, 1);
    }
}