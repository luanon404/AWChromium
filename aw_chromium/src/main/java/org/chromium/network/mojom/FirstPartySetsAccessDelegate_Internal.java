// FirstPartySetsAccessDelegate_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/first_party_sets_access_delegate.mojom
//

package org.chromium.network.mojom;

class FirstPartySetsAccessDelegate_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<FirstPartySetsAccessDelegate, FirstPartySetsAccessDelegate.Proxy> MANAGER = new org.chromium.mojo.bindings.Interface.Manager<FirstPartySetsAccessDelegate, FirstPartySetsAccessDelegate.Proxy>() {

        @Override
        public String getName() {
            return "network.mojom.FirstPartySetsAccessDelegate";
        }

        @Override
        public int getVersion() {
            return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core, org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, FirstPartySetsAccessDelegate impl) {
            return new Stub(core, impl);
        }

        @Override
        public FirstPartySetsAccessDelegate[] buildArray(int size) {
            return new FirstPartySetsAccessDelegate[size];
        }
    };


    private static final int NOTIFY_READY_ORDINAL = 0;

    private static final int SET_ENABLED_ORDINAL = 1;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements FirstPartySetsAccessDelegate.Proxy {

        Proxy(org.chromium.mojo.system.Core core, org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void notifyReady(FirstPartySetsReadyEvent readyEvent) {

            FirstPartySetsAccessDelegateNotifyReadyParams _message = new FirstPartySetsAccessDelegateNotifyReadyParams();

            _message.readyEvent = readyEvent;


            getProxyHandler().getMessageReceiver().accept(_message.serializeWithHeader(getProxyHandler().getCore(), new org.chromium.mojo.bindings.MessageHeader(NOTIFY_READY_ORDINAL)));

        }


        @Override
        public void setEnabled(boolean enabled) {

            FirstPartySetsAccessDelegateSetEnabledParams _message = new FirstPartySetsAccessDelegateSetEnabledParams();

            _message.enabled = enabled;


            getProxyHandler().getMessageReceiver().accept(_message.serializeWithHeader(getProxyHandler().getCore(), new org.chromium.mojo.bindings.MessageHeader(SET_ENABLED_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<FirstPartySetsAccessDelegate> {

        Stub(org.chromium.mojo.system.Core core, FirstPartySetsAccessDelegate impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader = message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch (header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(FirstPartySetsAccessDelegate_Internal.MANAGER, messageWithHeader);


                    case NOTIFY_READY_ORDINAL: {

                        FirstPartySetsAccessDelegateNotifyReadyParams data = FirstPartySetsAccessDelegateNotifyReadyParams.deserialize(messageWithHeader.getPayload());

                        getImpl().notifyReady(data.readyEvent);
                        return true;
                    }


                    case SET_ENABLED_ORDINAL: {

                        FirstPartySetsAccessDelegateSetEnabledParams data = FirstPartySetsAccessDelegateSetEnabledParams.deserialize(messageWithHeader.getPayload());

                        getImpl().setEnabled(data.enabled);
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e);
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader = message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch (header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(getCore(), FirstPartySetsAccessDelegate_Internal.MANAGER, messageWithHeader, receiver);


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e);
                return false;
            }
        }
    }


    static final class FirstPartySetsAccessDelegateNotifyReadyParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[]{new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public FirstPartySetsReadyEvent readyEvent;

        private FirstPartySetsAccessDelegateNotifyReadyParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public FirstPartySetsAccessDelegateNotifyReadyParams() {
            this(0);
        }

        public static FirstPartySetsAccessDelegateNotifyReadyParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static FirstPartySetsAccessDelegateNotifyReadyParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static FirstPartySetsAccessDelegateNotifyReadyParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            FirstPartySetsAccessDelegateNotifyReadyParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new FirstPartySetsAccessDelegateNotifyReadyParams(elementsOrVersion);
                {

                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.readyEvent = FirstPartySetsReadyEvent.decode(decoder1);
                }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);

            encoder0.encode(this.readyEvent, 8, false);
        }
    }


    static final class FirstPartySetsAccessDelegateSetEnabledParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[]{new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public boolean enabled;

        private FirstPartySetsAccessDelegateSetEnabledParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public FirstPartySetsAccessDelegateSetEnabledParams() {
            this(0);
        }

        public static FirstPartySetsAccessDelegateSetEnabledParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static FirstPartySetsAccessDelegateSetEnabledParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static FirstPartySetsAccessDelegateSetEnabledParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            FirstPartySetsAccessDelegateSetEnabledParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new FirstPartySetsAccessDelegateSetEnabledParams(elementsOrVersion);
                {

                    result.enabled = decoder0.readBoolean(8, 0);
                }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);

            encoder0.encode(this.enabled, 8, 0);
        }
    }


}
