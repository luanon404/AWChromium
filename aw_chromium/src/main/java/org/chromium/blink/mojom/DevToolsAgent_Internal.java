// DevToolsAgent_Internal.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/devtools/devtools_agent.mojom
//

package org.chromium.blink.mojom;


class DevToolsAgent_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<DevToolsAgent, DevToolsAgent.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<DevToolsAgent, DevToolsAgent.Proxy>() {

        @Override
        public String getName() {
            return "blink.mojom.DevToolsAgent";
        }

        @Override
        public int getVersion() {
          return 0;
        }

        @Override
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }

        @Override
        public Stub buildStub(org.chromium.mojo.system.Core core, DevToolsAgent impl) {
            return new Stub(core, impl);
        }

        @Override
        public DevToolsAgent[] buildArray(int size) {
          return new DevToolsAgent[size];
        }
    };


    private static final int ATTACH_DEV_TOOLS_SESSION_ORDINAL = 0;

    private static final int INSPECT_ELEMENT_ORDINAL = 1;

    private static final int REPORT_CHILD_TARGETS_ORDINAL = 2;

    private static final int GET_UNIQUE_FORM_CONTROL_ID_ORDINAL = 3;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements DevToolsAgent.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void attachDevToolsSession(
org.chromium.mojo.bindings.AssociatedInterfaceNotSupported host, org.chromium.mojo.bindings.AssociatedInterfaceRequestNotSupported session, org.chromium.mojo.bindings.InterfaceRequest<DevToolsSession> ioSession, DevToolsSessionState reattachSessionState, boolean clientExpectsBinaryResponses, boolean clientIsTrusted, String sessionId, boolean sessionWaitsForDebugger) {

            DevToolsAgentAttachDevToolsSessionParams _message = new DevToolsAgentAttachDevToolsSessionParams();

            _message.host = host;

            _message.session = session;

            _message.ioSession = ioSession;

            _message.reattachSessionState = reattachSessionState;

            _message.clientExpectsBinaryResponses = clientExpectsBinaryResponses;

            _message.clientIsTrusted = clientIsTrusted;

            _message.sessionId = sessionId;

            _message.sessionWaitsForDebugger = sessionWaitsForDebugger;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(ATTACH_DEV_TOOLS_SESSION_ORDINAL)));

        }


        @Override
        public void inspectElement(
org.chromium.gfx.mojom.Point point) {

            DevToolsAgentInspectElementParams _message = new DevToolsAgentInspectElementParams();

            _message.point = point;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(INSPECT_ELEMENT_ORDINAL)));

        }


        @Override
        public void reportChildTargets(
boolean report, boolean waitForDebugger, 
ReportChildTargets_Response callback) {

            DevToolsAgentReportChildTargetsParams _message = new DevToolsAgentReportChildTargetsParams();

            _message.report = report;

            _message.waitForDebugger = waitForDebugger;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    REPORT_CHILD_TARGETS_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new DevToolsAgentReportChildTargetsResponseParamsForwardToCallback(callback));

        }


        @Override
        public void getUniqueFormControlId(
int nodeId, 
GetUniqueFormControlId_Response callback) {

            DevToolsAgentGetUniqueFormControlIdParams _message = new DevToolsAgentGetUniqueFormControlIdParams();

            _message.nodeId = nodeId;


            getProxyHandler().getMessageReceiver().acceptWithResponder(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_UNIQUE_FORM_CONTROL_ID_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG,
                                    0)),
                    new DevToolsAgentGetUniqueFormControlIdResponseParamsForwardToCallback(callback));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<DevToolsAgent> {

        Stub(org.chromium.mojo.system.Core core, DevToolsAgent impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.NO_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                DevToolsAgent_Internal.MANAGER, messageWithHeader);





                    case ATTACH_DEV_TOOLS_SESSION_ORDINAL: {

                        DevToolsAgentAttachDevToolsSessionParams data =
                                DevToolsAgentAttachDevToolsSessionParams.deserialize(messageWithHeader.getPayload());

                        getImpl().attachDevToolsSession(data.host, data.session, data.ioSession, data.reattachSessionState, data.clientExpectsBinaryResponses, data.clientIsTrusted, data.sessionId, data.sessionWaitsForDebugger);
                        return true;
                    }





                    case INSPECT_ELEMENT_ORDINAL: {

                        DevToolsAgentInspectElementParams data =
                                DevToolsAgentInspectElementParams.deserialize(messageWithHeader.getPayload());

                        getImpl().inspectElement(data.point);
                        return true;
                    }






                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e);
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                int flags = org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG;
                if (header.hasFlag(org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG)) {
                    flags = flags | org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_SYNC_FLAG;
                }
                if (!header.validateHeader(flags)) {
                    return false;
                }
                switch(header.getType()) {

                    case org.chromium.mojo.bindings.interfacecontrol.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), DevToolsAgent_Internal.MANAGER, messageWithHeader, receiver);











                    case REPORT_CHILD_TARGETS_ORDINAL: {

                        DevToolsAgentReportChildTargetsParams data =
                                DevToolsAgentReportChildTargetsParams.deserialize(messageWithHeader.getPayload());

                        getImpl().reportChildTargets(data.report, data.waitForDebugger, new DevToolsAgentReportChildTargetsResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }







                    case GET_UNIQUE_FORM_CONTROL_ID_ORDINAL: {

                        DevToolsAgentGetUniqueFormControlIdParams data =
                                DevToolsAgentGetUniqueFormControlIdParams.deserialize(messageWithHeader.getPayload());

                        getImpl().getUniqueFormControlId(data.nodeId, new DevToolsAgentGetUniqueFormControlIdResponseParamsProxyToResponder(getCore(), receiver, header.getRequestId()));
                        return true;
                    }


                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e);
                return false;
            }
        }
    }


    
    static final class DevToolsAgentAttachDevToolsSessionParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 48;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(48, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.mojo.bindings.AssociatedInterfaceNotSupported host;
        public org.chromium.mojo.bindings.AssociatedInterfaceRequestNotSupported session;
        public org.chromium.mojo.bindings.InterfaceRequest<DevToolsSession> ioSession;
        public DevToolsSessionState reattachSessionState;
        public boolean clientExpectsBinaryResponses;
        public boolean clientIsTrusted;
        public String sessionId;
        public boolean sessionWaitsForDebugger;

        private DevToolsAgentAttachDevToolsSessionParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentAttachDevToolsSessionParams() {
            this(0);
        }

        public static DevToolsAgentAttachDevToolsSessionParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentAttachDevToolsSessionParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentAttachDevToolsSessionParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentAttachDevToolsSessionParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentAttachDevToolsSessionParams(elementsOrVersion);
                    {
                        
                    result.host = decoder0.readAssociatedServiceInterfaceNotSupported(8, false);
                    }
                    {
                        
                    result.session = decoder0.readAssociatedInterfaceRequestNotSupported(16, false);
                    }
                    {
                        
                    result.ioSession = decoder0.readInterfaceRequest(20, false);
                    }
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(24, true);
                    result.reattachSessionState = DevToolsSessionState.decode(decoder1);
                    }
                    {
                        
                    result.clientExpectsBinaryResponses = decoder0.readBoolean(32, 0);
                    }
                    {
                        
                    result.clientIsTrusted = decoder0.readBoolean(32, 1);
                    }
                    {
                        
                    result.sessionWaitsForDebugger = decoder0.readBoolean(32, 2);
                    }
                    {
                        
                    result.sessionId = decoder0.readString(40, false);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.host, 8, false);
            
            encoder0.encode(this.session, 16, false);
            
            encoder0.encode(this.ioSession, 20, false);
            
            encoder0.encode(this.reattachSessionState, 24, true);
            
            encoder0.encode(this.clientExpectsBinaryResponses, 32, 0);
            
            encoder0.encode(this.clientIsTrusted, 32, 1);
            
            encoder0.encode(this.sessionWaitsForDebugger, 32, 2);
            
            encoder0.encode(this.sessionId, 40, false);
        }
    }



    
    static final class DevToolsAgentInspectElementParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public org.chromium.gfx.mojom.Point point;

        private DevToolsAgentInspectElementParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentInspectElementParams() {
            this(0);
        }

        public static DevToolsAgentInspectElementParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentInspectElementParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentInspectElementParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentInspectElementParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentInspectElementParams(elementsOrVersion);
                    {
                        
                    org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                    result.point = org.chromium.gfx.mojom.Point.decode(decoder1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.point, 8, false);
        }
    }



    
    static final class DevToolsAgentReportChildTargetsParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public boolean report;
        public boolean waitForDebugger;

        private DevToolsAgentReportChildTargetsParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentReportChildTargetsParams() {
            this(0);
        }

        public static DevToolsAgentReportChildTargetsParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentReportChildTargetsParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentReportChildTargetsParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentReportChildTargetsParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentReportChildTargetsParams(elementsOrVersion);
                    {
                        
                    result.report = decoder0.readBoolean(8, 0);
                    }
                    {
                        
                    result.waitForDebugger = decoder0.readBoolean(8, 1);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.report, 8, 0);
            
            encoder0.encode(this.waitForDebugger, 8, 1);
        }
    }



    
    static final class DevToolsAgentReportChildTargetsResponseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 8;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(8, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];

        private DevToolsAgentReportChildTargetsResponseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentReportChildTargetsResponseParams() {
            this(0);
        }

        public static DevToolsAgentReportChildTargetsResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentReportChildTargetsResponseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentReportChildTargetsResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentReportChildTargetsResponseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentReportChildTargetsResponseParams(elementsOrVersion);

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        }
    }

    static class DevToolsAgentReportChildTargetsResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final DevToolsAgent.ReportChildTargets_Response mCallback;

        DevToolsAgentReportChildTargetsResponseParamsForwardToCallback(DevToolsAgent.ReportChildTargets_Response callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(REPORT_CHILD_TARGETS_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                mCallback.call();
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class DevToolsAgentReportChildTargetsResponseParamsProxyToResponder implements DevToolsAgent.ReportChildTargets_Response {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        DevToolsAgentReportChildTargetsResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call() {
            DevToolsAgentReportChildTargetsResponseParams _response = new DevToolsAgentReportChildTargetsResponseParams();

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    REPORT_CHILD_TARGETS_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



    
    static final class DevToolsAgentGetUniqueFormControlIdParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public int nodeId;

        private DevToolsAgentGetUniqueFormControlIdParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentGetUniqueFormControlIdParams() {
            this(0);
        }

        public static DevToolsAgentGetUniqueFormControlIdParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentGetUniqueFormControlIdParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentGetUniqueFormControlIdParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentGetUniqueFormControlIdParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentGetUniqueFormControlIdParams(elementsOrVersion);
                    {
                        
                    result.nodeId = decoder0.readInt(8);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.nodeId, 8);
        }
    }



    
    static final class DevToolsAgentGetUniqueFormControlIdResponseParams extends org.chromium.mojo.bindings.Struct {

        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
        public long id;

        private DevToolsAgentGetUniqueFormControlIdResponseParams(int version) {
            super(STRUCT_SIZE, version);
        }

        public DevToolsAgentGetUniqueFormControlIdResponseParams() {
            this(0);
        }

        public static DevToolsAgentGetUniqueFormControlIdResponseParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }

        /**
         * Similar to the method above, but deserializes from a |ByteBuffer| instance.
         *
         * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
         */
        public static DevToolsAgentGetUniqueFormControlIdResponseParams deserialize(java.nio.ByteBuffer data) {
            return deserialize(new org.chromium.mojo.bindings.Message(
                    data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
        }

        @SuppressWarnings("unchecked")
        public static DevToolsAgentGetUniqueFormControlIdResponseParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            decoder0.increaseStackDepth();
            DevToolsAgentGetUniqueFormControlIdResponseParams result;
            try {
                org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
                final int elementsOrVersion = mainDataHeader.elementsOrVersion;
                result = new DevToolsAgentGetUniqueFormControlIdResponseParams(elementsOrVersion);
                    {
                        
                    result.id = decoder0.readLong(8);
                    }

            } finally {
                decoder0.decreaseStackDepth();
            }
            return result;
        }

        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
            
            encoder0.encode(this.id, 8);
        }
    }

    static class DevToolsAgentGetUniqueFormControlIdResponseParamsForwardToCallback extends org.chromium.mojo.bindings.SideEffectFreeCloseable
            implements org.chromium.mojo.bindings.MessageReceiver {
        private final DevToolsAgent.GetUniqueFormControlId_Response mCallback;

        DevToolsAgentGetUniqueFormControlIdResponseParamsForwardToCallback(DevToolsAgent.GetUniqueFormControlId_Response callback) {
            this.mCallback = callback;
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(GET_UNIQUE_FORM_CONTROL_ID_ORDINAL,
                                           org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG)) {
                    return false;
                }

                DevToolsAgentGetUniqueFormControlIdResponseParams response = DevToolsAgentGetUniqueFormControlIdResponseParams.deserialize(messageWithHeader.getPayload());

                mCallback.call(response.id);
                return true;
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                return false;
            }
        }
    }

    static class DevToolsAgentGetUniqueFormControlIdResponseParamsProxyToResponder implements DevToolsAgent.GetUniqueFormControlId_Response {

        private final org.chromium.mojo.system.Core mCore;
        private final org.chromium.mojo.bindings.MessageReceiver mMessageReceiver;
        private final long mRequestId;

        DevToolsAgentGetUniqueFormControlIdResponseParamsProxyToResponder(
                org.chromium.mojo.system.Core core,
                org.chromium.mojo.bindings.MessageReceiver messageReceiver,
                long requestId) {
            mCore = core;
            mMessageReceiver = messageReceiver;
            mRequestId = requestId;
        }

        @Override
        public void call(Long id) {
            DevToolsAgentGetUniqueFormControlIdResponseParams _response = new DevToolsAgentGetUniqueFormControlIdResponseParams();

            _response.id = id;

            org.chromium.mojo.bindings.ServiceMessage _message =
                    _response.serializeWithHeader(
                            mCore,
                            new org.chromium.mojo.bindings.MessageHeader(
                                    GET_UNIQUE_FORM_CONTROL_ID_ORDINAL,
                                    org.chromium.mojo.bindings.MessageHeader.MESSAGE_IS_RESPONSE_FLAG,
                                    mRequestId));
            mMessageReceiver.accept(_message);
        }
    }



}
