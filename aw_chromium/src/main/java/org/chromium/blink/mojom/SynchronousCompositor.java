// SynchronousCompositor.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/input/synchronous_compositor.mojom
//

package org.chromium.blink.mojom;


public interface SynchronousCompositor extends org.chromium.mojo.bindings.Interface {



    interface Proxy extends SynchronousCompositor, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<SynchronousCompositor, SynchronousCompositor.Proxy> MANAGER = SynchronousCompositor_Internal.MANAGER;

    void demandDrawHwAsync(
SyncCompositorDemandDrawHwParams drawParams);


    void demandDrawHw(
SyncCompositorDemandDrawHwParams drawParams, 
DemandDrawHw_Response callback);

    interface DemandDrawHw_Response extends org.chromium.mojo.bindings.Callbacks.Callback6<SyncCompositorCommonRendererParams, Integer, Integer, org.chromium.viz.mojom.LocalSurfaceId, org.chromium.viz.mojom.CompositorFrame, org.chromium.viz.mojom.HitTestRegionList> { }


    void setSharedMemory(
org.chromium.mojo_base.mojom.WritableSharedMemoryRegion shmRegion, 
SetSharedMemory_Response callback);

    interface SetSharedMemory_Response extends org.chromium.mojo.bindings.Callbacks.Callback2<Boolean, SyncCompositorCommonRendererParams> { }


    void demandDrawSw(
SyncCompositorDemandDrawSwParams drawParams, 
DemandDrawSw_Response callback);

    interface DemandDrawSw_Response extends org.chromium.mojo.bindings.Callbacks.Callback3<SyncCompositorCommonRendererParams, Integer, org.chromium.viz.mojom.CompositorFrameMetadata> { }


    void willSkipDraw(
);


    void zeroSharedMemory(
);


    void zoomBy(
float delta, org.chromium.gfx.mojom.Point anchor, 
ZoomBy_Response callback);

    interface ZoomBy_Response extends org.chromium.mojo.bindings.Callbacks.Callback1<SyncCompositorCommonRendererParams> { }


    void setMemoryPolicy(
int bytesLimit);


    void reclaimResources(
int layerTreeFrameSinkId, org.chromium.viz.mojom.ReturnedResource[] resources);


    void onCompositorFrameTransitionDirectiveProcessed(
int layerTreeFrameSinkId, int sequenceId);


    void setScroll(
org.chromium.gfx.mojom.PointF offset);


    void beginFrame(
org.chromium.viz.mojom.BeginFrameArgs args, java.util.Map<Integer, org.chromium.viz.mojom.FrameTimingDetails> timingDetails);


    void setBeginFrameSourcePaused(
boolean paused);


}
