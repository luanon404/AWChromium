// CreateRemoteChildParams.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/frame/remote_frame.mojom
//

package org.chromium.blink.mojom;

import androidx.annotation.IntDef;


public final class CreateRemoteChildParams extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 80;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(80, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public RemoteFrameToken token;
    public FrameToken openerFrameToken;
    public int treeScopeType;
    public FrameReplicationState replicationState;
    public FrameOwnerProperties ownerProperties;
    public boolean isLoading;
    public org.chromium.mojo_base.mojom.UnguessableToken devtoolsFrameToken;
    public RemoteFrameInterfacesFromBrowser frameInterfaces;
    public CreateRemoteChildParams[] childParams;

    private CreateRemoteChildParams(int version) {
        super(STRUCT_SIZE, version);
    }

    public CreateRemoteChildParams() {
        this(0);
    }

    public static CreateRemoteChildParams deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static CreateRemoteChildParams deserialize(java.nio.ByteBuffer data) {
        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static CreateRemoteChildParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        CreateRemoteChildParams result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            final int elementsOrVersion = mainDataHeader.elementsOrVersion;
            result = new CreateRemoteChildParams(elementsOrVersion);
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                result.token = RemoteFrameToken.decode(decoder1);
                }
                {
                    
                result.openerFrameToken = FrameToken.decode(decoder0, 16);
                }
                {
                    
                result.treeScopeType = decoder0.readInt(32);
                    TreeScopeType.validate(result.treeScopeType);
                    result.treeScopeType = TreeScopeType.toKnownValue(result.treeScopeType);
                }
                {
                    
                result.isLoading = decoder0.readBoolean(36, 0);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(40, false);
                result.replicationState = FrameReplicationState.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(48, false);
                result.ownerProperties = FrameOwnerProperties.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, false);
                result.devtoolsFrameToken = org.chromium.mojo_base.mojom.UnguessableToken.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(64, false);
                result.frameInterfaces = RemoteFrameInterfacesFromBrowser.decode(decoder1);
                }
                {
                    
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(72, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.childParams = new CreateRemoteChildParams[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.childParams[i1] = CreateRemoteChildParams.decode(decoder2);
                    }
                }
                }

        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        encoder0.encode(this.token, 8, false);
        
        encoder0.encode(this.openerFrameToken, 16, true);
        
        encoder0.encode(this.treeScopeType, 32);
        
        encoder0.encode(this.isLoading, 36, 0);
        
        encoder0.encode(this.replicationState, 40, false);
        
        encoder0.encode(this.ownerProperties, 48, false);
        
        encoder0.encode(this.devtoolsFrameToken, 56, false);
        
        encoder0.encode(this.frameInterfaces, 64, false);
        
        if (this.childParams == null) {
            encoder0.encodeNullPointer(72, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(this.childParams.length, 72, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < this.childParams.length; ++i0) {
                
                encoder1.encode(this.childParams[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
    }
}