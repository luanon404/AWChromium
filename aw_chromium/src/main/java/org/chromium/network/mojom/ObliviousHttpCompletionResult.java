// ObliviousHttpCompletionResult.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/oblivious_http_request.mojom
//

package org.chromium.network.mojom;

import androidx.annotation.IntDef;


public final class ObliviousHttpCompletionResult extends org.chromium.mojo.bindings.Union {

    public static final class Tag {
        public static final int NetError = 0;
        public static final int OuterResponseErrorCode = 1;
        public static final int InnerResponse = 2;
    };
    private int mNetError;
    private int mOuterResponseErrorCode;
    private ObliviousHttpResponse mInnerResponse;

    public void setNetError(int netError) {
        this.mTag = Tag.NetError;
        this.mNetError = netError;
    }

    public int getNetError() {
        assert this.mTag == Tag.NetError;
        return this.mNetError;
    }

    public void setOuterResponseErrorCode(int outerResponseErrorCode) {
        this.mTag = Tag.OuterResponseErrorCode;
        this.mOuterResponseErrorCode = outerResponseErrorCode;
    }

    public int getOuterResponseErrorCode() {
        assert this.mTag == Tag.OuterResponseErrorCode;
        return this.mOuterResponseErrorCode;
    }

    public void setInnerResponse(ObliviousHttpResponse innerResponse) {
        this.mTag = Tag.InnerResponse;
        this.mInnerResponse = innerResponse;
    }

    public ObliviousHttpResponse getInnerResponse() {
        assert this.mTag == Tag.InnerResponse;
        return this.mInnerResponse;
    }


    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder0, int offset) {
        encoder0.encode(org.chromium.mojo.bindings.BindingsHelper.UNION_SIZE, offset);
        encoder0.encode(this.mTag, offset + 4);
        switch (mTag) {
            case Tag.NetError: {
                
                encoder0.encode(this.mNetError, offset + 8);
                break;
            }
            case Tag.OuterResponseErrorCode: {
                
                encoder0.encode(this.mOuterResponseErrorCode, offset + 8);
                break;
            }
            case Tag.InnerResponse: {
                
                encoder0.encode(this.mInnerResponse, offset + 8, false);
                break;
            }
            default: {
                break;
            }
        }
    }

    public static ObliviousHttpCompletionResult deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message).decoderForSerializedUnion(), 0);
    }

    public static final ObliviousHttpCompletionResult decode(org.chromium.mojo.bindings.Decoder decoder0, int offset) {
        org.chromium.mojo.bindings.DataHeader dataHeader = decoder0.readDataHeaderForUnion(offset);
        if (dataHeader.size == 0) {
            return null;
        }
        ObliviousHttpCompletionResult result = new ObliviousHttpCompletionResult();
        switch (dataHeader.elementsOrVersion) {
            case Tag.NetError: {
                
                result.mNetError = decoder0.readInt(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE);
                result.mTag = Tag.NetError;
                break;
            }
            case Tag.OuterResponseErrorCode: {
                
                result.mOuterResponseErrorCode = decoder0.readInt(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE);
                result.mTag = Tag.OuterResponseErrorCode;
                break;
            }
            case Tag.InnerResponse: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mInnerResponse = ObliviousHttpResponse.decode(decoder1);
                result.mTag = Tag.InnerResponse;
                break;
            }
            default: {
                break;
            }
        }
        return result;
    }
}