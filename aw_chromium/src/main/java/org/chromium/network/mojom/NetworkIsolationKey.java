// NetworkIsolationKey.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/network_isolation_key.mojom
//

package org.chromium.network.mojom;

import androidx.annotation.IntDef;


public final class NetworkIsolationKey extends org.chromium.mojo.bindings.Union {

    public static final class Tag {
        public static final int Empty = 0;
        public static final int NonEmpty = 1;
    };
    private EmptyNetworkIsolationKey mEmpty;
    private NonEmptyNetworkIsolationKey mNonEmpty;

    public void setEmpty(EmptyNetworkIsolationKey empty) {
        this.mTag = Tag.Empty;
        this.mEmpty = empty;
    }

    public EmptyNetworkIsolationKey getEmpty() {
        assert this.mTag == Tag.Empty;
        return this.mEmpty;
    }

    public void setNonEmpty(NonEmptyNetworkIsolationKey nonEmpty) {
        this.mTag = Tag.NonEmpty;
        this.mNonEmpty = nonEmpty;
    }

    public NonEmptyNetworkIsolationKey getNonEmpty() {
        assert this.mTag == Tag.NonEmpty;
        return this.mNonEmpty;
    }


    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder0, int offset) {
        encoder0.encode(org.chromium.mojo.bindings.BindingsHelper.UNION_SIZE, offset);
        encoder0.encode(this.mTag, offset + 4);
        switch (mTag) {
            case Tag.Empty: {
                
                encoder0.encode(this.mEmpty, offset + 8, false);
                break;
            }
            case Tag.NonEmpty: {
                
                encoder0.encode(this.mNonEmpty, offset + 8, false);
                break;
            }
            default: {
                break;
            }
        }
    }

    public static NetworkIsolationKey deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message).decoderForSerializedUnion(), 0);
    }

    public static final NetworkIsolationKey decode(org.chromium.mojo.bindings.Decoder decoder0, int offset) {
        org.chromium.mojo.bindings.DataHeader dataHeader = decoder0.readDataHeaderForUnion(offset);
        if (dataHeader.size == 0) {
            return null;
        }
        NetworkIsolationKey result = new NetworkIsolationKey();
        switch (dataHeader.elementsOrVersion) {
            case Tag.Empty: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mEmpty = EmptyNetworkIsolationKey.decode(decoder1);
                result.mTag = Tag.Empty;
                break;
            }
            case Tag.NonEmpty: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mNonEmpty = NonEmptyNetworkIsolationKey.decode(decoder1);
                result.mTag = Tag.NonEmpty;
                break;
            }
            default: {
                break;
            }
        }
        return result;
    }
}