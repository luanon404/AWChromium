// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structured_data.proto

package org.chromium.components.metrics;

public final class StructuredData {
    private StructuredData() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface StructuredEventProtoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:metrics.StructuredEventProto)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         *
         * @return Whether the profileEventId field is set.
         */
        boolean hasProfileEventId();

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         *
         * @return The profileEventId.
         */
        long getProfileEventId();

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         *
         * @return Whether the userProjectId field is set.
         */
        boolean hasUserProjectId();

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         *
         * @return The userProjectId.
         */
        long getUserProjectId();

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         *
         * @return Whether the deviceProjectId field is set.
         */
        boolean hasDeviceProjectId();

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         *
         * @return The deviceProjectId.
         */
        long getDeviceProjectId();

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         *
         * @return Whether the eventNameHash field is set.
         */
        boolean hasEventNameHash();

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         *
         * @return The eventNameHash.
         */
        long getEventNameHash();

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> getMetricsList();

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric getMetrics(int index);

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        int getMetricsCount();

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         *
         * @return Whether the eventType field is set.
         */
        boolean hasEventType();

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         *
         * @return The eventType.
         */
        org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType getEventType();

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         *
         * @return Whether the projectNameHash field is set.
         */
        boolean hasProjectNameHash();

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         *
         * @return The projectNameHash.
         */
        long getProjectNameHash();

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         *
         * @return Whether the eventSequenceMetadata field is set.
         */
        boolean hasEventSequenceMetadata();

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         *
         * @return The eventSequenceMetadata.
         */
        org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata getEventSequenceMetadata();
    }

    /**
     * <pre>
     * One structured metrics event, containing several hashed and unhashed metrics
     * related to a single event type. Structured metrics have hashing keys based on
     * the project. A project refers to a use-case of the framework (ie bluetooth,
     * event sequence).
     * Structured metrics is currently only used for the CrOS platform, so some of
     * the fields are CrOS-specific (ie device_project_id, user_project_id). If
     * structured metrics were to expand to other platforms, these fields will need
     * to be revisited.
     * Next tag: 10
     * </pre>
     * <p>
     * Protobuf type {@code metrics.StructuredEventProto}
     */
    public static final class StructuredEventProto extends com.google.protobuf.GeneratedMessageLite<StructuredEventProto, StructuredEventProto.Builder> implements
            // @@protoc_insertion_point(message_implements:metrics.StructuredEventProto)
            StructuredEventProtoOrBuilder {
        private StructuredEventProto() {
            metrics_ = emptyProtobufList();
        }

        /**
         * <pre>
         * Type of this event, which determines which log source the event is saved
         * into. An event should have type RAW_STRING if and only if the event may
         * contain raw string metrics, ie. strings that have not been HMAC'd. The
         * UNKNOWN value is considered an error and should never be sent.
         * An event should be marked as a SEQUENCE if it contains temporal data.
         * </pre>
         * <p>
         * Protobuf enum {@code metrics.StructuredEventProto.EventType}
         */
        public enum EventType implements com.google.protobuf.Internal.EnumLite {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <code>REGULAR = 1;</code>
             */
            REGULAR(1),
            /**
             * <code>RAW_STRING = 2;</code>
             */
            RAW_STRING(2),
            /**
             * <code>SEQUENCE = 3;</code>
             */
            SEQUENCE(3),
            ;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <code>REGULAR = 1;</code>
             */
            public static final int REGULAR_VALUE = 1;
            /**
             * <code>RAW_STRING = 2;</code>
             */
            public static final int RAW_STRING_VALUE = 2;
            /**
             * <code>SEQUENCE = 3;</code>
             */
            public static final int SEQUENCE_VALUE = 3;


            @java.lang.Override
            public final int getNumber() {
                return value;
            }

            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static EventType valueOf(int value) {
                return forNumber(value);
            }

            public static EventType forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return REGULAR;
                    case 2:
                        return RAW_STRING;
                    case 3:
                        return SEQUENCE;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<EventType> internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<EventType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
                @java.lang.Override
                public EventType findValueByNumber(int number) {
                    return EventType.forNumber(number);
                }
            };

            public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
                return EventTypeVerifier.INSTANCE;
            }

            private static final class EventTypeVerifier implements com.google.protobuf.Internal.EnumVerifier {
                static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new EventTypeVerifier();

                @java.lang.Override
                public boolean isInRange(int number) {
                    return EventType.forNumber(number) != null;
                }
            }

            private final int value;

            EventType(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:metrics.StructuredEventProto.EventType)
        }

        /**
         * <pre>
         * These enum values represent the type of user segment for the primary
         * user.
         * </pre>
         * <p>
         * Protobuf enum {@code metrics.StructuredEventProto.PrimaryUserSegment}
         */
        public enum PrimaryUserSegment implements com.google.protobuf.Internal.EnumLite {
            /**
             * <code>UNKNOWN_PRIMARY_USER_TYPE = 0;</code>
             */
            UNKNOWN_PRIMARY_USER_TYPE(0),
            /**
             * <pre>
             * Primary profile is for an unmanaged user.
             * </pre>
             *
             * <code>UNMANAGED = 1;</code>
             */
            UNMANAGED(1),
            /**
             * <pre>
             * Primary profile is for a user belonging to a K-12 EDU organization.
             * </pre>
             *
             * <code>K12 = 2;</code>
             */
            K12(2),
            /**
             * <pre>
             * Primary profile is for a user belonging to an university EDU
             * organization.
             * </pre>
             *
             * <code>UNIVERSITY = 3;</code>
             */
            UNIVERSITY(3),
            /**
             * <pre>
             * Primary profile is for a user belonging to a non-profit organization.
             * </pre>
             *
             * <code>NON_PROFIT = 4;</code>
             */
            NON_PROFIT(4),
            /**
             * <pre>
             * Primary profile is for a user belonging to an enterprise organization.
             * </pre>
             *
             * <code>ENTERPRISE_ORGANIZATION = 5;</code>
             */
            ENTERPRISE_ORGANIZATION(5),
            /**
             * <pre>
             * Primary profile is for a kiosk app.
             * </pre>
             *
             * <code>KIOS_APP = 6;</code>
             */
            KIOS_APP(6),
            /**
             * <pre>
             * Primary profile is for a managed guest session.
             * </pre>
             *
             * <code>MANAGED_GUEST_SESSION = 7;</code>
             */
            MANAGED_GUEST_SESSION(7),
            /**
             * <pre>
             * Primary profile is for a Demo Mode.
             * </pre>
             *
             * <code>DEMO_MODE = 8;</code>
             */
            DEMO_MODE(8),
            ;

            /**
             * <code>UNKNOWN_PRIMARY_USER_TYPE = 0;</code>
             */
            public static final int UNKNOWN_PRIMARY_USER_TYPE_VALUE = 0;
            /**
             * <pre>
             * Primary profile is for an unmanaged user.
             * </pre>
             *
             * <code>UNMANAGED = 1;</code>
             */
            public static final int UNMANAGED_VALUE = 1;
            /**
             * <pre>
             * Primary profile is for a user belonging to a K-12 EDU organization.
             * </pre>
             *
             * <code>K12 = 2;</code>
             */
            public static final int K12_VALUE = 2;
            /**
             * <pre>
             * Primary profile is for a user belonging to an university EDU
             * organization.
             * </pre>
             *
             * <code>UNIVERSITY = 3;</code>
             */
            public static final int UNIVERSITY_VALUE = 3;
            /**
             * <pre>
             * Primary profile is for a user belonging to a non-profit organization.
             * </pre>
             *
             * <code>NON_PROFIT = 4;</code>
             */
            public static final int NON_PROFIT_VALUE = 4;
            /**
             * <pre>
             * Primary profile is for a user belonging to an enterprise organization.
             * </pre>
             *
             * <code>ENTERPRISE_ORGANIZATION = 5;</code>
             */
            public static final int ENTERPRISE_ORGANIZATION_VALUE = 5;
            /**
             * <pre>
             * Primary profile is for a kiosk app.
             * </pre>
             *
             * <code>KIOS_APP = 6;</code>
             */
            public static final int KIOS_APP_VALUE = 6;
            /**
             * <pre>
             * Primary profile is for a managed guest session.
             * </pre>
             *
             * <code>MANAGED_GUEST_SESSION = 7;</code>
             */
            public static final int MANAGED_GUEST_SESSION_VALUE = 7;
            /**
             * <pre>
             * Primary profile is for a Demo Mode.
             * </pre>
             *
             * <code>DEMO_MODE = 8;</code>
             */
            public static final int DEMO_MODE_VALUE = 8;


            @java.lang.Override
            public final int getNumber() {
                return value;
            }

            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static PrimaryUserSegment valueOf(int value) {
                return forNumber(value);
            }

            public static PrimaryUserSegment forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN_PRIMARY_USER_TYPE;
                    case 1:
                        return UNMANAGED;
                    case 2:
                        return K12;
                    case 3:
                        return UNIVERSITY;
                    case 4:
                        return NON_PROFIT;
                    case 5:
                        return ENTERPRISE_ORGANIZATION;
                    case 6:
                        return KIOS_APP;
                    case 7:
                        return MANAGED_GUEST_SESSION;
                    case 8:
                        return DEMO_MODE;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<PrimaryUserSegment> internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<PrimaryUserSegment> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<PrimaryUserSegment>() {
                @java.lang.Override
                public PrimaryUserSegment findValueByNumber(int number) {
                    return PrimaryUserSegment.forNumber(number);
                }
            };

            public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
                return PrimaryUserSegmentVerifier.INSTANCE;
            }

            private static final class PrimaryUserSegmentVerifier implements com.google.protobuf.Internal.EnumVerifier {
                static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new PrimaryUserSegmentVerifier();

                @java.lang.Override
                public boolean isInRange(int number) {
                    return PrimaryUserSegment.forNumber(number) != null;
                }
            }

            private final int value;

            PrimaryUserSegment(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:metrics.StructuredEventProto.PrimaryUserSegment)
        }

        public interface MetricOrBuilder extends
                // @@protoc_insertion_point(interface_extends:metrics.StructuredEventProto.Metric)
                com.google.protobuf.MessageLiteOrBuilder {

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             *
             * @return Whether the nameHash field is set.
             */
            boolean hasNameHash();

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             *
             * @return The nameHash.
             */
            long getNameHash();

            /**
             * <code>fixed64 value_hmac = 2;</code>
             *
             * @return Whether the valueHmac field is set.
             */
            boolean hasValueHmac();

            /**
             * <code>fixed64 value_hmac = 2;</code>
             *
             * @return The valueHmac.
             */
            long getValueHmac();

            /**
             * <code>int64 value_int64 = 3;</code>
             *
             * @return Whether the valueInt64 field is set.
             */
            boolean hasValueInt64();

            /**
             * <code>int64 value_int64 = 3;</code>
             *
             * @return The valueInt64.
             */
            long getValueInt64();

            /**
             * <code>string value_string = 4;</code>
             *
             * @return Whether the valueString field is set.
             */
            boolean hasValueString();

            /**
             * <code>string value_string = 4;</code>
             *
             * @return The valueString.
             */
            java.lang.String getValueString();

            /**
             * <code>string value_string = 4;</code>
             *
             * @return The bytes for valueString.
             */
            com.google.protobuf.ByteString getValueStringBytes();

            /**
             * <code>double value_double = 5;</code>
             *
             * @return Whether the valueDouble field is set.
             */
            boolean hasValueDouble();

            /**
             * <code>double value_double = 5;</code>
             *
             * @return The valueDouble.
             */
            double getValueDouble();

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             *
             * @return Whether the valueRepeatedInt64 field is set.
             */
            boolean hasValueRepeatedInt64();

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             *
             * @return The valueRepeatedInt64.
             */
            org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 getValueRepeatedInt64();

            org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.ValueCase getValueCase();
        }

        /**
         * <pre>
         * All metric values for this event. Each metric has two properties defined in
         * structured.xml that determine what is recorded.
         * 1. Metric name. This is a string, and the first 8 bytes of its MD5 hash is
         *    recorded as name_hash.
         * 2. Kind. Each metric can store four kinds of values.
         *    - int64. The client supplies an int64 value for the metric, and that
         *      value is recorded as-is in value_int64.
         *    - string. The client supplies a string value for the metric, which is
         *      recorded as-is in value_string. This is sometimes referred to as a
         *      "raw string" to differentiate from the following.
         *    - hashed-string. The client supplies an arbitrary string for the metric.
         *      The string itself is not recorded, instead, value_hmac records the
         *      first 8 bytes of:
         *          HMAC_SHA256(concat(string, metric_name), event_key)
         *    - double. The client supplies a double value for the metric, which is
         *      recorded as-is in value_double.
         *      The event_key is a per-profile, per-client, per-project secret 32-byte
         *      key used only for signing hashed values for this event. Keys should
         *      never leave the device, and are rotated at least every 90 days.
         *    - int64 array: This client supplies an array of int64 values for the
         *      metric. Each metric will have an max defined by the metric definition.
         * </pre>
         * <p>
         * Protobuf type {@code metrics.StructuredEventProto.Metric}
         */
        public static final class Metric extends com.google.protobuf.GeneratedMessageLite<Metric, Metric.Builder> implements
                // @@protoc_insertion_point(message_implements:metrics.StructuredEventProto.Metric)
                MetricOrBuilder {
            private Metric() {
            }

            public interface RepeatedInt64OrBuilder extends
                    // @@protoc_insertion_point(interface_extends:metrics.StructuredEventProto.Metric.RepeatedInt64)
                    com.google.protobuf.MessageLiteOrBuilder {

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @return A list containing the values.
                 */
                java.util.List<java.lang.Long> getValuesList();

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @return The count of values.
                 */
                int getValuesCount();

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @param index The index of the element to return.
                 * @return The values at the given index.
                 */
                long getValues(int index);
            }

            /**
             * <pre>
             * Wrapper of repeated integer fields.
             * </pre>
             * <p>
             * Protobuf type {@code metrics.StructuredEventProto.Metric.RepeatedInt64}
             */
            public static final class RepeatedInt64 extends com.google.protobuf.GeneratedMessageLite<RepeatedInt64, RepeatedInt64.Builder> implements
                    // @@protoc_insertion_point(message_implements:metrics.StructuredEventProto.Metric.RepeatedInt64)
                    RepeatedInt64OrBuilder {
                private RepeatedInt64() {
                    values_ = emptyLongList();
                }

                public static final int VALUES_FIELD_NUMBER = 1;
                private com.google.protobuf.Internal.LongList values_;

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @return A list containing the values.
                 */
                @java.lang.Override
                public java.util.List<java.lang.Long> getValuesList() {
                    return values_;
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @return The count of values.
                 */
                @java.lang.Override
                public int getValuesCount() {
                    return values_.size();
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @param index The index of the element to return.
                 * @return The values at the given index.
                 */
                @java.lang.Override
                public long getValues(int index) {
                    return values_.getLong(index);
                }

                private int valuesMemoizedSerializedSize = -1;

                private void ensureValuesIsMutable() {
                    com.google.protobuf.Internal.LongList tmp = values_;
                    if (!tmp.isModifiable()) {
                        values_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
                    }
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @param index The index to set the value at.
                 * @param value The values to set.
                 */
                private void setValues(int index, long value) {
                    ensureValuesIsMutable();
                    values_.setLong(index, value);
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @param value The values to add.
                 */
                private void addValues(long value) {
                    ensureValuesIsMutable();
                    values_.addLong(value);
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 *
                 * @param values The values to add.
                 */
                private void addAllValues(java.lang.Iterable<? extends java.lang.Long> values) {
                    ensureValuesIsMutable();
                    com.google.protobuf.AbstractMessageLite.addAll(values, values_);
                }

                /**
                 * <code>repeated int64 values = 1 [packed = true];</code>
                 */
                private void clearValues() {
                    values_ = emptyLongList();
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(java.io.InputStream input) throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
                }

                public static Builder newBuilder() {
                    return (Builder) DEFAULT_INSTANCE.createBuilder();
                }

                public static Builder newBuilder(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 prototype) {
                    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
                }

                /**
                 * <pre>
                 * Wrapper of repeated integer fields.
                 * </pre>
                 * <p>
                 * Protobuf type {@code metrics.StructuredEventProto.Metric.RepeatedInt64}
                 */
                public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64, Builder> implements
                        // @@protoc_insertion_point(builder_implements:metrics.StructuredEventProto.Metric.RepeatedInt64)
                        org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64OrBuilder {
                    // Construct using org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.newBuilder()
                    private Builder() {
                        super(DEFAULT_INSTANCE);
                    }


                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @return A list containing the values.
                     */
                    @java.lang.Override
                    public java.util.List<java.lang.Long> getValuesList() {
                        return java.util.Collections.unmodifiableList(instance.getValuesList());
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @return The count of values.
                     */
                    @java.lang.Override
                    public int getValuesCount() {
                        return instance.getValuesCount();
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @param index The index of the element to return.
                     * @return The values at the given index.
                     */
                    @java.lang.Override
                    public long getValues(int index) {
                        return instance.getValues(index);
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @param value The values to set.
                     * @return This builder for chaining.
                     */
                    public Builder setValues(int index, long value) {
                        copyOnWrite();
                        instance.setValues(index, value);
                        return this;
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @param value The values to add.
                     * @return This builder for chaining.
                     */
                    public Builder addValues(long value) {
                        copyOnWrite();
                        instance.addValues(value);
                        return this;
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @param values The values to add.
                     * @return This builder for chaining.
                     */
                    public Builder addAllValues(java.lang.Iterable<? extends java.lang.Long> values) {
                        copyOnWrite();
                        instance.addAllValues(values);
                        return this;
                    }

                    /**
                     * <code>repeated int64 values = 1 [packed = true];</code>
                     *
                     * @return This builder for chaining.
                     */
                    public Builder clearValues() {
                        copyOnWrite();
                        instance.clearValues();
                        return this;
                    }

                    // @@protoc_insertion_point(builder_scope:metrics.StructuredEventProto.Metric.RepeatedInt64)
                }

                @java.lang.Override
                @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
                protected final java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite.MethodToInvoke method, java.lang.Object arg0, java.lang.Object arg1) {
                    switch (method) {
                        case NEW_MUTABLE_INSTANCE: {
                            return new org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64();
                        }
                        case NEW_BUILDER: {
                            return new Builder();
                        }
                        case BUILD_MESSAGE_INFO: {
                            java.lang.Object[] objects = new java.lang.Object[]{"values_",};
                            java.lang.String info = "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001%";
                            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                        }
                        // fall through
                        case GET_DEFAULT_INSTANCE: {
                            return DEFAULT_INSTANCE;
                        }
                        case GET_PARSER: {
                            com.google.protobuf.Parser<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64> parser = PARSER;
                            if (parser == null) {
                                synchronized (org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.class) {
                                    parser = PARSER;
                                    if (parser == null) {
                                        parser = new DefaultInstanceBasedParser<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64>(DEFAULT_INSTANCE);
                                        PARSER = parser;
                                    }
                                }
                            }
                            return parser;
                        }
                        case GET_MEMOIZED_IS_INITIALIZED: {
                            return (byte) 1;
                        }
                        case SET_MEMOIZED_IS_INITIALIZED: {
                            return null;
                        }
                    }
                    throw new UnsupportedOperationException();
                }


                // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto.Metric.RepeatedInt64)
                private static final org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 DEFAULT_INSTANCE;

                static {
                    RepeatedInt64 defaultInstance = new RepeatedInt64();
                    // New instances are implicitly immutable so no need to make
                    // immutable.
                    DEFAULT_INSTANCE = defaultInstance;
                    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(RepeatedInt64.class, defaultInstance);
                }

                public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                private static volatile com.google.protobuf.Parser<RepeatedInt64> PARSER;

                public static com.google.protobuf.Parser<RepeatedInt64> parser() {
                    return DEFAULT_INSTANCE.getParserForType();
                }
            }

            private int bitField0_;
            private int valueCase_ = 0;
            private java.lang.Object value_;

            public enum ValueCase {
                VALUE_HMAC(2), VALUE_INT64(3), VALUE_STRING(4), VALUE_DOUBLE(5), VALUE_REPEATED_INT64(6), VALUE_NOT_SET(0);
                private final int value;

                ValueCase(int value) {
                    this.value = value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @java.lang.Deprecated
                public static ValueCase valueOf(int value) {
                    return forNumber(value);
                }

                public static ValueCase forNumber(int value) {
                    switch (value) {
                        case 2:
                            return VALUE_HMAC;
                        case 3:
                            return VALUE_INT64;
                        case 4:
                            return VALUE_STRING;
                        case 5:
                            return VALUE_DOUBLE;
                        case 6:
                            return VALUE_REPEATED_INT64;
                        case 0:
                            return VALUE_NOT_SET;
                        default:
                            return null;
                    }
                }

                public int getNumber() {
                    return this.value;
                }
            }

            @java.lang.Override
            public ValueCase getValueCase() {
                return ValueCase.forNumber(valueCase_);
            }

            private void clearValue() {
                valueCase_ = 0;
                value_ = null;
            }

            public static final int NAME_HASH_FIELD_NUMBER = 1;
            private long nameHash_;

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             *
             * @return Whether the nameHash field is set.
             */
            @java.lang.Override
            public boolean hasNameHash() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             *
             * @return The nameHash.
             */
            @java.lang.Override
            public long getNameHash() {
                return nameHash_;
            }

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             *
             * @param value The nameHash to set.
             */
            private void setNameHash(long value) {
                bitField0_ |= 0x00000001;
                nameHash_ = value;
            }

            /**
             * <code>optional fixed64 name_hash = 1;</code>
             */
            private void clearNameHash() {
                bitField0_ = (bitField0_ & ~0x00000001);
                nameHash_ = 0L;
            }

            public static final int VALUE_HMAC_FIELD_NUMBER = 2;

            /**
             * <code>fixed64 value_hmac = 2;</code>
             *
             * @return Whether the valueHmac field is set.
             */
            @java.lang.Override
            public boolean hasValueHmac() {
                return valueCase_ == 2;
            }

            /**
             * <code>fixed64 value_hmac = 2;</code>
             *
             * @return The valueHmac.
             */
            @java.lang.Override
            public long getValueHmac() {
                if (valueCase_ == 2) {
                    return (java.lang.Long) value_;
                }
                return 0L;
            }

            /**
             * <code>fixed64 value_hmac = 2;</code>
             *
             * @param value The valueHmac to set.
             */
            private void setValueHmac(long value) {
                valueCase_ = 2;
                value_ = value;
            }

            /**
             * <code>fixed64 value_hmac = 2;</code>
             */
            private void clearValueHmac() {
                if (valueCase_ == 2) {
                    valueCase_ = 0;
                    value_ = null;
                }
            }

            public static final int VALUE_INT64_FIELD_NUMBER = 3;

            /**
             * <code>int64 value_int64 = 3;</code>
             *
             * @return Whether the valueInt64 field is set.
             */
            @java.lang.Override
            public boolean hasValueInt64() {
                return valueCase_ == 3;
            }

            /**
             * <code>int64 value_int64 = 3;</code>
             *
             * @return The valueInt64.
             */
            @java.lang.Override
            public long getValueInt64() {
                if (valueCase_ == 3) {
                    return (java.lang.Long) value_;
                }
                return 0L;
            }

            /**
             * <code>int64 value_int64 = 3;</code>
             *
             * @param value The valueInt64 to set.
             */
            private void setValueInt64(long value) {
                valueCase_ = 3;
                value_ = value;
            }

            /**
             * <code>int64 value_int64 = 3;</code>
             */
            private void clearValueInt64() {
                if (valueCase_ == 3) {
                    valueCase_ = 0;
                    value_ = null;
                }
            }

            public static final int VALUE_STRING_FIELD_NUMBER = 4;

            /**
             * <code>string value_string = 4;</code>
             *
             * @return Whether the valueString field is set.
             */
            @java.lang.Override
            public boolean hasValueString() {
                return valueCase_ == 4;
            }

            /**
             * <code>string value_string = 4;</code>
             *
             * @return The valueString.
             */
            @java.lang.Override
            public java.lang.String getValueString() {
                java.lang.String ref = "";
                if (valueCase_ == 4) {
                    ref = (java.lang.String) value_;
                }
                return ref;
            }

            /**
             * <code>string value_string = 4;</code>
             *
             * @return The bytes for valueString.
             */
            @java.lang.Override
            public com.google.protobuf.ByteString getValueStringBytes() {
                java.lang.String ref = "";
                if (valueCase_ == 4) {
                    ref = (java.lang.String) value_;
                }
                return com.google.protobuf.ByteString.copyFromUtf8(ref);
            }

            /**
             * <code>string value_string = 4;</code>
             *
             * @param value The valueString to set.
             */
            private void setValueString(java.lang.String value) {
                value.getClass();
                valueCase_ = 4;
                value_ = value;
            }

            /**
             * <code>string value_string = 4;</code>
             */
            private void clearValueString() {
                if (valueCase_ == 4) {
                    valueCase_ = 0;
                    value_ = null;
                }
            }

            /**
             * <code>string value_string = 4;</code>
             *
             * @param value The bytes for valueString to set.
             */
            private void setValueStringBytes(com.google.protobuf.ByteString value) {
                value_ = value.toStringUtf8();
                valueCase_ = 4;
            }

            public static final int VALUE_DOUBLE_FIELD_NUMBER = 5;

            /**
             * <code>double value_double = 5;</code>
             *
             * @return Whether the valueDouble field is set.
             */
            @java.lang.Override
            public boolean hasValueDouble() {
                return valueCase_ == 5;
            }

            /**
             * <code>double value_double = 5;</code>
             *
             * @return The valueDouble.
             */
            @java.lang.Override
            public double getValueDouble() {
                if (valueCase_ == 5) {
                    return (java.lang.Double) value_;
                }
                return 0D;
            }

            /**
             * <code>double value_double = 5;</code>
             *
             * @param value The valueDouble to set.
             */
            private void setValueDouble(double value) {
                valueCase_ = 5;
                value_ = value;
            }

            /**
             * <code>double value_double = 5;</code>
             */
            private void clearValueDouble() {
                if (valueCase_ == 5) {
                    valueCase_ = 0;
                    value_ = null;
                }
            }

            public static final int VALUE_REPEATED_INT64_FIELD_NUMBER = 6;

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             */
            @java.lang.Override
            public boolean hasValueRepeatedInt64() {
                return valueCase_ == 6;
            }

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 getValueRepeatedInt64() {
                if (valueCase_ == 6) {
                    return (org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64) value_;
                }
                return org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.getDefaultInstance();
            }

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             */
            private void setValueRepeatedInt64(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 value) {
                value.getClass();
                value_ = value;
                valueCase_ = 6;
            }

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             */
            private void mergeValueRepeatedInt64(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 value) {
                value.getClass();
                if (valueCase_ == 6 && value_ != org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.getDefaultInstance()) {
                    value_ = org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.newBuilder((org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64) value_).mergeFrom(value).buildPartial();
                } else {
                    value_ = value;
                }
                valueCase_ = 6;
            }

            /**
             * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
             */
            private void clearValueRepeatedInt64() {
                if (valueCase_ == 6) {
                    valueCase_ = 0;
                    value_ = null;
                }
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.createBuilder();
            }

            public static Builder newBuilder(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric prototype) {
                return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
            }

            /**
             * <pre>
             * All metric values for this event. Each metric has two properties defined in
             * structured.xml that determine what is recorded.
             * 1. Metric name. This is a string, and the first 8 bytes of its MD5 hash is
             *    recorded as name_hash.
             * 2. Kind. Each metric can store four kinds of values.
             *    - int64. The client supplies an int64 value for the metric, and that
             *      value is recorded as-is in value_int64.
             *    - string. The client supplies a string value for the metric, which is
             *      recorded as-is in value_string. This is sometimes referred to as a
             *      "raw string" to differentiate from the following.
             *    - hashed-string. The client supplies an arbitrary string for the metric.
             *      The string itself is not recorded, instead, value_hmac records the
             *      first 8 bytes of:
             *          HMAC_SHA256(concat(string, metric_name), event_key)
             *    - double. The client supplies a double value for the metric, which is
             *      recorded as-is in value_double.
             *      The event_key is a per-profile, per-client, per-project secret 32-byte
             *      key used only for signing hashed values for this event. Keys should
             *      never leave the device, and are rotated at least every 90 days.
             *    - int64 array: This client supplies an array of int64 values for the
             *      metric. Each metric will have an max defined by the metric definition.
             * </pre>
             * <p>
             * Protobuf type {@code metrics.StructuredEventProto.Metric}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric, Builder> implements
                    // @@protoc_insertion_point(builder_implements:metrics.StructuredEventProto.Metric)
                    org.chromium.components.metrics.StructuredData.StructuredEventProto.MetricOrBuilder {
                // Construct using org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.newBuilder()
                private Builder() {
                    super(DEFAULT_INSTANCE);
                }

                @java.lang.Override
                public ValueCase getValueCase() {
                    return instance.getValueCase();
                }

                public Builder clearValue() {
                    copyOnWrite();
                    instance.clearValue();
                    return this;
                }


                /**
                 * <code>optional fixed64 name_hash = 1;</code>
                 *
                 * @return Whether the nameHash field is set.
                 */
                @java.lang.Override
                public boolean hasNameHash() {
                    return instance.hasNameHash();
                }

                /**
                 * <code>optional fixed64 name_hash = 1;</code>
                 *
                 * @return The nameHash.
                 */
                @java.lang.Override
                public long getNameHash() {
                    return instance.getNameHash();
                }

                /**
                 * <code>optional fixed64 name_hash = 1;</code>
                 *
                 * @param value The nameHash to set.
                 * @return This builder for chaining.
                 */
                public Builder setNameHash(long value) {
                    copyOnWrite();
                    instance.setNameHash(value);
                    return this;
                }

                /**
                 * <code>optional fixed64 name_hash = 1;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearNameHash() {
                    copyOnWrite();
                    instance.clearNameHash();
                    return this;
                }

                /**
                 * <code>fixed64 value_hmac = 2;</code>
                 *
                 * @return Whether the valueHmac field is set.
                 */
                @java.lang.Override
                public boolean hasValueHmac() {
                    return instance.hasValueHmac();
                }

                /**
                 * <code>fixed64 value_hmac = 2;</code>
                 *
                 * @return The valueHmac.
                 */
                @java.lang.Override
                public long getValueHmac() {
                    return instance.getValueHmac();
                }

                /**
                 * <code>fixed64 value_hmac = 2;</code>
                 *
                 * @param value The valueHmac to set.
                 * @return This builder for chaining.
                 */
                public Builder setValueHmac(long value) {
                    copyOnWrite();
                    instance.setValueHmac(value);
                    return this;
                }

                /**
                 * <code>fixed64 value_hmac = 2;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearValueHmac() {
                    copyOnWrite();
                    instance.clearValueHmac();
                    return this;
                }

                /**
                 * <code>int64 value_int64 = 3;</code>
                 *
                 * @return Whether the valueInt64 field is set.
                 */
                @java.lang.Override
                public boolean hasValueInt64() {
                    return instance.hasValueInt64();
                }

                /**
                 * <code>int64 value_int64 = 3;</code>
                 *
                 * @return The valueInt64.
                 */
                @java.lang.Override
                public long getValueInt64() {
                    return instance.getValueInt64();
                }

                /**
                 * <code>int64 value_int64 = 3;</code>
                 *
                 * @param value The valueInt64 to set.
                 * @return This builder for chaining.
                 */
                public Builder setValueInt64(long value) {
                    copyOnWrite();
                    instance.setValueInt64(value);
                    return this;
                }

                /**
                 * <code>int64 value_int64 = 3;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearValueInt64() {
                    copyOnWrite();
                    instance.clearValueInt64();
                    return this;
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @return Whether the valueString field is set.
                 */
                @java.lang.Override
                public boolean hasValueString() {
                    return instance.hasValueString();
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @return The valueString.
                 */
                @java.lang.Override
                public java.lang.String getValueString() {
                    return instance.getValueString();
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @return The bytes for valueString.
                 */
                @java.lang.Override
                public com.google.protobuf.ByteString getValueStringBytes() {
                    return instance.getValueStringBytes();
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @param value The valueString to set.
                 * @return This builder for chaining.
                 */
                public Builder setValueString(java.lang.String value) {
                    copyOnWrite();
                    instance.setValueString(value);
                    return this;
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearValueString() {
                    copyOnWrite();
                    instance.clearValueString();
                    return this;
                }

                /**
                 * <code>string value_string = 4;</code>
                 *
                 * @param value The bytes for valueString to set.
                 * @return This builder for chaining.
                 */
                public Builder setValueStringBytes(com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setValueStringBytes(value);
                    return this;
                }

                /**
                 * <code>double value_double = 5;</code>
                 *
                 * @return Whether the valueDouble field is set.
                 */
                @java.lang.Override
                public boolean hasValueDouble() {
                    return instance.hasValueDouble();
                }

                /**
                 * <code>double value_double = 5;</code>
                 *
                 * @return The valueDouble.
                 */
                @java.lang.Override
                public double getValueDouble() {
                    return instance.getValueDouble();
                }

                /**
                 * <code>double value_double = 5;</code>
                 *
                 * @param value The valueDouble to set.
                 * @return This builder for chaining.
                 */
                public Builder setValueDouble(double value) {
                    copyOnWrite();
                    instance.setValueDouble(value);
                    return this;
                }

                /**
                 * <code>double value_double = 5;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearValueDouble() {
                    copyOnWrite();
                    instance.clearValueDouble();
                    return this;
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                @java.lang.Override
                public boolean hasValueRepeatedInt64() {
                    return instance.hasValueRepeatedInt64();
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                @java.lang.Override
                public org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 getValueRepeatedInt64() {
                    return instance.getValueRepeatedInt64();
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                public Builder setValueRepeatedInt64(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 value) {
                    copyOnWrite();
                    instance.setValueRepeatedInt64(value);
                    return this;
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                public Builder setValueRepeatedInt64(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.Builder builderForValue) {
                    copyOnWrite();
                    instance.setValueRepeatedInt64(builderForValue.build());
                    return this;
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                public Builder mergeValueRepeatedInt64(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64 value) {
                    copyOnWrite();
                    instance.mergeValueRepeatedInt64(value);
                    return this;
                }

                /**
                 * <code>.metrics.StructuredEventProto.Metric.RepeatedInt64 value_repeated_int64 = 6;</code>
                 */
                public Builder clearValueRepeatedInt64() {
                    copyOnWrite();
                    instance.clearValueRepeatedInt64();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:metrics.StructuredEventProto.Metric)
            }

            @java.lang.Override
            @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
            protected final java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite.MethodToInvoke method, java.lang.Object arg0, java.lang.Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE: {
                        return new org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric();
                    }
                    case NEW_BUILDER: {
                        return new Builder();
                    }
                    case BUILD_MESSAGE_INFO: {
                        java.lang.Object[] objects = new java.lang.Object[]{"value_", "valueCase_", "bitField0_", "nameHash_", org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.RepeatedInt64.class,};
                        java.lang.String info = "\u0001\u0006\u0001\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u1005\u0000\u0002" + "\u1038\u0000\u0003\u1035\u0000\u0004\u103b\u0000\u0005\u1033\u0000\u0006\u103c\u0000" + "";
                        return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                    }
                    // fall through
                    case GET_DEFAULT_INSTANCE: {
                        return DEFAULT_INSTANCE;
                    }
                    case GET_PARSER: {
                        com.google.protobuf.Parser<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> parser = PARSER;
                        if (parser == null) {
                            synchronized (org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.class) {
                                parser = PARSER;
                                if (parser == null) {
                                    parser = new DefaultInstanceBasedParser<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric>(DEFAULT_INSTANCE);
                                    PARSER = parser;
                                }
                            }
                        }
                        return parser;
                    }
                    case GET_MEMOIZED_IS_INITIALIZED: {
                        return (byte) 1;
                    }
                    case SET_MEMOIZED_IS_INITIALIZED: {
                        return null;
                    }
                }
                throw new UnsupportedOperationException();
            }


            // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto.Metric)
            private static final org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric DEFAULT_INSTANCE;

            static {
                Metric defaultInstance = new Metric();
                // New instances are implicitly immutable so no need to make
                // immutable.
                DEFAULT_INSTANCE = defaultInstance;
                com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(Metric.class, defaultInstance);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static volatile com.google.protobuf.Parser<Metric> PARSER;

            public static com.google.protobuf.Parser<Metric> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        public interface EventSequenceMetadataOrBuilder extends
                // @@protoc_insertion_point(interface_extends:metrics.StructuredEventProto.EventSequenceMetadata)
                com.google.protobuf.MessageLiteOrBuilder {

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             *
             * @return Whether the eventUniqueId field is set.
             */
            boolean hasEventUniqueId();

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             *
             * @return The eventUniqueId.
             */
            long getEventUniqueId();

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             *
             * @return Whether the systemUptime field is set.
             */
            boolean hasSystemUptime();

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             *
             * @return The systemUptime.
             */
            long getSystemUptime();

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             *
             * @return Whether the resetCounter field is set.
             */
            boolean hasResetCounter();

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             *
             * @return The resetCounter.
             */
            long getResetCounter();

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             *
             * @return Whether the clientIdRotationWeeks field is set.
             */
            boolean hasClientIdRotationWeeks();

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             *
             * @return The clientIdRotationWeeks.
             */
            int getClientIdRotationWeeks();

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             *
             * @return Whether the primaryUserSegment field is set.
             */
            boolean hasPrimaryUserSegment();

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             *
             * @return The primaryUserSegment.
             */
            org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment getPrimaryUserSegment();
        }

        /**
         * <pre>
         * Metadata associated with events for which relative order in which the
         * events occur are of interest.
         * Next tag: 6
         * </pre>
         * <p>
         * Protobuf type {@code metrics.StructuredEventProto.EventSequenceMetadata}
         */
        public static final class EventSequenceMetadata extends com.google.protobuf.GeneratedMessageLite<EventSequenceMetadata, EventSequenceMetadata.Builder> implements
                // @@protoc_insertion_point(message_implements:metrics.StructuredEventProto.EventSequenceMetadata)
                EventSequenceMetadataOrBuilder {
            private EventSequenceMetadata() {
            }

            private int bitField0_;
            public static final int EVENT_UNIQUE_ID_FIELD_NUMBER = 1;
            private long eventUniqueId_;

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             *
             * @return Whether the eventUniqueId field is set.
             */
            @java.lang.Override
            public boolean hasEventUniqueId() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             *
             * @return The eventUniqueId.
             */
            @java.lang.Override
            public long getEventUniqueId() {
                return eventUniqueId_;
            }

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             *
             * @param value The eventUniqueId to set.
             */
            private void setEventUniqueId(long value) {
                bitField0_ |= 0x00000001;
                eventUniqueId_ = value;
            }

            /**
             * <pre>
             * GUIDs generated on the client to uniquely identify an event. These event
             * IDs will be used to establish relationships between events on the client.
             * </pre>
             *
             * <code>optional fixed64 event_unique_id = 1;</code>
             */
            private void clearEventUniqueId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                eventUniqueId_ = 0L;
            }

            public static final int SYSTEM_UPTIME_FIELD_NUMBER = 2;
            private long systemUptime_;

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             *
             * @return Whether the systemUptime field is set.
             */
            @java.lang.Override
            public boolean hasSystemUptime() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             *
             * @return The systemUptime.
             */
            @java.lang.Override
            public long getSystemUptime() {
                return systemUptime_;
            }

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             *
             * @param value The systemUptime to set.
             */
            private void setSystemUptime(long value) {
                bitField0_ |= 0x00000002;
                systemUptime_ = value;
            }

            /**
             * <pre>
             * Time elapsed since boot time. Note that system uptime includes duration a
             * device has spent asleep. System uptime resets when a machine reboots.
             * Granularity is in milliseconds.
             * </pre>
             *
             * <code>optional int64 system_uptime = 2;</code>
             */
            private void clearSystemUptime() {
                bitField0_ = (bitField0_ & ~0x00000002);
                systemUptime_ = 0L;
            }

            public static final int RESET_COUNTER_FIELD_NUMBER = 3;
            private long resetCounter_;

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             *
             * @return Whether the resetCounter field is set.
             */
            @java.lang.Override
            public boolean hasResetCounter() {
                return ((bitField0_ & 0x00000004) != 0);
            }

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             *
             * @return The resetCounter.
             */
            @java.lang.Override
            public long getResetCounter() {
                return resetCounter_;
            }

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             *
             * @param value The resetCounter to set.
             */
            private void setResetCounter(long value) {
                bitField0_ |= 0x00000004;
                resetCounter_ = value;
            }

            /**
             * <pre>
             * Monotonically increasing number incremented every time a system reset is
             * detected. This value will be reset to 0 in the event of a powerwash.
             * </pre>
             *
             * <code>optional int64 reset_counter = 3;</code>
             */
            private void clearResetCounter() {
                bitField0_ = (bitField0_ & ~0x00000004);
                resetCounter_ = 0L;
            }

            public static final int CLIENT_ID_ROTATION_WEEKS_FIELD_NUMBER = 4;
            private int clientIdRotationWeeks_;

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             *
             * @return Whether the clientIdRotationWeeks field is set.
             */
            @java.lang.Override
            public boolean hasClientIdRotationWeeks() {
                return ((bitField0_ & 0x00000008) != 0);
            }

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             *
             * @return The clientIdRotationWeeks.
             */
            @java.lang.Override
            public int getClientIdRotationWeeks() {
                return clientIdRotationWeeks_;
            }

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             *
             * @param value The clientIdRotationWeeks to set.
             */
            private void setClientIdRotationWeeks(int value) {
                bitField0_ |= 0x00000008;
                clientIdRotationWeeks_ = value;
            }

            /**
             * <pre>
             * The number of weeks since the client id rotated.
             * </pre>
             *
             * <code>optional uint32 client_id_rotation_weeks = 4;</code>
             */
            private void clearClientIdRotationWeeks() {
                bitField0_ = (bitField0_ & ~0x00000008);
                clientIdRotationWeeks_ = 0;
            }

            public static final int PRIMARY_USER_SEGMENT_FIELD_NUMBER = 5;
            private int primaryUserSegment_;

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             *
             * @return Whether the primaryUserSegment field is set.
             */
            @java.lang.Override
            public boolean hasPrimaryUserSegment() {
                return ((bitField0_ & 0x00000010) != 0);
            }

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             *
             * @return The primaryUserSegment.
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment getPrimaryUserSegment() {
                org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment result = org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment.forNumber(primaryUserSegment_);
                return result == null ? org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment.UNKNOWN_PRIMARY_USER_TYPE : result;
            }

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             *
             * @param value The primaryUserSegment to set.
             */
            private void setPrimaryUserSegment(org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment value) {
                primaryUserSegment_ = value.getNumber();
                bitField0_ |= 0x00000010;
            }

            /**
             * <pre>
             * The segment policy of the user.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
             */
            private void clearPrimaryUserSegment() {
                bitField0_ = (bitField0_ & ~0x00000010);
                primaryUserSegment_ = 0;
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return (Builder) DEFAULT_INSTANCE.createBuilder();
            }

            public static Builder newBuilder(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata prototype) {
                return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
            }

            /**
             * <pre>
             * Metadata associated with events for which relative order in which the
             * events occur are of interest.
             * Next tag: 6
             * </pre>
             * <p>
             * Protobuf type {@code metrics.StructuredEventProto.EventSequenceMetadata}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder<org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata, Builder> implements
                    // @@protoc_insertion_point(builder_implements:metrics.StructuredEventProto.EventSequenceMetadata)
                    org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadataOrBuilder {
                // Construct using org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.newBuilder()
                private Builder() {
                    super(DEFAULT_INSTANCE);
                }


                /**
                 * <pre>
                 * GUIDs generated on the client to uniquely identify an event. These event
                 * IDs will be used to establish relationships between events on the client.
                 * </pre>
                 *
                 * <code>optional fixed64 event_unique_id = 1;</code>
                 *
                 * @return Whether the eventUniqueId field is set.
                 */
                @java.lang.Override
                public boolean hasEventUniqueId() {
                    return instance.hasEventUniqueId();
                }

                /**
                 * <pre>
                 * GUIDs generated on the client to uniquely identify an event. These event
                 * IDs will be used to establish relationships between events on the client.
                 * </pre>
                 *
                 * <code>optional fixed64 event_unique_id = 1;</code>
                 *
                 * @return The eventUniqueId.
                 */
                @java.lang.Override
                public long getEventUniqueId() {
                    return instance.getEventUniqueId();
                }

                /**
                 * <pre>
                 * GUIDs generated on the client to uniquely identify an event. These event
                 * IDs will be used to establish relationships between events on the client.
                 * </pre>
                 *
                 * <code>optional fixed64 event_unique_id = 1;</code>
                 *
                 * @param value The eventUniqueId to set.
                 * @return This builder for chaining.
                 */
                public Builder setEventUniqueId(long value) {
                    copyOnWrite();
                    instance.setEventUniqueId(value);
                    return this;
                }

                /**
                 * <pre>
                 * GUIDs generated on the client to uniquely identify an event. These event
                 * IDs will be used to establish relationships between events on the client.
                 * </pre>
                 *
                 * <code>optional fixed64 event_unique_id = 1;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearEventUniqueId() {
                    copyOnWrite();
                    instance.clearEventUniqueId();
                    return this;
                }

                /**
                 * <pre>
                 * Time elapsed since boot time. Note that system uptime includes duration a
                 * device has spent asleep. System uptime resets when a machine reboots.
                 * Granularity is in milliseconds.
                 * </pre>
                 *
                 * <code>optional int64 system_uptime = 2;</code>
                 *
                 * @return Whether the systemUptime field is set.
                 */
                @java.lang.Override
                public boolean hasSystemUptime() {
                    return instance.hasSystemUptime();
                }

                /**
                 * <pre>
                 * Time elapsed since boot time. Note that system uptime includes duration a
                 * device has spent asleep. System uptime resets when a machine reboots.
                 * Granularity is in milliseconds.
                 * </pre>
                 *
                 * <code>optional int64 system_uptime = 2;</code>
                 *
                 * @return The systemUptime.
                 */
                @java.lang.Override
                public long getSystemUptime() {
                    return instance.getSystemUptime();
                }

                /**
                 * <pre>
                 * Time elapsed since boot time. Note that system uptime includes duration a
                 * device has spent asleep. System uptime resets when a machine reboots.
                 * Granularity is in milliseconds.
                 * </pre>
                 *
                 * <code>optional int64 system_uptime = 2;</code>
                 *
                 * @param value The systemUptime to set.
                 * @return This builder for chaining.
                 */
                public Builder setSystemUptime(long value) {
                    copyOnWrite();
                    instance.setSystemUptime(value);
                    return this;
                }

                /**
                 * <pre>
                 * Time elapsed since boot time. Note that system uptime includes duration a
                 * device has spent asleep. System uptime resets when a machine reboots.
                 * Granularity is in milliseconds.
                 * </pre>
                 *
                 * <code>optional int64 system_uptime = 2;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearSystemUptime() {
                    copyOnWrite();
                    instance.clearSystemUptime();
                    return this;
                }

                /**
                 * <pre>
                 * Monotonically increasing number incremented every time a system reset is
                 * detected. This value will be reset to 0 in the event of a powerwash.
                 * </pre>
                 *
                 * <code>optional int64 reset_counter = 3;</code>
                 *
                 * @return Whether the resetCounter field is set.
                 */
                @java.lang.Override
                public boolean hasResetCounter() {
                    return instance.hasResetCounter();
                }

                /**
                 * <pre>
                 * Monotonically increasing number incremented every time a system reset is
                 * detected. This value will be reset to 0 in the event of a powerwash.
                 * </pre>
                 *
                 * <code>optional int64 reset_counter = 3;</code>
                 *
                 * @return The resetCounter.
                 */
                @java.lang.Override
                public long getResetCounter() {
                    return instance.getResetCounter();
                }

                /**
                 * <pre>
                 * Monotonically increasing number incremented every time a system reset is
                 * detected. This value will be reset to 0 in the event of a powerwash.
                 * </pre>
                 *
                 * <code>optional int64 reset_counter = 3;</code>
                 *
                 * @param value The resetCounter to set.
                 * @return This builder for chaining.
                 */
                public Builder setResetCounter(long value) {
                    copyOnWrite();
                    instance.setResetCounter(value);
                    return this;
                }

                /**
                 * <pre>
                 * Monotonically increasing number incremented every time a system reset is
                 * detected. This value will be reset to 0 in the event of a powerwash.
                 * </pre>
                 *
                 * <code>optional int64 reset_counter = 3;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearResetCounter() {
                    copyOnWrite();
                    instance.clearResetCounter();
                    return this;
                }

                /**
                 * <pre>
                 * The number of weeks since the client id rotated.
                 * </pre>
                 *
                 * <code>optional uint32 client_id_rotation_weeks = 4;</code>
                 *
                 * @return Whether the clientIdRotationWeeks field is set.
                 */
                @java.lang.Override
                public boolean hasClientIdRotationWeeks() {
                    return instance.hasClientIdRotationWeeks();
                }

                /**
                 * <pre>
                 * The number of weeks since the client id rotated.
                 * </pre>
                 *
                 * <code>optional uint32 client_id_rotation_weeks = 4;</code>
                 *
                 * @return The clientIdRotationWeeks.
                 */
                @java.lang.Override
                public int getClientIdRotationWeeks() {
                    return instance.getClientIdRotationWeeks();
                }

                /**
                 * <pre>
                 * The number of weeks since the client id rotated.
                 * </pre>
                 *
                 * <code>optional uint32 client_id_rotation_weeks = 4;</code>
                 *
                 * @param value The clientIdRotationWeeks to set.
                 * @return This builder for chaining.
                 */
                public Builder setClientIdRotationWeeks(int value) {
                    copyOnWrite();
                    instance.setClientIdRotationWeeks(value);
                    return this;
                }

                /**
                 * <pre>
                 * The number of weeks since the client id rotated.
                 * </pre>
                 *
                 * <code>optional uint32 client_id_rotation_weeks = 4;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearClientIdRotationWeeks() {
                    copyOnWrite();
                    instance.clearClientIdRotationWeeks();
                    return this;
                }

                /**
                 * <pre>
                 * The segment policy of the user.
                 * </pre>
                 *
                 * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
                 *
                 * @return Whether the primaryUserSegment field is set.
                 */
                @java.lang.Override
                public boolean hasPrimaryUserSegment() {
                    return instance.hasPrimaryUserSegment();
                }

                /**
                 * <pre>
                 * The segment policy of the user.
                 * </pre>
                 *
                 * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
                 *
                 * @return The primaryUserSegment.
                 */
                @java.lang.Override
                public org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment getPrimaryUserSegment() {
                    return instance.getPrimaryUserSegment();
                }

                /**
                 * <pre>
                 * The segment policy of the user.
                 * </pre>
                 *
                 * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
                 *
                 * @param value The enum numeric value on the wire for primaryUserSegment to set.
                 * @return This builder for chaining.
                 */
                public Builder setPrimaryUserSegment(org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment value) {
                    copyOnWrite();
                    instance.setPrimaryUserSegment(value);
                    return this;
                }

                /**
                 * <pre>
                 * The segment policy of the user.
                 * </pre>
                 *
                 * <code>optional .metrics.StructuredEventProto.PrimaryUserSegment primary_user_segment = 5;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearPrimaryUserSegment() {
                    copyOnWrite();
                    instance.clearPrimaryUserSegment();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:metrics.StructuredEventProto.EventSequenceMetadata)
            }

            @java.lang.Override
            @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
            protected final java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite.MethodToInvoke method, java.lang.Object arg0, java.lang.Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE: {
                        return new org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata();
                    }
                    case NEW_BUILDER: {
                        return new Builder();
                    }
                    case BUILD_MESSAGE_INFO: {
                        java.lang.Object[] objects = new java.lang.Object[]{"bitField0_", "eventUniqueId_", "systemUptime_", "resetCounter_", "clientIdRotationWeeks_", "primaryUserSegment_", org.chromium.components.metrics.StructuredData.StructuredEventProto.PrimaryUserSegment.internalGetVerifier(),};
                        java.lang.String info = "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u1005\u0000\u0002" + "\u1002\u0001\u0003\u1002\u0002\u0004\u100b\u0003\u0005\u100c\u0004";
                        return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                    }
                    // fall through
                    case GET_DEFAULT_INSTANCE: {
                        return DEFAULT_INSTANCE;
                    }
                    case GET_PARSER: {
                        com.google.protobuf.Parser<org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata> parser = PARSER;
                        if (parser == null) {
                            synchronized (org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.class) {
                                parser = PARSER;
                                if (parser == null) {
                                    parser = new DefaultInstanceBasedParser<org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata>(DEFAULT_INSTANCE);
                                    PARSER = parser;
                                }
                            }
                        }
                        return parser;
                    }
                    case GET_MEMOIZED_IS_INITIALIZED: {
                        return (byte) 1;
                    }
                    case SET_MEMOIZED_IS_INITIALIZED: {
                        return null;
                    }
                }
                throw new UnsupportedOperationException();
            }


            // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto.EventSequenceMetadata)
            private static final org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata DEFAULT_INSTANCE;

            static {
                EventSequenceMetadata defaultInstance = new EventSequenceMetadata();
                // New instances are implicitly immutable so no need to make
                // immutable.
                DEFAULT_INSTANCE = defaultInstance;
                com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(EventSequenceMetadata.class, defaultInstance);
            }

            public static org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static volatile com.google.protobuf.Parser<EventSequenceMetadata> PARSER;

            public static com.google.protobuf.Parser<EventSequenceMetadata> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }
        }

        private int bitField0_;
        public static final int PROFILE_EVENT_ID_FIELD_NUMBER = 1;
        private long profileEventId_;

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         *
         * @return Whether the profileEventId field is set.
         */
        @java.lang.Override
        public boolean hasProfileEventId() {
            return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         *
         * @return The profileEventId.
         */
        @java.lang.Override
        public long getProfileEventId() {
            return profileEventId_;
        }

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         *
         * @param value The profileEventId to set.
         */
        private void setProfileEventId(long value) {
            bitField0_ |= 0x00000001;
            profileEventId_ = value;
        }

        /**
         * <pre>
         * A per-client, per-profile, per-project ID that is used only for structured
         * metrics. For projects recorded from Chrome OS's platform2 repository, this
         * ID is device-wide, not per-profile. The ID is rotated at least every 90
         * days.
         * For events of type SEQUENCE, the ID will be rotated every 120 days.
         * </pre>
         *
         * <code>optional fixed64 profile_event_id = 1;</code>
         */
        private void clearProfileEventId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            profileEventId_ = 0L;
        }

        public static final int USER_PROJECT_ID_FIELD_NUMBER = 7;
        private long userProjectId_;

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         *
         * @return Whether the userProjectId field is set.
         */
        @java.lang.Override
        public boolean hasUserProjectId() {
            return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         *
         * @return The userProjectId.
         */
        @java.lang.Override
        public long getUserProjectId() {
            return userProjectId_;
        }

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         *
         * @param value The userProjectId to set.
         */
        private void setUserProjectId(long value) {
            bitField0_ |= 0x00000002;
            userProjectId_ = value;
        }

        /**
         * <pre>
         * A per-profile, per-project ID used only for events of type SEQUENCE. A
         * device may have multiple profiles and multiple projects (ie cros-events).
         * This ID is generated by applying HMAC on a locally-generated GUID (which is
         * never sent) with a per-profile, per-project key. The first 8 bytes of the
         * resulting string will be emitted.
         * For events recorded when a user is not logged in or for events recorded
         * outside of Chrome, this field should be empty.
         * Since the per-profile, per-project keys are rotated every 120 days, this
         * means that the |user_project_id| will also change every N days. For more
         * details on how keys are rotated, refer to go/structured-metrics.
         * </pre>
         *
         * <code>optional fixed64 user_project_id = 7;</code>
         */
        private void clearUserProjectId() {
            bitField0_ = (bitField0_ & ~0x00000002);
            userProjectId_ = 0L;
        }

        public static final int DEVICE_PROJECT_ID_FIELD_NUMBER = 8;
        private long deviceProjectId_;

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         *
         * @return Whether the deviceProjectId field is set.
         */
        @java.lang.Override
        public boolean hasDeviceProjectId() {
            return ((bitField0_ & 0x00000004) != 0);
        }

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         *
         * @return The deviceProjectId.
         */
        @java.lang.Override
        public long getDeviceProjectId() {
            return deviceProjectId_;
        }

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         *
         * @param value The deviceProjectId to set.
         */
        private void setDeviceProjectId(long value) {
            bitField0_ |= 0x00000004;
            deviceProjectId_ = value;
        }

        /**
         * <pre>
         * A device-wide, per-project ID used only for events of type SEQUENCE. This
         * ID is rotated every 120 days.
         * This ID is generated by hashing a locally-generated GUID (which is never
         * sent) with a per-device, per-project key. The first 8 bytes of thee
         * resulting string will be emitted.
         * Since the per-device, per-project keys are rotated every N (default 90)
         * days, this means that the |device_project_id| will also change every N
         * days. For more details on how keys are rotated, refer to
         * go/structured-metrics.
         * Note that an event may have both a |device_project_id| and
         * |user_project_id|.
         * </pre>
         *
         * <code>optional fixed64 device_project_id = 8;</code>
         */
        private void clearDeviceProjectId() {
            bitField0_ = (bitField0_ & ~0x00000004);
            deviceProjectId_ = 0L;
        }

        public static final int EVENT_NAME_HASH_FIELD_NUMBER = 2;
        private long eventNameHash_;

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         *
         * @return Whether the eventNameHash field is set.
         */
        @java.lang.Override
        public boolean hasEventNameHash() {
            return ((bitField0_ & 0x00000008) != 0);
        }

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         *
         * @return The eventNameHash.
         */
        @java.lang.Override
        public long getEventNameHash() {
            return eventNameHash_;
        }

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         *
         * @param value The eventNameHash to set.
         */
        private void setEventNameHash(long value) {
            bitField0_ |= 0x00000008;
            eventNameHash_ = value;
        }

        /**
         * <pre>
         * The first 8 bytes of the MD5 hash of the event's name as a string. Each
         * name is defined in src/tools/metrics/structured/structured.xml, and this
         * will be the hash of one of those.
         * </pre>
         *
         * <code>optional fixed64 event_name_hash = 2;</code>
         */
        private void clearEventNameHash() {
            bitField0_ = (bitField0_ & ~0x00000008);
            eventNameHash_ = 0L;
        }

        public static final int METRICS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> metrics_;

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> getMetricsList() {
            return metrics_;
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        public java.util.List<? extends org.chromium.components.metrics.StructuredData.StructuredEventProto.MetricOrBuilder> getMetricsOrBuilderList() {
            return metrics_;
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        @java.lang.Override
        public int getMetricsCount() {
            return metrics_.size();
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric getMetrics(int index) {
            return metrics_.get(index);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        public org.chromium.components.metrics.StructuredData.StructuredEventProto.MetricOrBuilder getMetricsOrBuilder(int index) {
            return metrics_.get(index);
        }

        private void ensureMetricsIsMutable() {
            com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> tmp = metrics_;
            if (!tmp.isModifiable()) {
                metrics_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
            }
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void setMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
            value.getClass();
            ensureMetricsIsMutable();
            metrics_.set(index, value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void addMetrics(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
            value.getClass();
            ensureMetricsIsMutable();
            metrics_.add(value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void addMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
            value.getClass();
            ensureMetricsIsMutable();
            metrics_.add(index, value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void addAllMetrics(java.lang.Iterable<? extends org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> values) {
            ensureMetricsIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(values, metrics_);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void clearMetrics() {
            metrics_ = emptyProtobufList();
        }

        /**
         * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
         */
        private void removeMetrics(int index) {
            ensureMetricsIsMutable();
            metrics_.remove(index);
        }

        public static final int EVENT_TYPE_FIELD_NUMBER = 4;
        private int eventType_;

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         *
         * @return Whether the eventType field is set.
         */
        @java.lang.Override
        public boolean hasEventType() {
            return ((bitField0_ & 0x00000010) != 0);
        }

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         *
         * @return The eventType.
         */
        @java.lang.Override
        public org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType getEventType() {
            org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType result = org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType.forNumber(eventType_);
            return result == null ? org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType.UNKNOWN : result;
        }

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         *
         * @param value The eventType to set.
         */
        private void setEventType(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType value) {
            eventType_ = value.getNumber();
            bitField0_ |= 0x00000010;
        }

        /**
         * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
         */
        private void clearEventType() {
            bitField0_ = (bitField0_ & ~0x00000010);
            eventType_ = 0;
        }

        public static final int PROJECT_NAME_HASH_FIELD_NUMBER = 5;
        private long projectNameHash_;

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         *
         * @return Whether the projectNameHash field is set.
         */
        @java.lang.Override
        public boolean hasProjectNameHash() {
            return ((bitField0_ & 0x00000020) != 0);
        }

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         *
         * @return The projectNameHash.
         */
        @java.lang.Override
        public long getProjectNameHash() {
            return projectNameHash_;
        }

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         *
         * @param value The projectNameHash to set.
         */
        private void setProjectNameHash(long value) {
            bitField0_ |= 0x00000020;
            projectNameHash_ = value;
        }

        /**
         * <pre>
         * The project name hash is the first 8 bytes of the MD5 hash of the project
         * name that is defined in src/tools/metrics/structured/structured.xml.
         * </pre>
         *
         * <code>optional fixed64 project_name_hash = 5;</code>
         */
        private void clearProjectNameHash() {
            bitField0_ = (bitField0_ & ~0x00000020);
            projectNameHash_ = 0L;
        }

        public static final int EVENT_SEQUENCE_METADATA_FIELD_NUMBER = 6;
        private org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata eventSequenceMetadata_;

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         */
        @java.lang.Override
        public boolean hasEventSequenceMetadata() {
            return ((bitField0_ & 0x00000040) != 0);
        }

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata getEventSequenceMetadata() {
            return eventSequenceMetadata_ == null ? org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.getDefaultInstance() : eventSequenceMetadata_;
        }

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         */
        private void setEventSequenceMetadata(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata value) {
            value.getClass();
            eventSequenceMetadata_ = value;
            bitField0_ |= 0x00000040;
        }

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         */
        @java.lang.SuppressWarnings({"ReferenceEquality"})
        private void mergeEventSequenceMetadata(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata value) {
            value.getClass();
            if (eventSequenceMetadata_ != null && eventSequenceMetadata_ != org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.getDefaultInstance()) {
                eventSequenceMetadata_ = org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.newBuilder(eventSequenceMetadata_).mergeFrom(value).buildPartial();
            } else {
                eventSequenceMetadata_ = value;
            }
            bitField0_ |= 0x00000040;
        }

        /**
         * <pre>
         * Metadata associated with event type SEQUENCE. This field will be stripped
         * if the event is not of type SEQUENCE.
         * </pre>
         *
         * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
         */
        private void clearEventSequenceMetadata() {
            eventSequenceMetadata_ = null;
            bitField0_ = (bitField0_ & ~0x00000040);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(org.chromium.components.metrics.StructuredData.StructuredEventProto prototype) {
            return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         * <pre>
         * One structured metrics event, containing several hashed and unhashed metrics
         * related to a single event type. Structured metrics have hashing keys based on
         * the project. A project refers to a use-case of the framework (ie bluetooth,
         * event sequence).
         * Structured metrics is currently only used for the CrOS platform, so some of
         * the fields are CrOS-specific (ie device_project_id, user_project_id). If
         * structured metrics were to expand to other platforms, these fields will need
         * to be revisited.
         * Next tag: 10
         * </pre>
         * <p>
         * Protobuf type {@code metrics.StructuredEventProto}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder<org.chromium.components.metrics.StructuredData.StructuredEventProto, Builder> implements
                // @@protoc_insertion_point(builder_implements:metrics.StructuredEventProto)
                org.chromium.components.metrics.StructuredData.StructuredEventProtoOrBuilder {
            // Construct using org.chromium.components.metrics.StructuredData.StructuredEventProto.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * A per-client, per-profile, per-project ID that is used only for structured
             * metrics. For projects recorded from Chrome OS's platform2 repository, this
             * ID is device-wide, not per-profile. The ID is rotated at least every 90
             * days.
             * For events of type SEQUENCE, the ID will be rotated every 120 days.
             * </pre>
             *
             * <code>optional fixed64 profile_event_id = 1;</code>
             *
             * @return Whether the profileEventId field is set.
             */
            @java.lang.Override
            public boolean hasProfileEventId() {
                return instance.hasProfileEventId();
            }

            /**
             * <pre>
             * A per-client, per-profile, per-project ID that is used only for structured
             * metrics. For projects recorded from Chrome OS's platform2 repository, this
             * ID is device-wide, not per-profile. The ID is rotated at least every 90
             * days.
             * For events of type SEQUENCE, the ID will be rotated every 120 days.
             * </pre>
             *
             * <code>optional fixed64 profile_event_id = 1;</code>
             *
             * @return The profileEventId.
             */
            @java.lang.Override
            public long getProfileEventId() {
                return instance.getProfileEventId();
            }

            /**
             * <pre>
             * A per-client, per-profile, per-project ID that is used only for structured
             * metrics. For projects recorded from Chrome OS's platform2 repository, this
             * ID is device-wide, not per-profile. The ID is rotated at least every 90
             * days.
             * For events of type SEQUENCE, the ID will be rotated every 120 days.
             * </pre>
             *
             * <code>optional fixed64 profile_event_id = 1;</code>
             *
             * @param value The profileEventId to set.
             * @return This builder for chaining.
             */
            public Builder setProfileEventId(long value) {
                copyOnWrite();
                instance.setProfileEventId(value);
                return this;
            }

            /**
             * <pre>
             * A per-client, per-profile, per-project ID that is used only for structured
             * metrics. For projects recorded from Chrome OS's platform2 repository, this
             * ID is device-wide, not per-profile. The ID is rotated at least every 90
             * days.
             * For events of type SEQUENCE, the ID will be rotated every 120 days.
             * </pre>
             *
             * <code>optional fixed64 profile_event_id = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearProfileEventId() {
                copyOnWrite();
                instance.clearProfileEventId();
                return this;
            }

            /**
             * <pre>
             * A per-profile, per-project ID used only for events of type SEQUENCE. A
             * device may have multiple profiles and multiple projects (ie cros-events).
             * This ID is generated by applying HMAC on a locally-generated GUID (which is
             * never sent) with a per-profile, per-project key. The first 8 bytes of the
             * resulting string will be emitted.
             * For events recorded when a user is not logged in or for events recorded
             * outside of Chrome, this field should be empty.
             * Since the per-profile, per-project keys are rotated every 120 days, this
             * means that the |user_project_id| will also change every N days. For more
             * details on how keys are rotated, refer to go/structured-metrics.
             * </pre>
             *
             * <code>optional fixed64 user_project_id = 7;</code>
             *
             * @return Whether the userProjectId field is set.
             */
            @java.lang.Override
            public boolean hasUserProjectId() {
                return instance.hasUserProjectId();
            }

            /**
             * <pre>
             * A per-profile, per-project ID used only for events of type SEQUENCE. A
             * device may have multiple profiles and multiple projects (ie cros-events).
             * This ID is generated by applying HMAC on a locally-generated GUID (which is
             * never sent) with a per-profile, per-project key. The first 8 bytes of the
             * resulting string will be emitted.
             * For events recorded when a user is not logged in or for events recorded
             * outside of Chrome, this field should be empty.
             * Since the per-profile, per-project keys are rotated every 120 days, this
             * means that the |user_project_id| will also change every N days. For more
             * details on how keys are rotated, refer to go/structured-metrics.
             * </pre>
             *
             * <code>optional fixed64 user_project_id = 7;</code>
             *
             * @return The userProjectId.
             */
            @java.lang.Override
            public long getUserProjectId() {
                return instance.getUserProjectId();
            }

            /**
             * <pre>
             * A per-profile, per-project ID used only for events of type SEQUENCE. A
             * device may have multiple profiles and multiple projects (ie cros-events).
             * This ID is generated by applying HMAC on a locally-generated GUID (which is
             * never sent) with a per-profile, per-project key. The first 8 bytes of the
             * resulting string will be emitted.
             * For events recorded when a user is not logged in or for events recorded
             * outside of Chrome, this field should be empty.
             * Since the per-profile, per-project keys are rotated every 120 days, this
             * means that the |user_project_id| will also change every N days. For more
             * details on how keys are rotated, refer to go/structured-metrics.
             * </pre>
             *
             * <code>optional fixed64 user_project_id = 7;</code>
             *
             * @param value The userProjectId to set.
             * @return This builder for chaining.
             */
            public Builder setUserProjectId(long value) {
                copyOnWrite();
                instance.setUserProjectId(value);
                return this;
            }

            /**
             * <pre>
             * A per-profile, per-project ID used only for events of type SEQUENCE. A
             * device may have multiple profiles and multiple projects (ie cros-events).
             * This ID is generated by applying HMAC on a locally-generated GUID (which is
             * never sent) with a per-profile, per-project key. The first 8 bytes of the
             * resulting string will be emitted.
             * For events recorded when a user is not logged in or for events recorded
             * outside of Chrome, this field should be empty.
             * Since the per-profile, per-project keys are rotated every 120 days, this
             * means that the |user_project_id| will also change every N days. For more
             * details on how keys are rotated, refer to go/structured-metrics.
             * </pre>
             *
             * <code>optional fixed64 user_project_id = 7;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearUserProjectId() {
                copyOnWrite();
                instance.clearUserProjectId();
                return this;
            }

            /**
             * <pre>
             * A device-wide, per-project ID used only for events of type SEQUENCE. This
             * ID is rotated every 120 days.
             * This ID is generated by hashing a locally-generated GUID (which is never
             * sent) with a per-device, per-project key. The first 8 bytes of thee
             * resulting string will be emitted.
             * Since the per-device, per-project keys are rotated every N (default 90)
             * days, this means that the |device_project_id| will also change every N
             * days. For more details on how keys are rotated, refer to
             * go/structured-metrics.
             * Note that an event may have both a |device_project_id| and
             * |user_project_id|.
             * </pre>
             *
             * <code>optional fixed64 device_project_id = 8;</code>
             *
             * @return Whether the deviceProjectId field is set.
             */
            @java.lang.Override
            public boolean hasDeviceProjectId() {
                return instance.hasDeviceProjectId();
            }

            /**
             * <pre>
             * A device-wide, per-project ID used only for events of type SEQUENCE. This
             * ID is rotated every 120 days.
             * This ID is generated by hashing a locally-generated GUID (which is never
             * sent) with a per-device, per-project key. The first 8 bytes of thee
             * resulting string will be emitted.
             * Since the per-device, per-project keys are rotated every N (default 90)
             * days, this means that the |device_project_id| will also change every N
             * days. For more details on how keys are rotated, refer to
             * go/structured-metrics.
             * Note that an event may have both a |device_project_id| and
             * |user_project_id|.
             * </pre>
             *
             * <code>optional fixed64 device_project_id = 8;</code>
             *
             * @return The deviceProjectId.
             */
            @java.lang.Override
            public long getDeviceProjectId() {
                return instance.getDeviceProjectId();
            }

            /**
             * <pre>
             * A device-wide, per-project ID used only for events of type SEQUENCE. This
             * ID is rotated every 120 days.
             * This ID is generated by hashing a locally-generated GUID (which is never
             * sent) with a per-device, per-project key. The first 8 bytes of thee
             * resulting string will be emitted.
             * Since the per-device, per-project keys are rotated every N (default 90)
             * days, this means that the |device_project_id| will also change every N
             * days. For more details on how keys are rotated, refer to
             * go/structured-metrics.
             * Note that an event may have both a |device_project_id| and
             * |user_project_id|.
             * </pre>
             *
             * <code>optional fixed64 device_project_id = 8;</code>
             *
             * @param value The deviceProjectId to set.
             * @return This builder for chaining.
             */
            public Builder setDeviceProjectId(long value) {
                copyOnWrite();
                instance.setDeviceProjectId(value);
                return this;
            }

            /**
             * <pre>
             * A device-wide, per-project ID used only for events of type SEQUENCE. This
             * ID is rotated every 120 days.
             * This ID is generated by hashing a locally-generated GUID (which is never
             * sent) with a per-device, per-project key. The first 8 bytes of thee
             * resulting string will be emitted.
             * Since the per-device, per-project keys are rotated every N (default 90)
             * days, this means that the |device_project_id| will also change every N
             * days. For more details on how keys are rotated, refer to
             * go/structured-metrics.
             * Note that an event may have both a |device_project_id| and
             * |user_project_id|.
             * </pre>
             *
             * <code>optional fixed64 device_project_id = 8;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearDeviceProjectId() {
                copyOnWrite();
                instance.clearDeviceProjectId();
                return this;
            }

            /**
             * <pre>
             * The first 8 bytes of the MD5 hash of the event's name as a string. Each
             * name is defined in src/tools/metrics/structured/structured.xml, and this
             * will be the hash of one of those.
             * </pre>
             *
             * <code>optional fixed64 event_name_hash = 2;</code>
             *
             * @return Whether the eventNameHash field is set.
             */
            @java.lang.Override
            public boolean hasEventNameHash() {
                return instance.hasEventNameHash();
            }

            /**
             * <pre>
             * The first 8 bytes of the MD5 hash of the event's name as a string. Each
             * name is defined in src/tools/metrics/structured/structured.xml, and this
             * will be the hash of one of those.
             * </pre>
             *
             * <code>optional fixed64 event_name_hash = 2;</code>
             *
             * @return The eventNameHash.
             */
            @java.lang.Override
            public long getEventNameHash() {
                return instance.getEventNameHash();
            }

            /**
             * <pre>
             * The first 8 bytes of the MD5 hash of the event's name as a string. Each
             * name is defined in src/tools/metrics/structured/structured.xml, and this
             * will be the hash of one of those.
             * </pre>
             *
             * <code>optional fixed64 event_name_hash = 2;</code>
             *
             * @param value The eventNameHash to set.
             * @return This builder for chaining.
             */
            public Builder setEventNameHash(long value) {
                copyOnWrite();
                instance.setEventNameHash(value);
                return this;
            }

            /**
             * <pre>
             * The first 8 bytes of the MD5 hash of the event's name as a string. Each
             * name is defined in src/tools/metrics/structured/structured.xml, and this
             * will be the hash of one of those.
             * </pre>
             *
             * <code>optional fixed64 event_name_hash = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEventNameHash() {
                copyOnWrite();
                instance.clearEventNameHash();
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            @java.lang.Override
            public java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> getMetricsList() {
                return java.util.Collections.unmodifiableList(instance.getMetricsList());
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            @java.lang.Override
            public int getMetricsCount() {
                return instance.getMetricsCount();
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric getMetrics(int index) {
                return instance.getMetrics(index);
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder setMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
                copyOnWrite();
                instance.setMetrics(index, value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder setMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.Builder builderForValue) {
                copyOnWrite();
                instance.setMetrics(index, builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder addMetrics(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
                copyOnWrite();
                instance.addMetrics(value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder addMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric value) {
                copyOnWrite();
                instance.addMetrics(index, value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder addMetrics(org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.Builder builderForValue) {
                copyOnWrite();
                instance.addMetrics(builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder addMetrics(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.Builder builderForValue) {
                copyOnWrite();
                instance.addMetrics(index, builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder addAllMetrics(java.lang.Iterable<? extends org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric> values) {
                copyOnWrite();
                instance.addAllMetrics(values);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder clearMetrics() {
                copyOnWrite();
                instance.clearMetrics();
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto.Metric metrics = 3;</code>
             */
            public Builder removeMetrics(int index) {
                copyOnWrite();
                instance.removeMetrics(index);
                return this;
            }

            /**
             * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
             *
             * @return Whether the eventType field is set.
             */
            @java.lang.Override
            public boolean hasEventType() {
                return instance.hasEventType();
            }

            /**
             * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
             *
             * @return The eventType.
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType getEventType() {
                return instance.getEventType();
            }

            /**
             * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
             *
             * @param value The enum numeric value on the wire for eventType to set.
             * @return This builder for chaining.
             */
            public Builder setEventType(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType value) {
                copyOnWrite();
                instance.setEventType(value);
                return this;
            }

            /**
             * <code>optional .metrics.StructuredEventProto.EventType event_type = 4;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEventType() {
                copyOnWrite();
                instance.clearEventType();
                return this;
            }

            /**
             * <pre>
             * The project name hash is the first 8 bytes of the MD5 hash of the project
             * name that is defined in src/tools/metrics/structured/structured.xml.
             * </pre>
             *
             * <code>optional fixed64 project_name_hash = 5;</code>
             *
             * @return Whether the projectNameHash field is set.
             */
            @java.lang.Override
            public boolean hasProjectNameHash() {
                return instance.hasProjectNameHash();
            }

            /**
             * <pre>
             * The project name hash is the first 8 bytes of the MD5 hash of the project
             * name that is defined in src/tools/metrics/structured/structured.xml.
             * </pre>
             *
             * <code>optional fixed64 project_name_hash = 5;</code>
             *
             * @return The projectNameHash.
             */
            @java.lang.Override
            public long getProjectNameHash() {
                return instance.getProjectNameHash();
            }

            /**
             * <pre>
             * The project name hash is the first 8 bytes of the MD5 hash of the project
             * name that is defined in src/tools/metrics/structured/structured.xml.
             * </pre>
             *
             * <code>optional fixed64 project_name_hash = 5;</code>
             *
             * @param value The projectNameHash to set.
             * @return This builder for chaining.
             */
            public Builder setProjectNameHash(long value) {
                copyOnWrite();
                instance.setProjectNameHash(value);
                return this;
            }

            /**
             * <pre>
             * The project name hash is the first 8 bytes of the MD5 hash of the project
             * name that is defined in src/tools/metrics/structured/structured.xml.
             * </pre>
             *
             * <code>optional fixed64 project_name_hash = 5;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearProjectNameHash() {
                copyOnWrite();
                instance.clearProjectNameHash();
                return this;
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            @java.lang.Override
            public boolean hasEventSequenceMetadata() {
                return instance.hasEventSequenceMetadata();
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata getEventSequenceMetadata() {
                return instance.getEventSequenceMetadata();
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            public Builder setEventSequenceMetadata(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata value) {
                copyOnWrite();
                instance.setEventSequenceMetadata(value);
                return this;
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            public Builder setEventSequenceMetadata(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata.Builder builderForValue) {
                copyOnWrite();
                instance.setEventSequenceMetadata(builderForValue.build());
                return this;
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            public Builder mergeEventSequenceMetadata(org.chromium.components.metrics.StructuredData.StructuredEventProto.EventSequenceMetadata value) {
                copyOnWrite();
                instance.mergeEventSequenceMetadata(value);
                return this;
            }

            /**
             * <pre>
             * Metadata associated with event type SEQUENCE. This field will be stripped
             * if the event is not of type SEQUENCE.
             * </pre>
             *
             * <code>optional .metrics.StructuredEventProto.EventSequenceMetadata event_sequence_metadata = 6;</code>
             */
            public Builder clearEventSequenceMetadata() {
                copyOnWrite();
                instance.clearEventSequenceMetadata();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:metrics.StructuredEventProto)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite.MethodToInvoke method, java.lang.Object arg0, java.lang.Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new org.chromium.components.metrics.StructuredData.StructuredEventProto();
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case BUILD_MESSAGE_INFO: {
                    java.lang.Object[] objects = new java.lang.Object[]{"bitField0_", "profileEventId_", "eventNameHash_", "metrics_", org.chromium.components.metrics.StructuredData.StructuredEventProto.Metric.class, "eventType_", org.chromium.components.metrics.StructuredData.StructuredEventProto.EventType.internalGetVerifier(), "projectNameHash_", "eventSequenceMetadata_", "userProjectId_", "deviceProjectId_",};
                    java.lang.String info = "\u0001\b\u0000\u0001\u0001\b\b\u0000\u0001\u0000\u0001\u1005\u0000\u0002\u1005\u0003" + "\u0003\u001b\u0004\u100c\u0004\u0005\u1005\u0005\u0006\u1009\u0006\u0007\u1005\u0001" + "\b\u1005\u0002";
                    return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    com.google.protobuf.Parser<org.chromium.components.metrics.StructuredData.StructuredEventProto> parser = PARSER;
                    if (parser == null) {
                        synchronized (org.chromium.components.metrics.StructuredData.StructuredEventProto.class) {
                            parser = PARSER;
                            if (parser == null) {
                                parser = new DefaultInstanceBasedParser<org.chromium.components.metrics.StructuredData.StructuredEventProto>(DEFAULT_INSTANCE);
                                PARSER = parser;
                            }
                        }
                    }
                    return parser;
                }
                case GET_MEMOIZED_IS_INITIALIZED: {
                    return (byte) 1;
                }
                case SET_MEMOIZED_IS_INITIALIZED: {
                    return null;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto)
        private static final org.chromium.components.metrics.StructuredData.StructuredEventProto DEFAULT_INSTANCE;

        static {
            StructuredEventProto defaultInstance = new StructuredEventProto();
            // New instances are implicitly immutable so no need to make
            // immutable.
            DEFAULT_INSTANCE = defaultInstance;
            com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(StructuredEventProto.class, defaultInstance);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredEventProto getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<StructuredEventProto> PARSER;

        public static com.google.protobuf.Parser<StructuredEventProto> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface StructuredDataProtoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:metrics.StructuredDataProto)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto> getEventsList();

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        org.chromium.components.metrics.StructuredData.StructuredEventProto getEvents(int index);

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        int getEventsCount();

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         *
         * @return Whether the isDeviceEnrolled field is set.
         */
        @java.lang.Deprecated
        boolean hasIsDeviceEnrolled();

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         *
         * @return The isDeviceEnrolled.
         */
        @java.lang.Deprecated
        boolean getIsDeviceEnrolled();

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         *
         * @return Whether the deviceSegment field is set.
         */
        boolean hasDeviceSegment();

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         *
         * @return The deviceSegment.
         */
        org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment getDeviceSegment();
    }

    /**
     * <pre>
     * The top-level proto for structured metrics. One StructuredDataProto is
     * uploaded per UMA upload containing structured metrics. Contains all
     * structured events for that upload, and any other metadata.
     * Next tag: 4
     * </pre>
     * <p>
     * Protobuf type {@code metrics.StructuredDataProto}
     */
    public static final class StructuredDataProto extends com.google.protobuf.GeneratedMessageLite<StructuredDataProto, StructuredDataProto.Builder> implements
            // @@protoc_insertion_point(message_implements:metrics.StructuredDataProto)
            StructuredDataProtoOrBuilder {
        private StructuredDataProto() {
            events_ = emptyProtobufList();
        }

        /**
         * <pre>
         * The broader market segment the device is used.
         * </pre>
         * <p>
         * Protobuf enum {@code metrics.StructuredDataProto.DeviceSegment}
         */
        public enum DeviceSegment implements com.google.protobuf.Internal.EnumLite {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <code>CONSUMER = 1;</code>
             */
            CONSUMER(1),
            /**
             * <code>EDUCATION = 2;</code>
             */
            EDUCATION(2),
            /**
             * <code>ENTERPRISE = 3;</code>
             */
            ENTERPRISE(3),
            ;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <code>CONSUMER = 1;</code>
             */
            public static final int CONSUMER_VALUE = 1;
            /**
             * <code>EDUCATION = 2;</code>
             */
            public static final int EDUCATION_VALUE = 2;
            /**
             * <code>ENTERPRISE = 3;</code>
             */
            public static final int ENTERPRISE_VALUE = 3;


            @java.lang.Override
            public final int getNumber() {
                return value;
            }

            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static DeviceSegment valueOf(int value) {
                return forNumber(value);
            }

            public static DeviceSegment forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return CONSUMER;
                    case 2:
                        return EDUCATION;
                    case 3:
                        return ENTERPRISE;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<DeviceSegment> internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<DeviceSegment> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<DeviceSegment>() {
                @java.lang.Override
                public DeviceSegment findValueByNumber(int number) {
                    return DeviceSegment.forNumber(number);
                }
            };

            public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
                return DeviceSegmentVerifier.INSTANCE;
            }

            private static final class DeviceSegmentVerifier implements com.google.protobuf.Internal.EnumVerifier {
                static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new DeviceSegmentVerifier();

                @java.lang.Override
                public boolean isInRange(int number) {
                    return DeviceSegment.forNumber(number) != null;
                }
            }

            private final int value;

            DeviceSegment(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:metrics.StructuredDataProto.DeviceSegment)
        }

        private int bitField0_;
        public static final int EVENTS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.StructuredData.StructuredEventProto> events_;

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto> getEventsList() {
            return events_;
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        public java.util.List<? extends org.chromium.components.metrics.StructuredData.StructuredEventProtoOrBuilder> getEventsOrBuilderList() {
            return events_;
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        @java.lang.Override
        public int getEventsCount() {
            return events_.size();
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        @java.lang.Override
        public org.chromium.components.metrics.StructuredData.StructuredEventProto getEvents(int index) {
            return events_.get(index);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        public org.chromium.components.metrics.StructuredData.StructuredEventProtoOrBuilder getEventsOrBuilder(int index) {
            return events_.get(index);
        }

        private void ensureEventsIsMutable() {
            com.google.protobuf.Internal.ProtobufList<org.chromium.components.metrics.StructuredData.StructuredEventProto> tmp = events_;
            if (!tmp.isModifiable()) {
                events_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
            }
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void setEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
            value.getClass();
            ensureEventsIsMutable();
            events_.set(index, value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void addEvents(org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
            value.getClass();
            ensureEventsIsMutable();
            events_.add(value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void addEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
            value.getClass();
            ensureEventsIsMutable();
            events_.add(index, value);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void addAllEvents(java.lang.Iterable<? extends org.chromium.components.metrics.StructuredData.StructuredEventProto> values) {
            ensureEventsIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(values, events_);
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void clearEvents() {
            events_ = emptyProtobufList();
        }

        /**
         * <code>repeated .metrics.StructuredEventProto events = 1;</code>
         */
        private void removeEvents(int index) {
            ensureEventsIsMutable();
            events_.remove(index);
        }

        public static final int IS_DEVICE_ENROLLED_FIELD_NUMBER = 2;
        private boolean isDeviceEnrolled_;

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         *
         * @return Whether the isDeviceEnrolled field is set.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public boolean hasIsDeviceEnrolled() {
            return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         *
         * @return The isDeviceEnrolled.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public boolean getIsDeviceEnrolled() {
            return isDeviceEnrolled_;
        }

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         *
         * @param value The isDeviceEnrolled to set.
         */
        private void setIsDeviceEnrolled(boolean value) {
            bitField0_ |= 0x00000001;
            isDeviceEnrolled_ = value;
        }

        /**
         * <pre>
         * Whether the device is enrolled and may be controlled by a policy.
         * Deprecated as of Chrome M119, use |device_segment| to determine if the
         * device is enrolled.
         * </pre>
         *
         * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
         */
        private void clearIsDeviceEnrolled() {
            bitField0_ = (bitField0_ & ~0x00000001);
            isDeviceEnrolled_ = false;
        }

        public static final int DEVICE_SEGMENT_FIELD_NUMBER = 3;
        private int deviceSegment_;

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         *
         * @return Whether the deviceSegment field is set.
         */
        @java.lang.Override
        public boolean hasDeviceSegment() {
            return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         *
         * @return The deviceSegment.
         */
        @java.lang.Override
        public org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment getDeviceSegment() {
            org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment result = org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment.forNumber(deviceSegment_);
            return result == null ? org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment.UNKNOWN : result;
        }

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         *
         * @param value The deviceSegment to set.
         */
        private void setDeviceSegment(org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment value) {
            deviceSegment_ = value.getNumber();
            bitField0_ |= 0x00000002;
        }

        /**
         * <pre>
         * The segment policy of the device.
         * </pre>
         *
         * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
         */
        private void clearDeviceSegment() {
            bitField0_ = (bitField0_ & ~0x00000002);
            deviceSegment_ = 0;
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(org.chromium.components.metrics.StructuredData.StructuredDataProto prototype) {
            return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         * <pre>
         * The top-level proto for structured metrics. One StructuredDataProto is
         * uploaded per UMA upload containing structured metrics. Contains all
         * structured events for that upload, and any other metadata.
         * Next tag: 4
         * </pre>
         * <p>
         * Protobuf type {@code metrics.StructuredDataProto}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageLite.Builder<org.chromium.components.metrics.StructuredData.StructuredDataProto, Builder> implements
                // @@protoc_insertion_point(builder_implements:metrics.StructuredDataProto)
                org.chromium.components.metrics.StructuredData.StructuredDataProtoOrBuilder {
            // Construct using org.chromium.components.metrics.StructuredData.StructuredDataProto.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            @java.lang.Override
            public java.util.List<org.chromium.components.metrics.StructuredData.StructuredEventProto> getEventsList() {
                return java.util.Collections.unmodifiableList(instance.getEventsList());
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            @java.lang.Override
            public int getEventsCount() {
                return instance.getEventsCount();
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredEventProto getEvents(int index) {
                return instance.getEvents(index);
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder setEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
                copyOnWrite();
                instance.setEvents(index, value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder setEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Builder builderForValue) {
                copyOnWrite();
                instance.setEvents(index, builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder addEvents(org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
                copyOnWrite();
                instance.addEvents(value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder addEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto value) {
                copyOnWrite();
                instance.addEvents(index, value);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder addEvents(org.chromium.components.metrics.StructuredData.StructuredEventProto.Builder builderForValue) {
                copyOnWrite();
                instance.addEvents(builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder addEvents(int index, org.chromium.components.metrics.StructuredData.StructuredEventProto.Builder builderForValue) {
                copyOnWrite();
                instance.addEvents(index, builderForValue.build());
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder addAllEvents(java.lang.Iterable<? extends org.chromium.components.metrics.StructuredData.StructuredEventProto> values) {
                copyOnWrite();
                instance.addAllEvents(values);
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder clearEvents() {
                copyOnWrite();
                instance.clearEvents();
                return this;
            }

            /**
             * <code>repeated .metrics.StructuredEventProto events = 1;</code>
             */
            public Builder removeEvents(int index) {
                copyOnWrite();
                instance.removeEvents(index);
                return this;
            }

            /**
             * <pre>
             * Whether the device is enrolled and may be controlled by a policy.
             * Deprecated as of Chrome M119, use |device_segment| to determine if the
             * device is enrolled.
             * </pre>
             *
             * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
             *
             * @return Whether the isDeviceEnrolled field is set.
             */
            @java.lang.Override
            @java.lang.Deprecated
            public boolean hasIsDeviceEnrolled() {
                return instance.hasIsDeviceEnrolled();
            }

            /**
             * <pre>
             * Whether the device is enrolled and may be controlled by a policy.
             * Deprecated as of Chrome M119, use |device_segment| to determine if the
             * device is enrolled.
             * </pre>
             *
             * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
             *
             * @return The isDeviceEnrolled.
             */
            @java.lang.Override
            @java.lang.Deprecated
            public boolean getIsDeviceEnrolled() {
                return instance.getIsDeviceEnrolled();
            }

            /**
             * <pre>
             * Whether the device is enrolled and may be controlled by a policy.
             * Deprecated as of Chrome M119, use |device_segment| to determine if the
             * device is enrolled.
             * </pre>
             *
             * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
             *
             * @param value The isDeviceEnrolled to set.
             * @return This builder for chaining.
             */
            @java.lang.Deprecated
            public Builder setIsDeviceEnrolled(boolean value) {
                copyOnWrite();
                instance.setIsDeviceEnrolled(value);
                return this;
            }

            /**
             * <pre>
             * Whether the device is enrolled and may be controlled by a policy.
             * Deprecated as of Chrome M119, use |device_segment| to determine if the
             * device is enrolled.
             * </pre>
             *
             * <code>optional bool is_device_enrolled = 2 [deprecated = true];</code>
             *
             * @return This builder for chaining.
             */
            @java.lang.Deprecated
            public Builder clearIsDeviceEnrolled() {
                copyOnWrite();
                instance.clearIsDeviceEnrolled();
                return this;
            }

            /**
             * <pre>
             * The segment policy of the device.
             * </pre>
             *
             * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
             *
             * @return Whether the deviceSegment field is set.
             */
            @java.lang.Override
            public boolean hasDeviceSegment() {
                return instance.hasDeviceSegment();
            }

            /**
             * <pre>
             * The segment policy of the device.
             * </pre>
             *
             * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
             *
             * @return The deviceSegment.
             */
            @java.lang.Override
            public org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment getDeviceSegment() {
                return instance.getDeviceSegment();
            }

            /**
             * <pre>
             * The segment policy of the device.
             * </pre>
             *
             * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
             *
             * @param value The enum numeric value on the wire for deviceSegment to set.
             * @return This builder for chaining.
             */
            public Builder setDeviceSegment(org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment value) {
                copyOnWrite();
                instance.setDeviceSegment(value);
                return this;
            }

            /**
             * <pre>
             * The segment policy of the device.
             * </pre>
             *
             * <code>optional .metrics.StructuredDataProto.DeviceSegment device_segment = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearDeviceSegment() {
                copyOnWrite();
                instance.clearDeviceSegment();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:metrics.StructuredDataProto)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(com.google.protobuf.GeneratedMessageLite.MethodToInvoke method, java.lang.Object arg0, java.lang.Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new org.chromium.components.metrics.StructuredData.StructuredDataProto();
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case BUILD_MESSAGE_INFO: {
                    java.lang.Object[] objects = new java.lang.Object[]{"bitField0_", "events_", org.chromium.components.metrics.StructuredData.StructuredEventProto.class, "isDeviceEnrolled_", "deviceSegment_", org.chromium.components.metrics.StructuredData.StructuredDataProto.DeviceSegment.internalGetVerifier(),};
                    java.lang.String info = "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u001b\u0002\u1007" + "\u0000\u0003\u100c\u0001";
                    return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    com.google.protobuf.Parser<org.chromium.components.metrics.StructuredData.StructuredDataProto> parser = PARSER;
                    if (parser == null) {
                        synchronized (org.chromium.components.metrics.StructuredData.StructuredDataProto.class) {
                            parser = PARSER;
                            if (parser == null) {
                                parser = new DefaultInstanceBasedParser<org.chromium.components.metrics.StructuredData.StructuredDataProto>(DEFAULT_INSTANCE);
                                PARSER = parser;
                            }
                        }
                    }
                    return parser;
                }
                case GET_MEMOIZED_IS_INITIALIZED: {
                    return (byte) 1;
                }
                case SET_MEMOIZED_IS_INITIALIZED: {
                    return null;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:metrics.StructuredDataProto)
        private static final org.chromium.components.metrics.StructuredData.StructuredDataProto DEFAULT_INSTANCE;

        static {
            StructuredDataProto defaultInstance = new StructuredDataProto();
            // New instances are implicitly immutable so no need to make
            // immutable.
            DEFAULT_INSTANCE = defaultInstance;
            com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(StructuredDataProto.class, defaultInstance);
        }

        public static org.chromium.components.metrics.StructuredData.StructuredDataProto getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<StructuredDataProto> PARSER;

        public static com.google.protobuf.Parser<StructuredDataProto> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
