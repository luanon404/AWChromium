// FileSystemAccessManager.java is auto generated by mojom_bindings_generator.py, do not edit


// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/file_system_access/file_system_access_manager.mojom
//

package org.chromium.blink.mojom;


public interface FileSystemAccessManager extends org.chromium.mojo.bindings.Interface {



    interface Proxy extends FileSystemAccessManager, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<FileSystemAccessManager, FileSystemAccessManager.Proxy> MANAGER = FileSystemAccessManager_Internal.MANAGER;

    void getSandboxedFileSystem(

GetSandboxedFileSystem_Response callback);

    interface GetSandboxedFileSystem_Response extends org.chromium.mojo.bindings.Callbacks.Callback2<FileSystemAccessError, FileSystemAccessDirectoryHandle> { }


    void chooseEntries(
FilePickerOptions options, 
ChooseEntries_Response callback);

    interface ChooseEntries_Response extends org.chromium.mojo.bindings.Callbacks.Callback2<FileSystemAccessError, FileSystemAccessEntry[]> { }


    void getFileHandleFromToken(
FileSystemAccessTransferToken token, org.chromium.mojo.bindings.InterfaceRequest<FileSystemAccessFileHandle> fileHandle);


    void getDirectoryHandleFromToken(
FileSystemAccessTransferToken token, org.chromium.mojo.bindings.InterfaceRequest<FileSystemAccessDirectoryHandle> directoryHandle);


    void getEntryFromDataTransferToken(
FileSystemAccessDataTransferToken token, 
GetEntryFromDataTransferToken_Response callback);

    interface GetEntryFromDataTransferToken_Response extends org.chromium.mojo.bindings.Callbacks.Callback2<FileSystemAccessError, FileSystemAccessEntry> { }


    void bindObserverHost(
org.chromium.mojo.bindings.InterfaceRequest<FileSystemAccessObserverHost> observerHost);


}
